00:02:46 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(120) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ID\":2,\"Type\":0,\"ItemsPerPage\":20,\"ItemsOffset\":0}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:02:46 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(4) {
  ["ID"]=>
  int(2)
  ["Type"]=>
  int(0)
  ["ItemsPerPage"]=>
  int(20)
  ["ItemsOffset"]=>
  int(0)
}

00:02:46 (engine) [SQL]->Connecting to database:
00:02:46 (engine) [SQL]->Connection OK!
00:02:46 (engine) test 
00:02:46 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=2 and pp.ConfirmedDate is not null and p.Type=0 GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 20
00:02:46 (engine) [SQL]->Exec [Done]:Resource id #16
00:02:46 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:02:46 (engine) [SQL]->Exec [Done]:Resource id #19
00:02:46 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:02:46 (engine) [SQL]->Exec [Done]:Resource id #22
00:02:46 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:02:46 (engine) [SQL]->Exec [Done]:Resource id #25
00:02:46 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(2) {
          [0]=>
          string(17) "Free Everything 1"
          [1]=>
          string(17) "Free Everything 2"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "18"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:03:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:03:13 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:03:13 (engine) [SQL]->Connecting to database:
00:03:13 (engine) [SQL]->Connection OK!
00:03:13 (engine) test 
00:03:13 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:03:13 (engine) [SQL]->Exec [Done]:Resource id #16
00:03:13 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:03:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:03:13 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:03:13 (engine) [SQL]->Connecting to database:
00:03:13 (engine) [SQL]->Connection OK!
00:03:13 (engine) test 
00:03:13 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:03:13 (engine) [SQL]->Exec [Done]:Resource id #16
00:03:13 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:03:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:03:14 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:03:14 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:03:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(117) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1,\"Type\":0}}"
}

00:03:14 (engine) [JSON (Institution.TaxProgramUsersGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
  ["Type"]=>
  int(0)
}

00:03:14 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:06:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:06:26 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:06:26 (engine) [SQL]->Connecting to database:
00:06:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:06:26 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:06:26 (engine) [SQL]->Connection OK!
00:06:26 (engine) test 
00:06:26 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:06:26 (engine) [SQL]->Connecting to database:
00:06:26 (engine) [SQL]->Connection OK!
00:06:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:26 (engine) test 
00:06:26 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:06:26 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:06:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:26 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:06:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:06:28 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:06:28 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:06:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(120) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1,\"Type\":0}}"
}

00:06:28 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
  ["Type"]=>
  int(0)
}

00:06:28 (engine) [SQL]->Connecting to database:
00:06:28 (engine) [SQL]->Connection OK!
00:06:28 (engine) test 
00:06:28 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null and p.Type=0 GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:06:28 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:28 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:28 (engine) [SQL]->Exec [Done]:Resource id #19
00:06:28 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:28 (engine) [SQL]->Exec [Done]:Resource id #22
00:06:28 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:28 (engine) [SQL]->Exec [Done]:Resource id #25
00:06:28 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:06:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
}

00:06:40 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:06:40 (engine) [SQL]->Connecting to database:
00:06:40 (engine) [SQL]->Connection OK!
00:06:40 (engine) test 
00:06:40 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null and p.Type= GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:06:40 (engine) [SQL]->Exec [Done]:
00:06:40 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:06:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:06:41 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:06:41 (engine) [SQL]->Connecting to database:
00:06:41 (engine) [SQL]->Connection OK!
00:06:41 (engine) test 
00:06:41 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null and p.Type= GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:06:41 (engine) [SQL]->Exec [Done]:
00:06:41 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:06:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:06:47 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:06:47 (engine) [SQL]->Connecting to database:
00:06:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:06:47 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:06:47 (engine) [SQL]->Connection OK!
00:06:47 (engine) [SQL]->Connecting to database:
00:06:47 (engine) test 
00:06:47 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:06:47 (engine) [SQL]->Connection OK!
00:06:47 (engine) test 
00:06:47 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:47 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:06:47 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:06:47 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:47 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:06:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:06:49 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:06:49 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:06:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(120) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1,\"Type\":0}}"
}

00:06:49 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
  ["Type"]=>
  int(0)
}

00:06:49 (engine) [SQL]->Connecting to database:
00:06:49 (engine) [SQL]->Connection OK!
00:06:49 (engine) test 
00:06:49 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null and p.Type=0 GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:06:49 (engine) [SQL]->Exec [Done]:Resource id #16
00:06:49 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:49 (engine) [SQL]->Exec [Done]:Resource id #19
00:06:49 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:49 (engine) [SQL]->Exec [Done]:Resource id #22
00:06:49 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:06:49 (engine) [SQL]->Exec [Done]:Resource id #25
00:06:49 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:07:27 (engine) [REQUEST] (Array) <-array(0) {
}

00:07:27 (engine) [RESPONSE ()]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(38) "JSON error: failed to decode JSON data"
  ["total"]=>
  NULL
}

00:09:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:09:54 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:09:54 (engine) [SQL]->Connecting to database:
00:09:54 (engine) [SQL]->Connection OK!
00:09:54 (engine) test 
00:09:54 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:09:54 (engine) [SQL]->Exec [Done]:Resource id #16
00:09:54 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:09:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:09:54 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:09:54 (engine) [SQL]->Connecting to database:
00:09:54 (engine) [SQL]->Connection OK!
00:09:54 (engine) test 
00:09:54 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:09:54 (engine) [SQL]->Exec [Done]:Resource id #16
00:09:54 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:09:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:09:55 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:09:55 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:09:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:09:55 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:09:55 (engine) [SQL]->Connecting to database:
00:09:55 (engine) [SQL]->Connection OK!
00:09:55 (engine) test 
00:09:55 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null and p.Type= GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:09:55 (engine) [SQL]->Exec [Done]:
00:09:55 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:13:44 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(120) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ID\":2,\"Type\":0,\"ItemsPerPage\":20,\"ItemsOffset\":0}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:13:44 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(4) {
  ["ID"]=>
  int(2)
  ["Type"]=>
  int(0)
  ["ItemsPerPage"]=>
  int(20)
  ["ItemsOffset"]=>
  int(0)
}

00:13:44 (engine) [SQL]->Connecting to database:
00:13:44 (engine) [SQL]->Connection OK!
00:13:44 (engine) test 
00:13:44 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=2 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 20
00:13:44 (engine) [SQL]->Exec [Done]:Resource id #16
00:13:44 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:13:44 (engine) [SQL]->Exec [Done]:Resource id #19
00:13:44 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:13:44 (engine) [SQL]->Exec [Done]:Resource id #22
00:13:44 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:13:44 (engine) [SQL]->Exec [Done]:Resource id #25
00:13:44 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(2) {
          [0]=>
          string(17) "Free Everything 1"
          [1]=>
          string(17) "Free Everything 2"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "18"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:14:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:14:07 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:14:07 (engine) [SQL]->Connecting to database:
00:14:07 (engine) [SQL]->Connection OK!
00:14:07 (engine) test 
00:14:07 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:14:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:14:07 (engine) [SQL]->Exec [Done]:Resource id #16
00:14:07 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:14:07 (engine) [SQL]->Connecting to database:
00:14:07 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:14:07 (engine) [SQL]->Connection OK!
00:14:07 (engine) test 
00:14:07 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:14:07 (engine) [SQL]->Exec [Done]:Resource id #16
00:14:07 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:14:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:14:09 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:14:09 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:14:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:14:09 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:14:09 (engine) [SQL]->Connecting to database:
00:14:09 (engine) [SQL]->Connection OK!
00:14:09 (engine) test 
00:14:09 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:14:09 (engine) [SQL]->Exec [Done]:Resource id #16
00:14:09 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:14:09 (engine) [SQL]->Exec [Done]:Resource id #19
00:14:09 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:14:09 (engine) [SQL]->Exec [Done]:Resource id #22
00:14:09 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:14:09 (engine) [SQL]->Exec [Done]:Resource id #25
00:14:09 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:15:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:15:27 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:15:27 (engine) [SQL]->Connecting to database:
00:15:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:15:27 (engine) [SQL]->Connection OK!
00:15:27 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:15:27 (engine) test 
00:15:27 (engine) [SQL]->Connecting to database:
00:15:27 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:15:27 (engine) [SQL]->Connection OK!
00:15:27 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:27 (engine) test 
00:15:27 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:15:27 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:15:27 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:27 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:15:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:15:29 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:15:29 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:15:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:15:29 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:15:29 (engine) [SQL]->Connecting to database:
00:15:29 (engine) [SQL]->Connection OK!
00:15:29 (engine) test 
00:15:29 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:15:29 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:29 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:29 (engine) [SQL]->Exec [Done]:Resource id #19
00:15:29 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:29 (engine) [SQL]->Exec [Done]:Resource id #22
00:15:29 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:29 (engine) [SQL]->Exec [Done]:Resource id #25
00:15:29 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:15:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
}

00:15:31 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:15:31 (engine) [SQL]->Connecting to database:
00:15:31 (engine) [SQL]->Connection OK!
00:15:31 (engine) test 
00:15:31 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:15:31 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:31 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:15:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:15:32 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:15:32 (engine) [SQL]->Connecting to database:
00:15:32 (engine) [SQL]->Connection OK!
00:15:32 (engine) test 
00:15:32 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:15:32 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:32 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:32 (engine) [SQL]->Exec [Done]:Resource id #19
00:15:32 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:32 (engine) [SQL]->Exec [Done]:Resource id #22
00:15:32 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:32 (engine) [SQL]->Exec [Done]:Resource id #25
00:15:32 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:15:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:15:37 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:15:37 (engine) [SQL]->Connecting to database:
00:15:37 (engine) [SQL]->Connection OK!
00:15:37 (engine) test 
00:15:37 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:15:37 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:37 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:15:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:15:37 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:15:37 (engine) [SQL]->Connecting to database:
00:15:37 (engine) [SQL]->Connection OK!
00:15:37 (engine) test 
00:15:37 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:15:37 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:37 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:15:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:15:40 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:15:40 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:15:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:15:40 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:15:40 (engine) [SQL]->Connecting to database:
00:15:40 (engine) [SQL]->Connection OK!
00:15:40 (engine) test 
00:15:40 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:15:40 (engine) [SQL]->Exec [Done]:Resource id #16
00:15:40 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:40 (engine) [SQL]->Exec [Done]:Resource id #19
00:15:40 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:40 (engine) [SQL]->Exec [Done]:Resource id #22
00:15:40 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:15:40 (engine) [SQL]->Exec [Done]:Resource id #25
00:15:40 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:17:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:17:16 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:17:16 (engine) [SQL]->Connecting to database:
00:17:16 (engine) [SQL]->Connection OK!
00:17:16 (engine) test 
00:17:16 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:17:16 (engine) [SQL]->Exec [Done]:Resource id #16
00:17:16 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:17:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:17:19 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:17:19 (engine) [SQL]->Connecting to database:
00:17:19 (engine) [SQL]->Connection OK!
00:17:19 (engine) test 
00:17:19 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:17:19 (engine) [SQL]->Exec [Done]:Resource id #16
00:17:19 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:17:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:17:22 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:17:22 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:18:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:18:06 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:18:06 (engine) [SQL]->Connecting to database:
00:18:06 (engine) [SQL]->Connection OK!
00:18:06 (engine) test 
00:18:06 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:18:06 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:06 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:06 (engine) [SQL]->Exec [Done]:Resource id #19
00:18:06 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:06 (engine) [SQL]->Exec [Done]:Resource id #22
00:18:06 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:06 (engine) [SQL]->Exec [Done]:Resource id #25
00:18:06 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:18:41 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:18:41 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:18:41 (engine) [SQL]->Connecting to database:
00:18:41 (engine) [SQL]->Connection OK!
00:18:41 (engine) test 
00:18:41 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:18:41 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:41 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:18:41 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:18:41 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:18:41 (engine) [SQL]->Connecting to database:
00:18:41 (engine) [SQL]->Connection OK!
00:18:41 (engine) test 
00:18:41 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:18:41 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:41 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:18:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:18:55 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:18:55 (engine) [SQL]->Connecting to database:
00:18:55 (engine) [SQL]->Connection OK!
00:18:55 (engine) test 
00:18:55 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:18:55 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:55 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:18:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:18:55 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:18:55 (engine) [SQL]->Connecting to database:
00:18:55 (engine) [SQL]->Connection OK!
00:18:55 (engine) test 
00:18:55 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:18:55 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:55 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:18:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:18:58 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:18:58 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:18:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:18:58 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:18:58 (engine) [SQL]->Connecting to database:
00:18:58 (engine) [SQL]->Connection OK!
00:18:58 (engine) test 
00:18:58 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:18:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:18:58 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:58 (engine) [SQL]->Exec [Done]:Resource id #19
00:18:58 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:58 (engine) [SQL]->Exec [Done]:Resource id #22
00:18:58 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:18:58 (engine) [SQL]->Exec [Done]:Resource id #25
00:18:58 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:20:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
}

00:20:08 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:20:08 (engine) [SQL]->Connecting to database:
00:20:08 (engine) [SQL]->Connection OK!
00:20:08 (engine) test 
00:20:08 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:20:08 (engine) [SQL]->Exec [Done]:Resource id #16
00:20:08 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:20:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:20:11 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:20:11 (engine) [SQL]->Connecting to database:
00:20:11 (engine) [SQL]->Connection OK!
00:20:11 (engine) test 
00:20:11 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:20:11 (engine) [SQL]->Exec [Done]:Resource id #16
00:20:11 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:11 (engine) [SQL]->Exec [Done]:Resource id #19
00:20:11 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:11 (engine) [SQL]->Exec [Done]:Resource id #22
00:20:11 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:11 (engine) [SQL]->Exec [Done]:Resource id #25
00:20:11 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:20:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:20:33 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:20:33 (engine) [SQL]->Connecting to database:
00:20:33 (engine) [SQL]->Connection OK!
00:20:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:20:33 (engine) test 
00:20:33 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:20:33 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:20:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:20:33 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:20:33 (engine) [SQL]->Connecting to database:
00:20:33 (engine) [SQL]->Connection OK!
00:20:33 (engine) test 
00:20:33 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:20:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:20:33 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:20:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:20:34 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:20:34 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:20:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:20:34 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:20:34 (engine) [SQL]->Connecting to database:
00:20:34 (engine) [SQL]->Connection OK!
00:20:34 (engine) test 
00:20:34 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:20:34 (engine) [SQL]->Exec [Done]:Resource id #16
00:20:34 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:34 (engine) [SQL]->Exec [Done]:Resource id #19
00:20:34 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:34 (engine) [SQL]->Exec [Done]:Resource id #22
00:20:34 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:20:34 (engine) [SQL]->Exec [Done]:Resource id #25
00:20:34 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:23:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:23:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:23:30 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:23:30 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:23:30 (engine) [SQL]->Connecting to database:
00:23:30 (engine) [SQL]->Connecting to database:
00:23:30 (engine) [SQL]->Connection OK!
00:23:30 (engine) [SQL]->Connection OK!
00:23:30 (engine) test 
00:23:30 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:23:30 (engine) test 
00:23:30 (engine) [SQL]->Exec [Done]:Resource id #16
00:23:30 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:23:30 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:23:30 (engine) [SQL]->Exec [Done]:Resource id #16
00:23:30 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:23:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:23:32 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:23:32 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:23:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:23:32 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:23:32 (engine) [SQL]->Connecting to database:
00:23:32 (engine) [SQL]->Connection OK!
00:23:32 (engine) test 
00:23:32 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:23:32 (engine) [SQL]->Exec [Done]:Resource id #16
00:23:32 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:23:32 (engine) [SQL]->Exec [Done]:Resource id #19
00:23:32 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:23:32 (engine) [SQL]->Exec [Done]:Resource id #22
00:23:32 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:23:32 (engine) [SQL]->Exec [Done]:Resource id #25
00:23:32 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:24:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:24:43 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:24:43 (engine) [SQL]->Connecting to database:
00:24:43 (engine) [SQL]->Connection OK!
00:24:43 (engine) test 
00:24:43 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:24:43 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:43 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:24:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:24:43 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:24:43 (engine) [SQL]->Connecting to database:
00:24:43 (engine) [SQL]->Connection OK!
00:24:43 (engine) test 
00:24:43 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:24:43 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:43 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:24:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:24:44 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:24:44 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:24:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:24:44 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:24:44 (engine) [SQL]->Connecting to database:
00:24:44 (engine) [SQL]->Connection OK!
00:24:44 (engine) test 
00:24:44 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:24:44 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:44 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:44 (engine) [SQL]->Exec [Done]:Resource id #19
00:24:44 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:44 (engine) [SQL]->Exec [Done]:Resource id #22
00:24:44 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:44 (engine) [SQL]->Exec [Done]:Resource id #25
00:24:44 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:24:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
}

00:24:47 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:24:47 (engine) [SQL]->Connecting to database:
00:24:47 (engine) [SQL]->Connection OK!
00:24:47 (engine) test 
00:24:47 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:24:47 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:47 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:24:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":20,\"ID\":1}}"
}

00:24:48 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(20)
  ["ID"]=>
  int(1)
}

00:24:48 (engine) [SQL]->Connecting to database:
00:24:48 (engine) [SQL]->Connection OK!
00:24:48 (engine) test 
00:24:48 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 20 , 10
00:24:48 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:48 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:24:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
}

00:24:48 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:24:48 (engine) [SQL]->Connecting to database:
00:24:48 (engine) [SQL]->Connection OK!
00:24:48 (engine) test 
00:24:48 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:24:48 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:48 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:24:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:24:49 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:24:49 (engine) [SQL]->Connecting to database:
00:24:49 (engine) [SQL]->Connection OK!
00:24:49 (engine) test 
00:24:49 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:24:49 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:49 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:49 (engine) [SQL]->Exec [Done]:Resource id #19
00:24:49 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:49 (engine) [SQL]->Exec [Done]:Resource id #22
00:24:49 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:49 (engine) [SQL]->Exec [Done]:Resource id #25
00:24:49 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:24:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:24:53 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:24:53 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:24:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:24:53 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:24:53 (engine) [SQL]->Connecting to database:
00:24:53 (engine) [SQL]->Connection OK!
00:24:53 (engine) test 
00:24:53 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:24:53 (engine) [SQL]->Exec [Done]:Resource id #16
00:24:53 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:53 (engine) [SQL]->Exec [Done]:Resource id #19
00:24:53 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:53 (engine) [SQL]->Exec [Done]:Resource id #22
00:24:53 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:24:53 (engine) [SQL]->Exec [Done]:Resource id #25
00:24:53 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(1) {
      [0]=>
      array(6) {
        ["ID"]=>
        string(2) "12"
        ["Name"]=>
        string(16) "Vehicula Lacinia"
        ["Code"]=>
        string(6) "T10012"
        ["Programs"]=>
        array(3) {
          [0]=>
          string(12) "Free Stuff 1"
          [1]=>
          string(12) "Free Stuff 2"
          [2]=>
          string(12) "Free Stuff 3"
        }
        ["BenefitsAccumulated"]=>
        string(1) "0"
        ["Total payment"]=>
        string(2) "17"
      }
    }
  }
  ["total"]=>
  int(1)
}

00:27:49 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(120) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ID\":2,\"Type\":0,\"ItemsPerPage\":20,\"ItemsOffset\":0}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:27:49 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(4) {
  ["ID"]=>
  int(2)
  ["Type"]=>
  int(0)
  ["ItemsPerPage"]=>
  int(20)
  ["ItemsOffset"]=>
  int(0)
}

00:27:49 (engine) [SQL]->Connecting to database:
00:27:49 (engine) [SQL]->Connection OK!
00:27:49 (engine) test 
00:27:49 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=2 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 20
00:27:49 (engine) [SQL]->Exec [Done]:Resource id #16
00:27:49 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:27:49 (engine) [SQL]->Exec [Done]:Resource id #19
00:27:49 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:27:49 (engine) [SQL]->Exec [Done]:Resource id #22
00:27:49 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=2
00:27:49 (engine) [SQL]->Exec [Done]:Resource id #25
00:27:49 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(2) {
        [0]=>
        string(17) "Free Everything 1"
        [1]=>
        string(17) "Free Everything 2"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "18"
    }
  }
  ["total"]=>
  int(1)
}

00:28:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:28:26 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:28:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:28:26 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:28:26 (engine) [SQL]->Connecting to database:
00:28:26 (engine) [SQL]->Connecting to database:
00:28:26 (engine) [SQL]->Connection OK!
00:28:26 (engine) [SQL]->Connection OK!
00:28:26 (engine) test 
00:28:26 (engine) test 
00:28:26 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:28:26 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:28:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:28:26 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:28:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:28:26 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:28:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:28:27 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:28:27 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:28:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:28:28 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:28:28 (engine) [SQL]->Connecting to database:
00:28:28 (engine) [SQL]->Connection OK!
00:28:28 (engine) test 
00:28:28 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:28:28 (engine) [SQL]->Exec [Done]:Resource id #16
00:28:28 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:28:28 (engine) [SQL]->Exec [Done]:Resource id #19
00:28:28 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:28:28 (engine) [SQL]->Exec [Done]:Resource id #22
00:28:28 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:28:28 (engine) [SQL]->Exec [Done]:Resource id #25
00:28:28 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:29:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:29:08 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:29:08 (engine) [SQL]->Connecting to database:
00:29:08 (engine) [SQL]->Connection OK!
00:29:08 (engine) test 
00:29:08 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:29:08 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:08 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:29:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:29:08 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:29:08 (engine) [SQL]->Connecting to database:
00:29:08 (engine) [SQL]->Connection OK!
00:29:08 (engine) test 
00:29:08 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:29:08 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:08 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:29:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:29:10 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:29:10 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:29:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:29:10 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:29:10 (engine) [SQL]->Connecting to database:
00:29:10 (engine) [SQL]->Connection OK!
00:29:10 (engine) test 
00:29:10 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:29:10 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:10 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:10 (engine) [SQL]->Exec [Done]:Resource id #19
00:29:10 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:10 (engine) [SQL]->Exec [Done]:Resource id #22
00:29:10 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:10 (engine) [SQL]->Exec [Done]:Resource id #25
00:29:10 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:29:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:29:28 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:29:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:29:28 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:29:28 (engine) [SQL]->Connecting to database:
00:29:28 (engine) [SQL]->Connecting to database:
00:29:28 (engine) [SQL]->Connection OK!
00:29:28 (engine) [SQL]->Connection OK!
00:29:28 (engine) test 
00:29:28 (engine) test 
00:29:28 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:29:28 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:29:28 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:28 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:28 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:29:28 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:29:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:29:30 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:29:30 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:29:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:29:30 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:29:30 (engine) [SQL]->Connecting to database:
00:29:30 (engine) [SQL]->Connection OK!
00:29:30 (engine) test 
00:29:30 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:29:30 (engine) [SQL]->Exec [Done]:Resource id #16
00:29:30 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:30 (engine) [SQL]->Exec [Done]:Resource id #19
00:29:30 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:30 (engine) [SQL]->Exec [Done]:Resource id #22
00:29:30 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:29:30 (engine) [SQL]->Exec [Done]:Resource id #25
00:29:30 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:30:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:30:41 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:30:41 (engine) [SQL]->Connecting to database:
00:30:41 (engine) [SQL]->Connection OK!
00:30:41 (engine) test 
00:30:41 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:30:41 (engine) [SQL]->Exec [Done]:Resource id #16
00:30:41 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:30:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:30:41 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:30:41 (engine) [SQL]->Connecting to database:
00:30:41 (engine) [SQL]->Connection OK!
00:30:41 (engine) test 
00:30:41 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:30:41 (engine) [SQL]->Exec [Done]:Resource id #16
00:30:41 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:30:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:30:43 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:30:43 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:30:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:30:43 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:30:43 (engine) [SQL]->Connecting to database:
00:30:43 (engine) [SQL]->Connection OK!
00:30:43 (engine) test 
00:30:43 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:30:43 (engine) [SQL]->Exec [Done]:Resource id #16
00:30:43 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:30:43 (engine) [SQL]->Exec [Done]:Resource id #19
00:30:43 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:30:43 (engine) [SQL]->Exec [Done]:Resource id #22
00:30:43 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:30:43 (engine) [SQL]->Exec [Done]:Resource id #25
00:30:43 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:31:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:31:03 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:31:03 (engine) [SQL]->Connecting to database:
00:31:03 (engine) [SQL]->Connection OK!
00:31:03 (engine) test 
00:31:03 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:31:03 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:03 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:31:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:31:03 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:31:03 (engine) [SQL]->Connecting to database:
00:31:03 (engine) [SQL]->Connection OK!
00:31:03 (engine) test 
00:31:03 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:31:03 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:03 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:31:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:31:04 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:31:04 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:31:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:31:04 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:31:04 (engine) [SQL]->Connecting to database:
00:31:04 (engine) [SQL]->Connection OK!
00:31:04 (engine) test 
00:31:04 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:31:04 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:04 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:04 (engine) [SQL]->Exec [Done]:Resource id #19
00:31:04 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:04 (engine) [SQL]->Exec [Done]:Resource id #22
00:31:04 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:04 (engine) [SQL]->Exec [Done]:Resource id #25
00:31:04 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:31:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:31:37 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:31:37 (engine) [SQL]->Connecting to database:
00:31:37 (engine) [SQL]->Connection OK!
00:31:37 (engine) test 
00:31:37 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:31:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:31:37 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:31:37 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:37 (engine) [SQL]->Connecting to database:
00:31:37 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:31:37 (engine) [SQL]->Connection OK!
00:31:37 (engine) test 
00:31:37 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:31:37 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:37 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:31:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:31:38 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:31:38 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:31:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:31:39 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:31:39 (engine) [SQL]->Connecting to database:
00:31:39 (engine) [SQL]->Connection OK!
00:31:39 (engine) test 
00:31:39 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:31:39 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:39 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:39 (engine) [SQL]->Exec [Done]:Resource id #19
00:31:39 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:39 (engine) [SQL]->Exec [Done]:Resource id #22
00:31:39 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:31:39 (engine) [SQL]->Exec [Done]:Resource id #25
00:31:39 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:31:57 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:31:57 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:31:57 (engine) [SQL]->Connecting to database:
00:31:57 (engine) [SQL]->Connection OK!
00:31:57 (engine) test 
00:31:57 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:31:57 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:57 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:31:57 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:31:57 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:31:57 (engine) [SQL]->Connecting to database:
00:31:57 (engine) [SQL]->Connection OK!
00:31:57 (engine) test 
00:31:57 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:31:57 (engine) [SQL]->Exec [Done]:Resource id #16
00:31:57 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:32:04 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:32:04 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:32:04 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:32:04 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:32:04 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:32:04 (engine) [SQL]->Connecting to database:
00:32:04 (engine) [SQL]->Connection OK!
00:32:04 (engine) test 
00:32:04 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:32:04 (engine) [SQL]->Exec [Done]:Resource id #16
00:32:04 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:04 (engine) [SQL]->Exec [Done]:Resource id #19
00:32:04 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:04 (engine) [SQL]->Exec [Done]:Resource id #22
00:32:04 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:04 (engine) [SQL]->Exec [Done]:Resource id #25
00:32:04 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:32:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:32:58 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:32:58 (engine) [SQL]->Connecting to database:
00:32:58 (engine) [SQL]->Connection OK!
00:32:58 (engine) test 
00:32:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:32:58 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:32:58 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:32:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:32:58 (engine) [SQL]->Connecting to database:
00:32:58 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:32:58 (engine) [SQL]->Connection OK!
00:32:58 (engine) test 
00:32:58 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:32:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:32:58 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:32:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:32:59 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:32:59 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:32:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:32:59 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:32:59 (engine) [SQL]->Connecting to database:
00:32:59 (engine) [SQL]->Connection OK!
00:32:59 (engine) test 
00:32:59 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:32:59 (engine) [SQL]->Exec [Done]:Resource id #16
00:32:59 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:59 (engine) [SQL]->Exec [Done]:Resource id #19
00:32:59 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:59 (engine) [SQL]->Exec [Done]:Resource id #22
00:32:59 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:32:59 (engine) [SQL]->Exec [Done]:Resource id #25
00:32:59 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:33:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:33:17 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:33:17 (engine) [SQL]->Connecting to database:
00:33:17 (engine) [SQL]->Connection OK!
00:33:17 (engine) test 
00:33:17 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:33:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:33:17 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:33:17 (engine) [SQL]->Exec [Done]:Resource id #16
00:33:17 (engine) [SQL]->Connecting to database:
00:33:17 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:33:17 (engine) [SQL]->Connection OK!
00:33:17 (engine) test 
00:33:17 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:33:17 (engine) [SQL]->Exec [Done]:Resource id #16
00:33:17 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:33:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:33:19 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:33:19 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:33:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:33:19 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:33:19 (engine) [SQL]->Connecting to database:
00:33:19 (engine) [SQL]->Connection OK!
00:33:19 (engine) test 
00:33:19 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:33:19 (engine) [SQL]->Exec [Done]:Resource id #16
00:33:19 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:33:19 (engine) [SQL]->Exec [Done]:Resource id #19
00:33:19 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:33:19 (engine) [SQL]->Exec [Done]:Resource id #22
00:33:19 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:33:19 (engine) [SQL]->Exec [Done]:Resource id #25
00:33:19 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:34:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:34:15 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:34:15 (engine) [SQL]->Connecting to database:
00:34:15 (engine) [SQL]->Connection OK!
00:34:15 (engine) test 
00:34:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:34:15 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:34:15 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:34:15 (engine) [SQL]->Connecting to database:
00:34:15 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:15 (engine) [SQL]->Connection OK!
00:34:15 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:34:15 (engine) test 
00:34:15 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:34:15 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:15 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:34:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:34:16 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:34:16 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:34:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:34:17 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:34:17 (engine) [SQL]->Connecting to database:
00:34:17 (engine) [SQL]->Connection OK!
00:34:17 (engine) test 
00:34:17 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:34:17 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:17 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:17 (engine) [SQL]->Exec [Done]:Resource id #19
00:34:17 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:17 (engine) [SQL]->Exec [Done]:Resource id #22
00:34:17 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:17 (engine) [SQL]->Exec [Done]:Resource id #25
00:34:17 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:34:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:34:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:34:53 (engine) [SQL]->Connecting to database:
00:34:53 (engine) [SQL]->Connection OK!
00:34:53 (engine) test 
00:34:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:34:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:34:53 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:53 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:34:53 (engine) [SQL]->Connecting to database:
00:34:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:34:53 (engine) [SQL]->Connection OK!
00:34:53 (engine) test 
00:34:53 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:34:53 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:53 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:34:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:34:54 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:34:54 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:34:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:34:54 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:34:54 (engine) [SQL]->Connecting to database:
00:34:54 (engine) [SQL]->Connection OK!
00:34:54 (engine) test 
00:34:54 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:34:54 (engine) [SQL]->Exec [Done]:Resource id #16
00:34:54 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:54 (engine) [SQL]->Exec [Done]:Resource id #19
00:34:54 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:54 (engine) [SQL]->Exec [Done]:Resource id #22
00:34:54 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:34:54 (engine) [SQL]->Exec [Done]:Resource id #25
00:34:54 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:35:00 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:00 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:35:00 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:35:00 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:00 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:35:00 (engine) [SQL]->Connecting to database:
00:35:00 (engine) [SQL]->Connection OK!
00:35:00 (engine) test 
00:35:00 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:35:00 (engine) [SQL]->Exec [Done]:Resource id #16
00:35:00 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:35:00 (engine) [SQL]->Exec [Done]:Resource id #19
00:35:00 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:35:00 (engine) [SQL]->Exec [Done]:Resource id #22
00:35:00 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:35:00 (engine) [SQL]->Exec [Done]:Resource id #25
00:35:00 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:35:53 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:35:53 (engine) [SQL]->Connecting to database:
00:35:53 (engine) [SQL]->Connection OK!
00:35:53 (engine) test 
00:35:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:35:53 (engine) [SQL]->Exec [Done]:Resource id #16
00:35:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:35:53 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:53 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:35:53 (engine) [SQL]->Connecting to database:
00:35:53 (engine) [SQL]->Connection OK!
00:35:53 (engine) test 
00:35:53 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:35:53 (engine) [SQL]->Exec [Done]:Resource id #16
00:35:53 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:35:55 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:55 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(1)

00:35:55 (engine) [SQL]->Connecting to database:
00:35:55 (engine) [SQL]->Connection OK!
00:35:55 (engine) test 
00:35:55 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=1
00:35:55 (engine) [SQL]->Exec [Done]:Resource id #16
00:35:55 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "1"
    ["TaxYearID"]=>
    string(2) "91"
    ["InstitutionID"]=>
    string(1) "1"
    ["ConfirmedDate"]=>
    string(10) "2011-01-21"
  }
  ["total"]=>
  int(1)
}

00:35:55 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:35:55 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:35:55 (engine) [SQL]->Connecting to database:
00:35:55 (engine) [SQL]->Connection OK!
00:35:55 (engine) test 
00:35:55 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =1 LIMIT 0 , 10
00:35:55 (engine) [SQL]->Exec [Done]:Resource id #16
00:35:55 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "10"
      ["Name"]=>
      string(3) "wqe"
      ["PredictedBudget"]=>
      string(2) "21"
      ["PredictedUsers"]=>
      string(2) "12"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [4]=>
    array(9) {
      ["ID"]=>
      string(2) "11"
      ["Name"]=>
      string(5) "Test1"
      ["PredictedBudget"]=>
      string(3) "200"
      ["PredictedUsers"]=>
      string(3) "120"
      ["BenefitsExpireInYears"]=>
      string(1) "4"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:36:05 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:36:05 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:36:05 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:36:05 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(1)

00:36:05 (engine) [SQL]->Connecting to database:
00:36:05 (engine) [SQL]->Connecting to database:
00:36:05 (engine) [SQL]->Connection OK!
00:36:05 (engine) [SQL]->Connection OK!
00:36:05 (engine) test 
00:36:05 (engine) test 
00:36:05 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =1 LIMIT 0 , 10
00:36:05 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=1
00:36:05 (engine) [SQL]->Exec [Done]:Resource id #16
00:36:05 (engine) [SQL]->Exec [Done]:Resource id #16
00:36:05 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "1"
    ["TaxYearID"]=>
    string(2) "91"
    ["InstitutionID"]=>
    string(1) "1"
    ["ConfirmedDate"]=>
    string(10) "2011-01-21"
  }
  ["total"]=>
  int(1)
}

00:36:05 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "10"
      ["Name"]=>
      string(3) "wqe"
      ["PredictedBudget"]=>
      string(2) "21"
      ["PredictedUsers"]=>
      string(2) "12"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [4]=>
    array(9) {
      ["ID"]=>
      string(2) "11"
      ["Name"]=>
      string(5) "Test1"
      ["PredictedBudget"]=>
      string(3) "200"
      ["PredictedUsers"]=>
      string(3) "120"
      ["BenefitsExpireInYears"]=>
      string(1) "4"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:39:05 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:39:05 (engine) [SQL]->Connecting to database:
00:39:05 (engine) [SQL]->Connection OK!
00:39:05 (engine) test 
00:39:05 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:39:05 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:05 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:39:05 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:39:05 (engine) [SQL]->Connecting to database:
00:39:05 (engine) [SQL]->Connection OK!
00:39:05 (engine) test 
00:39:05 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:39:05 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:05 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:39:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":1}"
}

00:39:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:39:06 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(1)

00:39:06 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:39:06 (engine) [SQL]->Connecting to database:
00:39:06 (engine) [SQL]->Connecting to database:
00:39:06 (engine) [SQL]->Connection OK!
00:39:06 (engine) [SQL]->Connection OK!
00:39:06 (engine) test 
00:39:06 (engine) test 
00:39:06 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=1
00:39:06 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =1 LIMIT 0 , 10
00:39:06 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:06 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:06 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "1"
    ["TaxYearID"]=>
    string(2) "91"
    ["InstitutionID"]=>
    string(1) "1"
    ["ConfirmedDate"]=>
    string(10) "2011-01-21"
  }
  ["total"]=>
  int(1)
}

00:39:06 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "10"
      ["Name"]=>
      string(3) "wqe"
      ["PredictedBudget"]=>
      string(2) "21"
      ["PredictedUsers"]=>
      string(2) "12"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [4]=>
    array(9) {
      ["ID"]=>
      string(2) "11"
      ["Name"]=>
      string(5) "Test1"
      ["PredictedBudget"]=>
      string(3) "200"
      ["PredictedUsers"]=>
      string(3) "120"
      ["BenefitsExpireInYears"]=>
      string(1) "4"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":1}"
}

00:39:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:39:16 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:39:16 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(1)

00:39:16 (engine) [SQL]->Connecting to database:
00:39:16 (engine) [SQL]->Connecting to database:
00:39:16 (engine) [SQL]->Connection OK!
00:39:16 (engine) test 
00:39:16 (engine) [SQL]->Connection OK!
00:39:16 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =1 LIMIT 0 , 10
00:39:16 (engine) test 
00:39:16 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=1
00:39:16 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:16 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:16 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "10"
      ["Name"]=>
      string(3) "wqe"
      ["PredictedBudget"]=>
      string(2) "21"
      ["PredictedUsers"]=>
      string(2) "12"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [4]=>
    array(9) {
      ["ID"]=>
      string(2) "11"
      ["Name"]=>
      string(5) "Test1"
      ["PredictedBudget"]=>
      string(3) "200"
      ["PredictedUsers"]=>
      string(3) "120"
      ["BenefitsExpireInYears"]=>
      string(1) "4"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:16 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "1"
    ["TaxYearID"]=>
    string(2) "91"
    ["InstitutionID"]=>
    string(1) "1"
    ["ConfirmedDate"]=>
    string(10) "2011-01-21"
  }
  ["total"]=>
  int(1)
}

00:39:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:39:19 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:39:19 (engine) [SQL]->Connecting to database:
00:39:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:39:19 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:39:19 (engine) [SQL]->Connection OK!
00:39:19 (engine) [SQL]->Connecting to database:
00:39:19 (engine) test 
00:39:19 (engine) [SQL]->Connection OK!
00:39:19 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:39:19 (engine) test 
00:39:19 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:39:19 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:19 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:19 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:39:19 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:39:44 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:39:44 (engine) [SQL]->Connecting to database:
00:39:44 (engine) [SQL]->Connection OK!
00:39:44 (engine) test 
00:39:44 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:39:44 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:44 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:39:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:39:44 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:39:44 (engine) [SQL]->Connecting to database:
00:39:44 (engine) [SQL]->Connection OK!
00:39:44 (engine) test 
00:39:44 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:39:44 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:44 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:39:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":1}"
}

00:39:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:39:57 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(1)

00:39:57 (engine) [SQL]->Connecting to database:
00:39:57 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:39:57 (engine) [SQL]->Connection OK!
00:39:57 (engine) test 
00:39:57 (engine) [SQL]->Connecting to database:
00:39:57 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=1
00:39:57 (engine) [SQL]->Connection OK!
00:39:57 (engine) test 
00:39:57 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =1 LIMIT 0 , 10
00:39:57 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:57 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "1"
    ["TaxYearID"]=>
    string(2) "91"
    ["InstitutionID"]=>
    string(1) "1"
    ["ConfirmedDate"]=>
    string(10) "2011-01-21"
  }
  ["total"]=>
  int(1)
}

00:39:57 (engine) [SQL]->Exec [Done]:Resource id #16
00:39:57 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "10"
      ["Name"]=>
      string(3) "wqe"
      ["PredictedBudget"]=>
      string(2) "21"
      ["PredictedUsers"]=>
      string(2) "12"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [4]=>
    array(9) {
      ["ID"]=>
      string(2) "11"
      ["Name"]=>
      string(5) "Test1"
      ["PredictedBudget"]=>
      string(3) "200"
      ["PredictedUsers"]=>
      string(3) "120"
      ["BenefitsExpireInYears"]=>
      string(1) "4"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:40:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
}

00:40:09 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:40:09 (engine) [SQL]->Connecting to database:
00:40:09 (engine) [SQL]->Connection OK!
00:40:09 (engine) test 
00:40:09 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:40:09 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:09 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:40:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
}

00:40:09 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:40:09 (engine) [SQL]->Connecting to database:
00:40:09 (engine) [SQL]->Connection OK!
00:40:09 (engine) test 
00:40:09 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:40:09 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:09 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:40:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
}

00:40:10 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:40:10 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:40:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
}

00:40:10 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:40:10 (engine) [SQL]->Connecting to database:
00:40:10 (engine) [SQL]->Connection OK!
00:40:10 (engine) test 
00:40:10 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:40:10 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:10 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:10 (engine) [SQL]->Exec [Done]:Resource id #19
00:40:10 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:10 (engine) [SQL]->Exec [Done]:Resource id #22
00:40:10 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:10 (engine) [SQL]->Exec [Done]:Resource id #25
00:40:10 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:40:56 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:40:56 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(1)
}

00:40:56 (engine) [SQL]->Connecting to database:
00:40:56 (engine) [SQL]->Connection OK!
00:40:56 (engine) test 
00:40:56 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 1
00:40:56 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:40:56 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:56 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(20) "Faucibus Ullamcorper"
      ["Code"]=>
      string(6) "T10001"
      ["Income"]=>
      string(6) "147538"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1996-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:40:56 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(1)
}

00:40:56 (engine) [SQL]->Connecting to database:
00:40:56 (engine) [SQL]->Connection OK!
00:40:56 (engine) test 
00:40:56 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =1 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 1 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:40:56 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:56 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:40:58 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:40:58 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:40:58 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:40:58 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:40:58 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:40:58 (engine) [SQL]->Connecting to database:
00:40:58 (engine) [SQL]->Connection OK!
00:40:58 (engine) test 
00:40:58 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:40:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:40:58 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:58 (engine) [SQL]->Exec [Done]:Resource id #19
00:40:58 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:58 (engine) [SQL]->Exec [Done]:Resource id #22
00:40:58 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:40:58 (engine) [SQL]->Exec [Done]:Resource id #25
00:40:58 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:41:29 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:41:29 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:41:29 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:41:29 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:41:29 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:41:29 (engine) [SQL]->Connecting to database:
00:41:29 (engine) [SQL]->Connection OK!
00:41:29 (engine) test 
00:41:29 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:41:29 (engine) [SQL]->Exec [Done]:Resource id #16
00:41:29 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:41:29 (engine) [SQL]->Exec [Done]:Resource id #19
00:41:29 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:41:29 (engine) [SQL]->Exec [Done]:Resource id #22
00:41:29 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:41:29 (engine) [SQL]->Exec [Done]:Resource id #25
00:41:29 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:42:29 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:42:29 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:42:29 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:42:29 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:42:29 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:42:29 (engine) [SQL]->Connecting to database:
00:42:29 (engine) [SQL]->Connection OK!
00:42:29 (engine) test 
00:42:29 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:42:29 (engine) [SQL]->Exec [Done]:Resource id #16
00:42:29 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:42:29 (engine) [SQL]->Exec [Done]:Resource id #19
00:42:29 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:42:29 (engine) [SQL]->Exec [Done]:Resource id #22
00:42:29 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:42:29 (engine) [SQL]->Exec [Done]:Resource id #25
00:42:29 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:45:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
}

00:45:38 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

00:45:38 (engine) [SQL]->Connecting to database:
00:45:38 (engine) [SQL]->Connection OK!
00:45:38 (engine) test 
00:45:38 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
00:45:38 (engine) [SQL]->Exec [Done]:Resource id #16
00:45:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
}

00:45:38 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:45:38 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

00:45:38 (engine) [SQL]->Connecting to database:
00:45:38 (engine) [SQL]->Connection OK!
00:45:38 (engine) test 
00:45:38 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:45:38 (engine) [SQL]->Exec [Done]:Resource id #16
00:45:38 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:45:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":4}"
}

00:45:44 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(4)

00:45:44 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:45:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":4}}"
}

00:45:44 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(4)
}

00:45:44 (engine) [SQL]->Connecting to database:
00:45:44 (engine) [SQL]->Connection OK!
00:45:44 (engine) test 
00:45:44 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:45:44 (engine) [SQL]->Exec [Done]:Resource id #16
00:45:44 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:45:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":5}"
}

00:45:58 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(5)

00:45:58 (engine) [SQL]->Connecting to database:
00:45:58 (engine) [SQL]->Connection OK!
00:45:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

00:45:58 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

00:45:58 (engine) test 
00:45:58 (engine) [SQL]->Connecting to database:
00:45:58 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=5
00:45:58 (engine) [SQL]->Connection OK!
00:45:58 (engine) test 
00:45:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:45:58 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
00:45:58 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "5"
    ["TaxYearID"]=>
    string(2) "92"
    ["InstitutionID"]=>
    string(1) "4"
    ["ConfirmedDate"]=>
    string(10) "2012-01-21"
  }
  ["total"]=>
  int(1)
}

00:45:58 (engine) [SQL]->Exec [Done]:Resource id #16
00:45:58 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:46:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(256) "{\"action\":\"Institution.TaxProgramChange\",\"data\":{\"InstitutionBudgetTable\":5,\"Name\":\"dsf\",\"PredictedBudget\":\"3\",\"PredictedUsers\":\"2\",\"BenefitsExpireInYears\":\"3\",\"MinimumYears\":\"2\",\"BenefitsApplyTo\":0,\"ExtendsProgramID\":null}}"
}

00:46:06 (engine) [JSON (Institution.TaxProgramChange)]->array(8) {
  ["InstitutionBudgetTable"]=>
  int(5)
  ["Name"]=>
  string(3) "dsf"
  ["PredictedBudget"]=>
  string(1) "3"
  ["PredictedUsers"]=>
  string(1) "2"
  ["BenefitsExpireInYears"]=>
  string(1) "3"
  ["MinimumYears"]=>
  string(1) "2"
  ["BenefitsApplyTo"]=>
  int(0)
  ["ExtendsProgramID"]=>
  NULL
}

00:46:06 (engine) [SQL]->Connecting to database:
00:46:06 (engine) [SQL]->Connection OK!
00:46:06 (engine) test 
00:46:06 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable(InstitutionBudgetID, Name, PredictedBudget, PredictedUsers, 
			BenefitsExpireInYears, MinimumYears, BenefitsApplyTo) VALUES (5,'dsf',3,2,3,2,0)
00:46:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

00:46:06 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

00:46:06 (engine) [SQL]->Connecting to database:
00:46:06 (engine) [SQL]->Connection OK!
00:46:06 (engine) test 
00:46:06 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
00:46:06 (engine) [SQL]->Exec [Done]:1
00:46:06 (engine) [SQL]->Exec [Done]:Resource id #16
00:46:06 (engine) [RESPONSE (Institution.TaxProgramChange)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

00:46:06 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(3) "dsf"
      ["PredictedBudget"]=>
      string(1) "3"
      ["PredictedUsers"]=>
      string(1) "2"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:46:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":5}"
}

00:46:10 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(5)

00:46:10 (engine) [SQL]->Connecting to database:
00:46:10 (engine) [SQL]->Connection OK!
00:46:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

00:46:10 (engine) test 
00:46:10 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

00:46:10 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=5
00:46:10 (engine) [SQL]->Connecting to database:
00:46:10 (engine) [SQL]->Exec [Done]:Resource id #16
00:46:10 (engine) [SQL]->Connection OK!
00:46:10 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "5"
    ["TaxYearID"]=>
    string(2) "92"
    ["InstitutionID"]=>
    string(1) "4"
    ["ConfirmedDate"]=>
    string(10) "2012-01-21"
  }
  ["total"]=>
  int(1)
}

00:46:10 (engine) test 
00:46:10 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
00:46:10 (engine) [SQL]->Exec [Done]:Resource id #16
00:46:10 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(3) "dsf"
      ["PredictedBudget"]=>
      string(1) "3"
      ["PredictedUsers"]=>
      string(1) "2"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:47:01 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:47:01 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:47:01 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:47:01 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:47:01 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:47:01 (engine) [SQL]->Connecting to database:
00:47:01 (engine) [SQL]->Connection OK!
00:47:01 (engine) test 
00:47:01 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:47:01 (engine) [SQL]->Exec [Done]:Resource id #16
00:47:01 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:47:01 (engine) [SQL]->Exec [Done]:Resource id #19
00:47:01 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:47:01 (engine) [SQL]->Exec [Done]:Resource id #22
00:47:01 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:47:01 (engine) [SQL]->Exec [Done]:Resource id #25
00:47:01 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:50:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":5}"
}

00:50:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

00:50:15 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(5)

00:50:15 (engine) [SQL]->Connecting to database:
00:50:15 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

00:50:15 (engine) [SQL]->Connection OK!
00:50:15 (engine) test 
00:50:15 (engine) [SQL]->Connecting to database:
00:50:15 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=5
00:50:15 (engine) [SQL]->Exec [Done]:Resource id #16
00:50:15 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "5"
    ["TaxYearID"]=>
    string(2) "92"
    ["InstitutionID"]=>
    string(1) "4"
    ["ConfirmedDate"]=>
    string(10) "2012-01-21"
  }
  ["total"]=>
  int(1)
}

00:50:15 (engine) [SQL]->Connection OK!
00:50:15 (engine) test 
00:50:15 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
00:50:15 (engine) [SQL]->Exec [Done]:Resource id #16
00:50:15 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(3) "dsf"
      ["PredictedBudget"]=>
      string(1) "3"
      ["PredictedUsers"]=>
      string(1) "2"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:52:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(58) "{\"action\":\"Institution.TaxProgramGenerate\",\"data\":5}"
}

00:52:22 (engine) [JSON (Institution.TaxProgramGenerate)]->int(5)

00:52:22 (engine) [SQL]->Connecting to database:
00:52:22 (engine) [SQL]->Connection OK!
00:52:22 (engine) test 
00:52:22 (engine) [SQL]->Exec:SELECT InstitutionID from InstitutionBudgetTable where ID=5
00:52:22 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:22 (engine) [SQL]->Exec:SELECT count(*) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:22 (engine) [SQL]->Exec [Done]:Resource id #19
00:52:22 (engine) [SQL]->Exec:SELECT max(TaxYearID) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:22 (engine) [SQL]->Exec [Done]:Resource id #22
00:52:22 (engine) [SQL]->Exec:SELECT ID from InstitutionBudgetTable where InstitutionID=4 and TaxYearID=91
00:52:22 (engine) [SQL]->Exec [Done]:Resource id #25
00:52:22 (engine) [SQL]->Exec:SELECT * from TaxProgramTable where InstitutionBudgetID=4
00:52:22 (engine) [SQL]->Exec [Done]:Resource id #28
00:52:22 (engine) [RESPONSE (Institution.TaxProgramGenerate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

00:52:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(58) "{\"action\":\"Institution.TaxProgramGenerate\",\"data\":5}"
}

00:52:23 (engine) [JSON (Institution.TaxProgramGenerate)]->int(5)

00:52:23 (engine) [SQL]->Connecting to database:
00:52:23 (engine) [SQL]->Connection OK!
00:52:23 (engine) test 
00:52:23 (engine) [SQL]->Exec:SELECT InstitutionID from InstitutionBudgetTable where ID=5
00:52:23 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:23 (engine) [SQL]->Exec:SELECT count(*) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:23 (engine) [SQL]->Exec [Done]:Resource id #19
00:52:23 (engine) [SQL]->Exec:SELECT max(TaxYearID) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:23 (engine) [SQL]->Exec [Done]:Resource id #22
00:52:23 (engine) [SQL]->Exec:SELECT ID from InstitutionBudgetTable where InstitutionID=4 and TaxYearID=91
00:52:23 (engine) [SQL]->Exec [Done]:Resource id #25
00:52:23 (engine) [SQL]->Exec:SELECT * from TaxProgramTable where InstitutionBudgetID=4
00:52:23 (engine) [SQL]->Exec [Done]:Resource id #28
00:52:23 (engine) [RESPONSE (Institution.TaxProgramGenerate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

00:52:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(58) "{\"action\":\"Institution.TaxProgramGenerate\",\"data\":5}"
}

00:52:24 (engine) [JSON (Institution.TaxProgramGenerate)]->int(5)

00:52:24 (engine) [SQL]->Connecting to database:
00:52:24 (engine) [SQL]->Connection OK!
00:52:24 (engine) test 
00:52:24 (engine) [SQL]->Exec:SELECT InstitutionID from InstitutionBudgetTable where ID=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:24 (engine) [SQL]->Exec:SELECT count(*) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #19
00:52:24 (engine) [SQL]->Exec:SELECT max(TaxYearID) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #22
00:52:24 (engine) [SQL]->Exec:SELECT ID from InstitutionBudgetTable where InstitutionID=4 and TaxYearID=91
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #25
00:52:24 (engine) [SQL]->Exec:SELECT * from TaxProgramTable where InstitutionBudgetID=4
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #28
00:52:24 (engine) [RESPONSE (Institution.TaxProgramGenerate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

00:52:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(58) "{\"action\":\"Institution.TaxProgramGenerate\",\"data\":5}"
}

00:52:24 (engine) [JSON (Institution.TaxProgramGenerate)]->int(5)

00:52:24 (engine) [SQL]->Connecting to database:
00:52:24 (engine) [SQL]->Connection OK!
00:52:24 (engine) test 
00:52:24 (engine) [SQL]->Exec:SELECT InstitutionID from InstitutionBudgetTable where ID=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:24 (engine) [SQL]->Exec:SELECT count(*) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #19
00:52:24 (engine) [SQL]->Exec:SELECT max(TaxYearID) from InstitutionBudgetTable where InstitutionID=4 and ID!=5
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #22
00:52:24 (engine) [SQL]->Exec:SELECT ID from InstitutionBudgetTable where InstitutionID=4 and TaxYearID=91
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #25
00:52:24 (engine) [SQL]->Exec:SELECT * from TaxProgramTable where InstitutionBudgetID=4
00:52:24 (engine) [SQL]->Exec [Done]:Resource id #28
00:52:24 (engine) [RESPONSE (Institution.TaxProgramGenerate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

00:52:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
}

00:52:26 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

00:52:26 (engine) [SQL]->Connecting to database:
00:52:26 (engine) [SQL]->Connection OK!
00:52:26 (engine) test 
00:52:26 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
00:52:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:26 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:52:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
}

00:52:26 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

00:52:26 (engine) [SQL]->Connecting to database:
00:52:26 (engine) [SQL]->Connection OK!
00:52:26 (engine) test 
00:52:26 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
00:52:26 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:26 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

00:52:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":5}"
}

00:52:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

00:52:33 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

00:52:33 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(5)

00:52:33 (engine) [SQL]->Connecting to database:
00:52:33 (engine) [SQL]->Connecting to database:
00:52:33 (engine) [SQL]->Connection OK!
00:52:33 (engine) test 
00:52:33 (engine) [SQL]->Connection OK!
00:52:33 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=5
00:52:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:33 (engine) test 
00:52:33 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "5"
    ["TaxYearID"]=>
    string(2) "92"
    ["InstitutionID"]=>
    string(1) "4"
    ["ConfirmedDate"]=>
    string(10) "2012-01-21"
  }
  ["total"]=>
  int(1)
}

00:52:33 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
00:52:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:52:33 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(3) "dsf"
      ["PredictedBudget"]=>
      string(1) "3"
      ["PredictedUsers"]=>
      string(1) "2"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

00:57:27 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:57:27 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(1)

00:57:27 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

00:57:27 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:57:27 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:57:27 (engine) [SQL]->Connecting to database:
00:57:27 (engine) [SQL]->Connection OK!
00:57:27 (engine) test 
00:57:27 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:57:27 (engine) [SQL]->Exec [Done]:Resource id #16
00:57:27 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:27 (engine) [SQL]->Exec [Done]:Resource id #19
00:57:27 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:27 (engine) [SQL]->Exec [Done]:Resource id #22
00:57:27 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:27 (engine) [SQL]->Exec [Done]:Resource id #25
00:57:27 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

00:57:33 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:57:33 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(1)
}

00:57:33 (engine) [SQL]->Connecting to database:
00:57:33 (engine) [SQL]->Connection OK!
00:57:33 (engine) test 
00:57:33 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
00:57:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:57:33 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

00:57:33 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":1}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

00:57:33 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(1)
}

00:57:33 (engine) [SQL]->Connecting to database:
00:57:33 (engine) [SQL]->Connection OK!
00:57:33 (engine) test 
00:57:33 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=1 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
00:57:33 (engine) [SQL]->Exec [Done]:Resource id #16
00:57:33 (engine) [SQL]->Exec:SELECT pr.Name FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:33 (engine) [SQL]->Exec [Done]:Resource id #19
00:57:33 (engine) [SQL]->Exec:SELECT SUM(pp.BenefitsAccumulated) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:33 (engine) [SQL]->Exec [Done]:Resource id #22
00:57:33 (engine) [SQL]->Exec:SELECT SUM(pp.CalculatedTaxAmount) FROM TaxPayerProgramTable pp, TaxProgramTable pr
			WHERE pp.TaxProgramID=pr.ID and pp.TaxPayerID=12 and pp.ConfirmedDate is not null and pr.InstitutionBudgetID=1
00:57:33 (engine) [SQL]->Exec [Done]:Resource id #25
00:57:33 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Programs"]=>
      array(3) {
        [0]=>
        string(12) "Free Stuff 1"
        [1]=>
        string(12) "Free Stuff 2"
        [2]=>
        string(12) "Free Stuff 3"
      }
      ["BenefitsAccumulated"]=>
      string(1) "0"
      ["Total payment"]=>
      string(2) "17"
    }
  }
  ["total"]=>
  int(1)
}

13:12:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
}

13:12:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(45) "{\"action\":\"Admin.GetDate\",\"data\":\"1\"}"
}

13:12:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
}

13:12:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(83) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0}}"
}

13:12:10 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

13:12:10 (engine) [JSON (Admin.GetDate)]->string(1) "1"

13:12:10 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

13:12:10 (engine) [SQL]->Connecting to database:
13:12:10 (engine) [SQL]->Connecting to database:
13:12:10 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
}

13:12:10 (engine) [SQL]->Connecting to database:
13:12:10 (engine) [SQL]->Connection OK!
13:12:10 (engine) [SQL]->Connection OK!
13:12:10 (engine) test 
13:12:10 (engine) [SQL]->Connecting to database:
13:12:10 (engine) test 
13:12:10 (engine) [SQL]->Connection OK!
13:12:10 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
13:12:10 (engine) [SQL]->Connection OK!
13:12:10 (engine) [SQL]->Exec:SELECT Date FROM SystemTable WHERE ID = 1
13:12:10 (engine) test 
13:12:10 (engine) test 
13:12:10 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
13:12:10 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 0 , 10
13:12:10 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:10 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

13:12:10 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:10 (engine) [RESPONSE (Admin.GetDate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  string(19) "2012-01-01 00:00:00"
  ["total"]=>
  int(1)
}

13:12:10 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:10 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:10 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
13:12:10 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

13:12:10 (engine) [SQL]->Exec (count) [Done]:
13:12:10 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "1921"
      ["SubmitDate"]=>
      string(10) "1921-04-26"
      ["StartDate"]=>
      string(10) "1921-04-21"
      ["EndDate"]=>
      string(10) "1921-02-21"
      ["State"]=>
      string(1) "1"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Year"]=>
      string(4) "1922"
      ["SubmitDate"]=>
      string(10) "1922-04-26"
      ["StartDate"]=>
      string(10) "1922-04-21"
      ["EndDate"]=>
      string(10) "1922-02-21"
      ["State"]=>
      string(1) "2"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Year"]=>
      string(4) "1923"
      ["SubmitDate"]=>
      string(10) "1923-04-26"
      ["StartDate"]=>
      string(10) "1923-04-21"
      ["EndDate"]=>
      string(10) "1923-02-21"
      ["State"]=>
      string(1) "2"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "1924"
      ["SubmitDate"]=>
      string(10) "1924-04-26"
      ["StartDate"]=>
      string(10) "1924-04-21"
      ["EndDate"]=>
      string(10) "1924-02-21"
      ["State"]=>
      string(1) "1"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "1925"
      ["SubmitDate"]=>
      string(10) "1925-04-26"
      ["StartDate"]=>
      string(10) "1925-04-21"
      ["EndDate"]=>
      string(10) "1925-02-21"
      ["State"]=>
      string(1) "1"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(1) "6"
      ["Year"]=>
      string(4) "1926"
      ["SubmitDate"]=>
      string(10) "1926-04-26"
      ["StartDate"]=>
      string(10) "1926-04-21"
      ["EndDate"]=>
      string(10) "1926-02-21"
      ["State"]=>
      string(1) "1"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(1) "7"
      ["Year"]=>
      string(4) "1927"
      ["SubmitDate"]=>
      string(10) "1927-04-26"
      ["StartDate"]=>
      string(10) "1927-04-21"
      ["EndDate"]=>
      string(10) "1927-02-21"
      ["State"]=>
      string(1) "1"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(1) "8"
      ["Year"]=>
      string(4) "1928"
      ["SubmitDate"]=>
      string(10) "1928-04-26"
      ["StartDate"]=>
      string(10) "1928-04-21"
      ["EndDate"]=>
      string(10) "1928-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(1) "9"
      ["Year"]=>
      string(4) "1929"
      ["SubmitDate"]=>
      string(10) "1929-04-26"
      ["StartDate"]=>
      string(10) "1929-04-21"
      ["EndDate"]=>
      string(10) "1929-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "10"
      ["Year"]=>
      string(4) "1930"
      ["SubmitDate"]=>
      string(10) "1930-04-26"
      ["StartDate"]=>
      string(10) "1930-04-21"
      ["EndDate"]=>
      string(10) "1930-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

13:12:14 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(45) "{\"action\":\"Admin.GetDate\",\"data\":\"1\"}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

13:12:14 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(83) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

13:12:14 (engine) [JSON (Admin.GetDate)]->string(1) "1"

13:12:14 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
}

13:12:14 (engine) [SQL]->Connecting to database:
13:12:14 (engine) [SQL]->Connecting to database:
13:12:14 (engine) [SQL]->Connection OK!
13:12:14 (engine) [SQL]->Connection OK!
13:12:14 (engine) test 
13:12:14 (engine) test 
13:12:14 (engine) [SQL]->Exec:SELECT Date FROM SystemTable WHERE ID = 1
13:12:14 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 0 , 10
13:12:14 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:14 (engine) [SQL]->Exec [Done]:Resource id #16
13:12:14 (engine) [RESPONSE (Admin.GetDate)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  string(19) "2012-01-01 00:00:00"
  ["total"]=>
  int(1)
}

13:12:14 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
13:12:14 (engine) [SQL]->Exec (count) [Done]:
13:12:14 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Year"]=>
      string(4) "1921"
      ["SubmitDate"]=>
      string(10) "1921-04-26"
      ["StartDate"]=>
      string(10) "1921-04-21"
      ["EndDate"]=>
      string(10) "1921-02-21"
      ["State"]=>
      string(1) "1"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Year"]=>
      string(4) "1922"
      ["SubmitDate"]=>
      string(10) "1922-04-26"
      ["StartDate"]=>
      string(10) "1922-04-21"
      ["EndDate"]=>
      string(10) "1922-02-21"
      ["State"]=>
      string(1) "2"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Year"]=>
      string(4) "1923"
      ["SubmitDate"]=>
      string(10) "1923-04-26"
      ["StartDate"]=>
      string(10) "1923-04-21"
      ["EndDate"]=>
      string(10) "1923-02-21"
      ["State"]=>
      string(1) "2"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "1924"
      ["SubmitDate"]=>
      string(10) "1924-04-26"
      ["StartDate"]=>
      string(10) "1924-04-21"
      ["EndDate"]=>
      string(10) "1924-02-21"
      ["State"]=>
      string(1) "1"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "1925"
      ["SubmitDate"]=>
      string(10) "1925-04-26"
      ["StartDate"]=>
      string(10) "1925-04-21"
      ["EndDate"]=>
      string(10) "1925-02-21"
      ["State"]=>
      string(1) "1"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(1) "6"
      ["Year"]=>
      string(4) "1926"
      ["SubmitDate"]=>
      string(10) "1926-04-26"
      ["StartDate"]=>
      string(10) "1926-04-21"
      ["EndDate"]=>
      string(10) "1926-02-21"
      ["State"]=>
      string(1) "1"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(1) "7"
      ["Year"]=>
      string(4) "1927"
      ["SubmitDate"]=>
      string(10) "1927-04-26"
      ["StartDate"]=>
      string(10) "1927-04-21"
      ["EndDate"]=>
      string(10) "1927-02-21"
      ["State"]=>
      string(1) "1"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(1) "8"
      ["Year"]=>
      string(4) "1928"
      ["SubmitDate"]=>
      string(10) "1928-04-26"
      ["StartDate"]=>
      string(10) "1928-04-21"
      ["EndDate"]=>
      string(10) "1928-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(1) "9"
      ["Year"]=>
      string(4) "1929"
      ["SubmitDate"]=>
      string(10) "1929-04-26"
      ["StartDate"]=>
      string(10) "1929-04-21"
      ["EndDate"]=>
      string(10) "1929-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "10"
      ["Year"]=>
      string(4) "1930"
      ["SubmitDate"]=>
      string(10) "1930-04-26"
      ["StartDate"]=>
      string(10) "1930-04-21"
      ["EndDate"]=>
      string(10) "1930-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

14:26:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
}

14:26:17 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

14:26:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
}

14:26:17 (engine) [SQL]->Connecting to database:
14:26:17 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

14:26:17 (engine) [SQL]->Connection OK!
14:26:17 (engine) [SQL]->Connecting to database:
14:26:17 (engine) test 
14:26:17 (engine) [SQL]->Connection OK!
14:26:17 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
14:26:17 (engine) test 
14:26:17 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:17 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
14:26:17 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

14:26:17 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:17 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

14:26:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":4}"
}

14:26:28 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(4)

14:26:28 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

14:26:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":4}}"
}

14:26:28 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(4)
}

14:26:28 (engine) [SQL]->Connecting to database:
14:26:28 (engine) [SQL]->Connection OK!
14:26:28 (engine) test 
14:26:28 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
14:26:28 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:28 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

14:26:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":4}}"
}

14:26:32 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(4)
}

14:26:32 (engine) [SQL]->Connecting to database:
14:26:32 (engine) [SQL]->Connection OK!
14:26:32 (engine) test 
14:26:32 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
14:26:32 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:32 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

14:26:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":4}}"
}

14:26:33 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(4)
}

14:26:33 (engine) [SQL]->Connecting to database:
14:26:33 (engine) [SQL]->Connection OK!
14:26:33 (engine) test 
14:26:33 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
14:26:33 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:33 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

14:26:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(60) "{\"action\":\"Institution.GetTaxYearBudgetInfo\",\"data\":5}"
}

14:26:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(101) "{\"action\":\"Institution.TaxProgramGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":5}}"
}

14:26:35 (engine) [JSON (Institution.GetTaxYearBudgetInfo)]->int(5)

14:26:35 (engine) [SQL]->Connecting to database:
14:26:35 (engine) [JSON (Institution.TaxProgramGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(5)
}

14:26:35 (engine) [SQL]->Connecting to database:
14:26:35 (engine) [SQL]->Connection OK!
14:26:35 (engine) [SQL]->Connection OK!
14:26:35 (engine) test 
14:26:35 (engine) test 
14:26:35 (engine) [SQL]->Exec:SELECT tp.ID, tp.Name, tp.PredictedBudget, tp.PredictedUsers, tp.BenefitsExpireInYears, tp.MinimumYears, tp.BenefitsApplyTo, tp.ExtendsProgramID, 
IF(ib.ConfirmedDate != null, (select sum(pp.CalculatedTaxAmount) from TaxPayerProgramTable pp where pp.TaxProgramID=tp.ID and pp.ConfirmedDate !=null) ,0) as ConfirmedBudget
 FROM TaxProgramTable tp, InstitutionBudgetTable ib
 WHERE tp.InstitutionBudgetID=ib.ID and  tp.InstitutionBudgetID =5 LIMIT 0 , 10
14:26:35 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:35 (engine) [SQL]->Exec:SELECT * FROM `InstitutionBudgetTable` WHERE ID=5
14:26:35 (engine) [RESPONSE (Institution.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(9) {
      ["ID"]=>
      string(1) "7"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "5"
      ["MinimumYears"]=>
      string(1) "5"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [1]=>
    array(9) {
      ["ID"]=>
      string(1) "8"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(2) "15"
      ["MinimumYears"]=>
      string(2) "15"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      string(1) "5"
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [2]=>
    array(9) {
      ["ID"]=>
      string(1) "9"
      ["Name"]=>
      string(7) "Nothing"
      ["PredictedBudget"]=>
      string(5) "10000"
      ["PredictedUsers"]=>
      string(5) "15000"
      ["BenefitsExpireInYears"]=>
      string(1) "1"
      ["MinimumYears"]=>
      string(1) "1"
      ["BenefitsApplyTo"]=>
      string(1) "1"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
    [3]=>
    array(9) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(3) "dsf"
      ["PredictedBudget"]=>
      string(1) "3"
      ["PredictedUsers"]=>
      string(1) "2"
      ["BenefitsExpireInYears"]=>
      string(1) "3"
      ["MinimumYears"]=>
      string(1) "2"
      ["BenefitsApplyTo"]=>
      string(1) "0"
      ["ExtendsProgramID"]=>
      NULL
      ["ConfirmedBudget"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

14:26:35 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:35 (engine) [RESPONSE (Institution.GetTaxYearBudgetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    ["ID"]=>
    string(1) "5"
    ["TaxYearID"]=>
    string(2) "92"
    ["InstitutionID"]=>
    string(1) "4"
    ["ConfirmedDate"]=>
    string(10) "2012-01-21"
  }
  ["total"]=>
  int(1)
}

14:26:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Institution.TaxProgramUsersGrid\",\"data\":4}"
}

14:26:44 (engine) [JSON (Institution.TaxProgramUsersGrid)]->int(4)

14:26:44 (engine) [RESPONSE (Institution.TaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(47) "Unknown action: Institution.TaxProgramUsersGrid"
  ["total"]=>
  int(1)
}

14:26:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":4}}"
}

14:26:44 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(4)
}

14:26:44 (engine) [SQL]->Connecting to database:
14:26:44 (engine) [SQL]->Connection OK!
14:26:44 (engine) test 
14:26:44 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
14:26:44 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:44 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

14:26:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(110) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10,\"ID\":4}}"
}

14:26:47 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
  ["ID"]=>
  int(4)
}

14:26:47 (engine) [SQL]->Connecting to database:
14:26:47 (engine) [SQL]->Connection OK!
14:26:47 (engine) test 
14:26:47 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 10 , 10
14:26:47 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:47 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

14:26:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"Institution.GetTaxProgramUsersGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"ID\":4}}"
}

14:26:48 (engine) [JSON (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(4)
}

14:26:48 (engine) [SQL]->Connecting to database:
14:26:48 (engine) [SQL]->Connection OK!
14:26:48 (engine) test 
14:26:48 (engine) [SQL]->Exec:SELECT p.ID, p.Name, p.Code FROM TaxProgramTable pr, TaxPayerProgramTable pp, TaxPayerTable p
WHERE pr.ID=pp.TaxProgramID and pp.TaxPayerID=p.ID and pr.InstitutionBudgetID=4 and pp.ConfirmedDate is not null GROUP BY p.ID, p.Name, p.Code LIMIT 0 , 10
14:26:48 (engine) [SQL]->Exec [Done]:Resource id #16
14:26:48 (engine) [RESPONSE (Institution.GetTaxProgramUsersGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

15:53:40 (engine) [REQUEST] (Array) <-array(2) {
  ["-s"]=>
  string(0) ""
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

15:53:40 (engine) [RESPONSE ()]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(38) "JSON error: failed to decode JSON data"
  ["total"]=>
  NULL
}

15:53:52 (engine) [REQUEST] (Array) <-array(1) {
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

15:53:52 (engine) [RESPONSE ()]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(38) "JSON error: failed to decode JSON data"
  ["total"]=>
  NULL
}

15:54:24 (engine) [REQUEST] (Array) <-array(1) {
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

15:54:24 (engine) [RESPONSE ()]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(38) "JSON error: failed to decode JSON data"
  ["total"]=>
  NULL
}

15:54:29 (engine) [REQUEST] (Array) <-array(2) {
  ["-s"]=>
  string(0) ""
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

15:54:29 (engine) [RESPONSE ()]->array(3) {
  ["result"]=>
  string(4) "FAIL"
  ["data"]=>
  string(38) "JSON error: failed to decode JSON data"
  ["total"]=>
  NULL
}

16:05:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10114\"}}"
}

16:05:07 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10114"
}

16:05:07 (engine) [SQL]->Connecting to database:
16:05:07 (engine) [SQL]->Connection OK!
16:05:07 (engine) test 
16:05:07 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10114'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10114'
16:05:07 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:07 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(3) "114"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

16:05:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(55) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":114}}"
}

16:05:08 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(114)
}

16:05:08 (engine) [SQL]->Connecting to database:
16:05:08 (engine) [SQL]->Connection OK!
16:05:08 (engine) test 
16:05:08 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 114
16:05:08 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:08 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(3) "114"
      ["Name"]=>
      string(17) "Ligula Adipiscing"
      ["Code"]=>
      string(6) "T10114"
      ["Income"]=>
      string(6) "189013"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1981-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

16:05:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(98) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":114,\"ItemsPerPage\":100}}"
}

16:05:08 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(114)
  ["ItemsPerPage"]=>
  int(100)
}

16:05:08 (engine) [SQL]->Connecting to database:
16:05:08 (engine) [SQL]->Connection OK!
16:05:08 (engine) test 
16:05:08 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 114 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
16:05:08 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:08 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

16:05:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

16:05:45 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

16:05:45 (engine) [SQL]->Connecting to database:
16:05:45 (engine) [SQL]->Connection OK!
16:05:45 (engine) test 
16:05:45 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
16:05:45 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:45 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

16:05:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

16:05:45 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

16:05:45 (engine) [SQL]->Connecting to database:
16:05:45 (engine) [SQL]->Connection OK!
16:05:45 (engine) test 
16:05:45 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
16:05:45 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:45 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

16:05:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

16:05:45 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

16:05:45 (engine) [SQL]->Connecting to database:
16:05:45 (engine) [SQL]->Connection OK!
16:05:45 (engine) test 
16:05:45 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
16:05:45 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:45 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

16:05:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

16:05:47 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

16:05:47 (engine) [SQL]->Connecting to database:
16:05:47 (engine) [SQL]->Connection OK!
16:05:47 (engine) test 
16:05:47 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
16:05:47 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:47 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

16:05:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

16:05:48 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

16:05:48 (engine) [SQL]->Connecting to database:
16:05:48 (engine) [SQL]->Connection OK!
16:05:48 (engine) test 
16:05:48 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 91

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
16:05:48 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:48 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "12"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "1"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["CalculatedTaxAmount"]=>
      string(1) "4"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "11"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "7"
    }
  }
  ["total"]=>
  int(1)
}

16:05:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

16:05:52 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

16:05:52 (engine) [SQL]->Connecting to database:
16:05:52 (engine) [SQL]->Connection OK!
16:05:52 (engine) test 
16:05:52 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
16:05:52 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:52 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

16:05:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

16:05:52 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

16:05:52 (engine) [SQL]->Connecting to database:
16:05:52 (engine) [SQL]->Connection OK!
16:05:52 (engine) test 
16:05:52 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
16:05:52 (engine) [SQL]->Exec [Done]:Resource id #18
16:05:52 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

16:05:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"TaxPayer.TaxProgramSubmit\",\"data\":{\"ID\":92,\"Programs\":[12,1,2,3,4,5],\"TaxPayerID\":12}}"
}

16:05:59 (engine) [JSON (TaxPayer.TaxProgramSubmit)]->array(3) {
  ["ID"]=>
  int(92)
  ["Programs"]=>
  array(6) {
    [0]=>
    int(12)
    [1]=>
    int(1)
    [2]=>
    int(2)
    [3]=>
    int(3)
    [4]=>
    int(4)
    [5]=>
    int(5)
  }
  ["TaxPayerID"]=>
  int(12)
}

16:09:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(109) "{\"action\":\"TaxPayer.TaxProgramSubmit\",\"data\":{\"ID\":92,\"Programs\":[12,1,2,3,4,5],\"TaxPayerID\":12}}"
}

16:09:23 (engine) [JSON (TaxPayer.TaxProgramSubmit)]->array(3) {
  ["ID"]=>
  int(92)
  ["Programs"]=>
  array(6) {
    [0]=>
    int(12)
    [1]=>
    int(1)
    [2]=>
    int(2)
    [3]=>
    int(3)
    [4]=>
    int(4)
    [5]=>
    int(5)
  }
  ["TaxPayerID"]=>
  int(12)
}

18:14:16 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:16 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

18:14:16 (engine) [SQL]->Connecting to database:
18:14:16 (engine) [SQL]->Connection OK!
18:14:16 (engine) test 
18:14:16 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
18:14:16 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:16 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:14:16 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:16 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

18:14:16 (engine) [SQL]->Connecting to database:
18:14:16 (engine) [SQL]->Connection OK!
18:14:16 (engine) test 
18:14:16 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
18:14:16 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:16 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

18:14:24 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:24 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

18:14:24 (engine) [SQL]->Connecting to database:
18:14:24 (engine) [SQL]->Connection OK!
18:14:24 (engine) test 
18:14:24 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
18:14:24 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:24 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:14:24 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:24 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

18:14:24 (engine) [SQL]->Connecting to database:
18:14:24 (engine) [SQL]->Connection OK!
18:14:24 (engine) test 
18:14:24 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
18:14:24 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:24 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

18:14:25 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(53) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:25 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(4)
}

18:14:25 (engine) [SQL]->Connecting to database:
18:14:25 (engine) [SQL]->Connection OK!
18:14:25 (engine) test 
18:14:25 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 4
18:14:25 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:25 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(12) "Felis Ornare"
      ["Code"]=>
      string(6) "T10004"
      ["Income"]=>
      string(5) "94506"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "2006-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:14:25 (engine) [REQUEST] (Array) <-array(3) {
  ["json"]=>
  string(108) "{\"action\":\"Institution.TaxYearBudgetGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"instID\":4}}"
  ["__utma"]=>
  string(55) "104595487.1992494945.1334777532.1334777532.1334777532.1"
  ["__utmz"]=>
  string(70) "104595487.1334777532.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none)"
}

18:14:25 (engine) [JSON (Institution.TaxYearBudgetGrid)]->array(3) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["instID"]=>
  int(4)
}

18:14:25 (engine) [SQL]->Connecting to database:
18:14:25 (engine) [SQL]->Connection OK!
18:14:25 (engine) test 
18:14:25 (engine) [SQL]->Exec:select * from (SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID =4 and ConfirmedDate is not null
UNION
SELECT bt.ID, y.Year, y.State, bt.ConfirmedDate FROM InstitutionBudgetTable bt, TaxYearTable y
WHERE bt.TaxYearID = y.ID and bt.InstitutionID = 4 and y.Year=Year((SELECT Date from SystemTable where ID=1)) and bt.ConfirmedDate is null)
RESULT LIMIT 0 , 10
18:14:25 (engine) [SQL]->Exec [Done]:Resource id #16
18:14:25 (engine) [RESPONSE (Institution.TaxYearBudgetGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(1) "4"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(1) "5"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2012-01-21"
    }
  }
  ["total"]=>
  int(1)
}

18:30:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:30:51 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:30:51 (engine) [SQL]->Connecting to database:
18:30:51 (engine) [SQL]->Connection OK!
18:30:51 (engine) test 
18:30:51 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:30:51 (engine) [SQL]->Exec [Done]:Resource id #16
18:30:51 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:33:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:33:53 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:33:53 (engine) [SQL]->Connecting to database:
18:33:53 (engine) [SQL]->Connection OK!
18:33:53 (engine) test 
18:33:53 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:33:53 (engine) [SQL]->Exec [Done]:Resource id #16
18:33:53 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:33:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:33:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:33:53 (engine) [SQL]->Connecting to database:
18:33:53 (engine) [SQL]->Connection OK!
18:33:53 (engine) test 
18:33:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:33:53 (engine) [SQL]->Exec [Done]:Resource id #16
18:33:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:33:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:33:54 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:33:54 (engine) [SQL]->Connecting to database:
18:33:54 (engine) [SQL]->Connection OK!
18:33:54 (engine) test 
18:33:54 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:33:54 (engine) [SQL]->Exec [Done]:Resource id #16
18:33:54 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:33:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:33:56 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:33:56 (engine) [SQL]->Connecting to database:
18:33:56 (engine) [SQL]->Connection OK!
18:33:56 (engine) test 
18:33:56 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:33:56 (engine) [SQL]->Exec [Done]:Resource id #16
18:33:56 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:33:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:33:56 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:33:56 (engine) [SQL]->Connecting to database:
18:33:56 (engine) [SQL]->Connection OK!
18:33:56 (engine) test 
18:33:56 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:33:56 (engine) [SQL]->Exec [Done]:Resource id #16
18:33:56 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

18:36:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:36:10 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:36:10 (engine) [SQL]->Connecting to database:
18:36:10 (engine) [SQL]->Connection OK!
18:36:10 (engine) test 
18:36:10 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:36:10 (engine) [SQL]->Exec [Done]:Resource id #16
18:36:10 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:36:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:36:10 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:36:10 (engine) [SQL]->Connecting to database:
18:36:10 (engine) [SQL]->Connection OK!
18:36:10 (engine) test 
18:36:10 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:36:10 (engine) [SQL]->Exec [Done]:Resource id #16
18:36:10 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:36:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:36:10 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:36:10 (engine) [SQL]->Connecting to database:
18:36:10 (engine) [SQL]->Connection OK!
18:36:10 (engine) test 
18:36:10 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:36:10 (engine) [SQL]->Exec [Done]:Resource id #16
18:36:10 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:36:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:36:12 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:36:12 (engine) [SQL]->Connecting to database:
18:36:12 (engine) [SQL]->Connection OK!
18:36:12 (engine) test 
18:36:12 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:36:12 (engine) [SQL]->Exec [Done]:Resource id #16
18:36:12 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:36:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:36:12 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:36:12 (engine) [SQL]->Connecting to database:
18:36:12 (engine) [SQL]->Connection OK!
18:36:12 (engine) test 
18:36:12 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:36:12 (engine) [SQL]->Exec [Done]:Resource id #16
18:36:12 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

18:53:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:53:19 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:53:19 (engine) [SQL]->Connecting to database:
18:53:19 (engine) [SQL]->Connection OK!
18:53:19 (engine) test 
18:53:19 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:53:19 (engine) [SQL]->Exec [Done]:Resource id #16
18:53:19 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:53:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:53:20 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:53:20 (engine) [SQL]->Connecting to database:
18:53:20 (engine) [SQL]->Connection OK!
18:53:20 (engine) test 
18:53:20 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:53:20 (engine) [SQL]->Exec [Done]:Resource id #16
18:53:20 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:53:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:53:20 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:53:20 (engine) [SQL]->Connecting to database:
18:53:20 (engine) [SQL]->Connection OK!
18:53:20 (engine) test 
18:53:20 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:53:20 (engine) [SQL]->Exec [Done]:Resource id #16
18:53:20 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:53:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:53:21 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:53:21 (engine) [SQL]->Connecting to database:
18:53:21 (engine) [SQL]->Connection OK!
18:53:21 (engine) test 
18:53:21 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:53:21 (engine) [SQL]->Exec [Done]:Resource id #16
18:53:21 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:53:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:53:21 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:53:21 (engine) [SQL]->Connecting to database:
18:53:21 (engine) [SQL]->Connection OK!
18:53:21 (engine) test 
18:53:21 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:53:21 (engine) [SQL]->Exec [Done]:Resource id #16
18:53:21 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

18:54:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:54:30 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:54:30 (engine) [SQL]->Connecting to database:
18:54:30 (engine) [SQL]->Connection OK!
18:54:30 (engine) test 
18:54:30 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:54:30 (engine) [SQL]->Exec [Done]:Resource id #16
18:54:30 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:54:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:54:30 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:54:30 (engine) [SQL]->Connecting to database:
18:54:30 (engine) [SQL]->Connection OK!
18:54:30 (engine) test 
18:54:30 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:54:30 (engine) [SQL]->Exec [Done]:Resource id #16
18:54:30 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:54:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:54:30 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:54:30 (engine) [SQL]->Connecting to database:
18:54:30 (engine) [SQL]->Connection OK!
18:54:30 (engine) test 
18:54:30 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:54:30 (engine) [SQL]->Exec [Done]:Resource id #16
18:54:30 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:54:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:54:32 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:54:32 (engine) [SQL]->Connecting to database:
18:54:32 (engine) [SQL]->Connection OK!
18:54:32 (engine) test 
18:54:32 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:54:32 (engine) [SQL]->Exec [Done]:Resource id #16
18:54:32 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:54:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:54:32 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:54:32 (engine) [SQL]->Connecting to database:
18:54:32 (engine) [SQL]->Connection OK!
18:54:32 (engine) test 
18:54:32 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:54:32 (engine) [SQL]->Exec [Done]:Resource id #16
18:54:32 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

18:55:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:55:28 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:55:28 (engine) [SQL]->Connecting to database:
18:55:28 (engine) [SQL]->Connection OK!
18:55:28 (engine) test 
18:55:28 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:55:28 (engine) [SQL]->Exec [Done]:Resource id #16
18:55:28 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:55:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:55:28 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:55:28 (engine) [SQL]->Connecting to database:
18:55:28 (engine) [SQL]->Connection OK!
18:55:28 (engine) test 
18:55:28 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:55:28 (engine) [SQL]->Exec [Done]:Resource id #16
18:55:28 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:55:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:55:28 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:55:28 (engine) [SQL]->Connecting to database:
18:55:28 (engine) [SQL]->Connection OK!
18:55:28 (engine) test 
18:55:28 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:55:28 (engine) [SQL]->Exec [Done]:Resource id #16
18:55:28 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:55:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:55:30 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:55:30 (engine) [SQL]->Connecting to database:
18:55:30 (engine) [SQL]->Connection OK!
18:55:30 (engine) test 
18:55:30 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:55:30 (engine) [SQL]->Exec [Done]:Resource id #16
18:55:30 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:55:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:55:30 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:55:30 (engine) [SQL]->Connecting to database:
18:55:30 (engine) [SQL]->Connection OK!
18:55:30 (engine) test 
18:55:30 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:55:30 (engine) [SQL]->Exec [Done]:Resource id #16
18:55:30 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

18:59:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

18:59:00 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

18:59:00 (engine) [SQL]->Connecting to database:
18:59:00 (engine) [SQL]->Connection OK!
18:59:00 (engine) test 
18:59:00 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
18:59:00 (engine) [SQL]->Exec [Done]:Resource id #16
18:59:00 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

18:59:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:59:01 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:59:01 (engine) [SQL]->Connecting to database:
18:59:01 (engine) [SQL]->Connection OK!
18:59:01 (engine) test 
18:59:01 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:59:01 (engine) [SQL]->Exec [Done]:Resource id #16
18:59:01 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:59:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

18:59:02 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:59:02 (engine) [SQL]->Connecting to database:
18:59:02 (engine) [SQL]->Connection OK!
18:59:02 (engine) test 
18:59:02 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
18:59:02 (engine) [SQL]->Exec [Done]:Resource id #16
18:59:02 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

18:59:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

18:59:07 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

18:59:07 (engine) [SQL]->Connecting to database:
18:59:07 (engine) [SQL]->Connection OK!
18:59:07 (engine) test 
18:59:07 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
18:59:07 (engine) [SQL]->Exec [Done]:Resource id #16
18:59:07 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

18:59:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

18:59:08 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

18:59:08 (engine) [SQL]->Connecting to database:
18:59:08 (engine) [SQL]->Connection OK!
18:59:08 (engine) test 
18:59:08 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
18:59:08 (engine) [SQL]->Exec [Done]:Resource id #16
18:59:08 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:05:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:05:22 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:05:22 (engine) [SQL]->Connecting to database:
19:05:22 (engine) [SQL]->Connection OK!
19:05:22 (engine) test 
19:05:22 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:05:22 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:22 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:05:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:05:22 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:05:22 (engine) [SQL]->Connecting to database:
19:05:22 (engine) [SQL]->Connection OK!
19:05:22 (engine) test 
19:05:22 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:05:22 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:22 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:05:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:05:22 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:05:22 (engine) [SQL]->Connecting to database:
19:05:22 (engine) [SQL]->Connection OK!
19:05:22 (engine) test 
19:05:22 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:05:22 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:22 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:05:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:05:24 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:05:24 (engine) [SQL]->Connecting to database:
19:05:24 (engine) [SQL]->Connection OK!
19:05:24 (engine) test 
19:05:24 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:05:24 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:24 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:05:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:05:24 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:05:24 (engine) [SQL]->Connecting to database:
19:05:24 (engine) [SQL]->Connection OK!
19:05:24 (engine) test 
19:05:24 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:05:24 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:24 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:05:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:05:59 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:05:59 (engine) [SQL]->Connecting to database:
19:05:59 (engine) [SQL]->Connection OK!
19:05:59 (engine) test 
19:05:59 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:05:59 (engine) [SQL]->Exec [Done]:Resource id #16
19:05:59 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:06:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:06:00 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:06:00 (engine) [SQL]->Connecting to database:
19:06:00 (engine) [SQL]->Connection OK!
19:06:00 (engine) test 
19:06:00 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:06:00 (engine) [SQL]->Exec [Done]:Resource id #16
19:06:00 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:06:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:06:00 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:06:00 (engine) [SQL]->Connecting to database:
19:06:00 (engine) [SQL]->Connection OK!
19:06:00 (engine) test 
19:06:00 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:06:00 (engine) [SQL]->Exec [Done]:Resource id #16
19:06:00 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:06:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:06:02 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:06:02 (engine) [SQL]->Connecting to database:
19:06:02 (engine) [SQL]->Connection OK!
19:06:02 (engine) test 
19:06:02 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:06:02 (engine) [SQL]->Exec [Done]:Resource id #16
19:06:02 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:06:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:06:02 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:06:02 (engine) [SQL]->Connecting to database:
19:06:02 (engine) [SQL]->Connection OK!
19:06:02 (engine) test 
19:06:02 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:06:02 (engine) [SQL]->Exec [Done]:Resource id #16
19:06:02 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:14:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:14:26 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:14:26 (engine) [SQL]->Connecting to database:
19:14:26 (engine) [SQL]->Connection OK!
19:14:26 (engine) test 
19:14:26 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:14:26 (engine) [SQL]->Exec [Done]:Resource id #16
19:14:26 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:14:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:14:26 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:14:26 (engine) [SQL]->Connecting to database:
19:14:26 (engine) [SQL]->Connection OK!
19:14:26 (engine) test 
19:14:26 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:14:26 (engine) [SQL]->Exec [Done]:Resource id #16
19:14:26 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:14:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:14:26 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:14:26 (engine) [SQL]->Connecting to database:
19:14:26 (engine) [SQL]->Connection OK!
19:14:26 (engine) test 
19:14:26 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:14:26 (engine) [SQL]->Exec [Done]:Resource id #16
19:14:26 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:14:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:14:28 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:14:28 (engine) [SQL]->Connecting to database:
19:14:28 (engine) [SQL]->Connection OK!
19:14:28 (engine) test 
19:14:28 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:14:28 (engine) [SQL]->Exec [Done]:Resource id #16
19:14:28 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:14:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:14:28 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:14:28 (engine) [SQL]->Connecting to database:
19:14:28 (engine) [SQL]->Connection OK!
19:14:28 (engine) test 
19:14:28 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:14:28 (engine) [SQL]->Exec [Done]:Resource id #16
19:14:28 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:53:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:53:07 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:53:07 (engine) [SQL]->Connecting to database:
19:53:07 (engine) [SQL]->Connection OK!
19:53:07 (engine) test 
19:53:07 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:53:07 (engine) [SQL]->Exec [Done]:Resource id #16
19:53:07 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:53:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:53:07 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:53:07 (engine) [SQL]->Connecting to database:
19:53:07 (engine) [SQL]->Connection OK!
19:53:07 (engine) test 
19:53:07 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:53:07 (engine) [SQL]->Exec [Done]:Resource id #16
19:53:07 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:53:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:53:08 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:53:08 (engine) [SQL]->Connecting to database:
19:53:08 (engine) [SQL]->Connection OK!
19:53:08 (engine) test 
19:53:08 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:53:08 (engine) [SQL]->Exec [Done]:Resource id #16
19:53:08 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:53:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:53:09 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:53:09 (engine) [SQL]->Connecting to database:
19:53:09 (engine) [SQL]->Connection OK!
19:53:09 (engine) test 
19:53:09 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:53:09 (engine) [SQL]->Exec [Done]:Resource id #16
19:53:09 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:53:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:53:09 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:53:09 (engine) [SQL]->Connecting to database:
19:53:09 (engine) [SQL]->Connection OK!
19:53:09 (engine) test 
19:53:09 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:53:09 (engine) [SQL]->Exec [Done]:Resource id #16
19:53:09 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:53:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

19:53:17 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

19:53:17 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
19:53:17 (engine) [SQL]->Connecting to database:
19:53:17 (engine) [SQL]->Connection OK!
19:53:17 (engine) test 
19:53:17 (engine) [SQL]->Exec:1
19:53:17 (engine) [SQL]->Exec [Done]:
19:53:17 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
19:53:17 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
		FROM TaxPayerProgramTable tppt
		LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
		WHERE  tpt.ID =  AND tppt.ConfirmedDate IS NOT NULL
19:53:17 (engine) [SQL]->Exec [Done]:
19:53:17 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
19:53:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(0)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

19:56:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:56:11 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:56:11 (engine) [SQL]->Connecting to database:
19:56:11 (engine) [SQL]->Connection OK!
19:56:11 (engine) test 
19:56:11 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:56:11 (engine) [SQL]->Exec [Done]:Resource id #16
19:56:11 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:56:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:56:12 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:56:12 (engine) [SQL]->Connecting to database:
19:56:12 (engine) [SQL]->Connection OK!
19:56:12 (engine) test 
19:56:12 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:56:12 (engine) [SQL]->Exec [Done]:Resource id #16
19:56:12 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:56:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:56:12 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:56:12 (engine) [SQL]->Connecting to database:
19:56:12 (engine) [SQL]->Connection OK!
19:56:12 (engine) test 
19:56:12 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:56:12 (engine) [SQL]->Exec [Done]:Resource id #16
19:56:12 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:56:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:56:14 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:56:14 (engine) [SQL]->Connecting to database:
19:56:14 (engine) [SQL]->Connection OK!
19:56:14 (engine) test 
19:56:14 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:56:14 (engine) [SQL]->Exec [Done]:Resource id #16
19:56:14 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:56:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:56:14 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:56:14 (engine) [SQL]->Connecting to database:
19:56:14 (engine) [SQL]->Connection OK!
19:56:14 (engine) test 
19:56:14 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:56:14 (engine) [SQL]->Exec [Done]:Resource id #16
19:56:14 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:56:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

19:56:16 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

19:56:16 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
19:56:16 (engine) [SQL]->Connecting to database:
19:56:16 (engine) [SQL]->Connection OK!
19:56:16 (engine) test 
19:56:16 (engine) [SQL]->Exec:1
19:56:16 (engine) [SQL]->Exec [Done]:
19:56:16 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
19:56:16 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
		FROM TaxPayerProgramTable tppt
		LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
		WHERE  tpt.ID =  AND tppt.ConfirmedDate IS NOT NULL
19:56:16 (engine) [SQL]->Exec [Done]:
19:56:16 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
19:56:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users =  Budget = 
19:56:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(0)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

19:57:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

19:57:27 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

19:57:27 (engine) [SQL]->Connecting to database:
19:57:27 (engine) [SQL]->Connection OK!
19:57:27 (engine) test 
19:57:27 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
19:57:27 (engine) [SQL]->Exec [Done]:Resource id #16
19:57:27 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

19:57:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:57:27 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:57:27 (engine) [SQL]->Connecting to database:
19:57:27 (engine) [SQL]->Connection OK!
19:57:27 (engine) test 
19:57:27 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:57:27 (engine) [SQL]->Exec [Done]:Resource id #16
19:57:27 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:57:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

19:57:27 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:57:27 (engine) [SQL]->Connecting to database:
19:57:27 (engine) [SQL]->Connection OK!
19:57:27 (engine) test 
19:57:27 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
19:57:27 (engine) [SQL]->Exec [Done]:Resource id #16
19:57:27 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

19:57:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

19:57:29 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

19:57:29 (engine) [SQL]->Connecting to database:
19:57:29 (engine) [SQL]->Connection OK!
19:57:29 (engine) test 
19:57:29 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
19:57:29 (engine) [SQL]->Exec [Done]:Resource id #16
19:57:29 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

19:57:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

19:57:29 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

19:57:29 (engine) [SQL]->Connecting to database:
19:57:29 (engine) [SQL]->Connection OK!
19:57:29 (engine) test 
19:57:29 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
19:57:29 (engine) [SQL]->Exec [Done]:Resource id #16
19:57:29 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

19:57:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

19:57:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

19:57:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
19:57:31 (engine) [SQL]->Connecting to database:
19:57:31 (engine) [SQL]->Connection OK!
19:57:31 (engine) test 
19:57:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
19:57:31 (engine) [SQL]->Exec [Done]:Resource id #17
19:57:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
19:57:31 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
		FROM TaxPayerProgramTable tppt
		LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
		WHERE  tpt.ID =  AND tppt.ConfirmedDate IS NOT NULL
19:57:31 (engine) [SQL]->Exec [Done]:
19:57:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
19:57:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
19:57:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:02:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:02:02 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:02:02 (engine) [SQL]->Connecting to database:
20:02:02 (engine) [SQL]->Connection OK!
20:02:02 (engine) test 
20:02:02 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:02:02 (engine) [SQL]->Exec [Done]:Resource id #16
20:02:02 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:02:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:02:02 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:02:02 (engine) [SQL]->Connecting to database:
20:02:02 (engine) [SQL]->Connection OK!
20:02:02 (engine) test 
20:02:02 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:02:02 (engine) [SQL]->Exec [Done]:Resource id #16
20:02:02 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:02:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:02:02 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:02:02 (engine) [SQL]->Connecting to database:
20:02:02 (engine) [SQL]->Connection OK!
20:02:02 (engine) test 
20:02:02 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:02:02 (engine) [SQL]->Exec [Done]:Resource id #16
20:02:02 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:02:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:02:05 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:02:05 (engine) [SQL]->Connecting to database:
20:02:05 (engine) [SQL]->Connection OK!
20:02:05 (engine) test 
20:02:05 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:02:05 (engine) [SQL]->Exec [Done]:Resource id #16
20:02:05 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:02:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:02:05 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:02:05 (engine) [SQL]->Connecting to database:
20:02:05 (engine) [SQL]->Connection OK!
20:02:05 (engine) test 
20:02:05 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:02:05 (engine) [SQL]->Exec [Done]:Resource id #16
20:02:05 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:02:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:02:08 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:02:08 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:02:08 (engine) [SQL]->Connecting to database:
20:02:08 (engine) [SQL]->Connection OK!
20:02:08 (engine) test 
20:02:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:02:08 (engine) [SQL]->Exec [Done]:Resource id #17
20:02:08 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:02:08 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:02:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:02:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:10:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:10:33 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:10:33 (engine) [SQL]->Connecting to database:
20:10:33 (engine) [SQL]->Connection OK!
20:10:33 (engine) test 
20:10:33 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:10:33 (engine) [SQL]->Exec [Done]:Resource id #16
20:10:33 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:10:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:10:34 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:10:34 (engine) [SQL]->Connecting to database:
20:10:34 (engine) [SQL]->Connection OK!
20:10:34 (engine) test 
20:10:34 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:10:34 (engine) [SQL]->Exec [Done]:Resource id #16
20:10:34 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:10:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:10:34 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:10:34 (engine) [SQL]->Connecting to database:
20:10:34 (engine) [SQL]->Connection OK!
20:10:34 (engine) test 
20:10:34 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:10:34 (engine) [SQL]->Exec [Done]:Resource id #16
20:10:34 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:10:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:10:35 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:10:35 (engine) [SQL]->Connecting to database:
20:10:35 (engine) [SQL]->Connection OK!
20:10:35 (engine) test 
20:10:35 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:10:35 (engine) [SQL]->Exec [Done]:Resource id #16
20:10:35 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:10:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:10:36 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:10:36 (engine) [SQL]->Connecting to database:
20:10:36 (engine) [SQL]->Connection OK!
20:10:36 (engine) test 
20:10:36 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:10:36 (engine) [SQL]->Exec [Done]:Resource id #16
20:10:36 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:10:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:10:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:10:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:10:49 (engine) [SQL]->Connecting to database:
20:10:49 (engine) [SQL]->Connection OK!
20:10:49 (engine) test 
20:10:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:10:49 (engine) [SQL]->Exec [Done]:Resource id #17
20:10:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:10:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:10:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:10:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:13:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:13:16 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:13:16 (engine) [SQL]->Connecting to database:
20:13:16 (engine) [SQL]->Connection OK!
20:13:16 (engine) test 
20:13:16 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:13:16 (engine) [SQL]->Exec [Done]:Resource id #16
20:13:16 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:13:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:13:16 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:13:16 (engine) [SQL]->Connecting to database:
20:13:16 (engine) [SQL]->Connection OK!
20:13:16 (engine) test 
20:13:16 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:13:16 (engine) [SQL]->Exec [Done]:Resource id #16
20:13:16 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:13:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:13:16 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:13:16 (engine) [SQL]->Connecting to database:
20:13:16 (engine) [SQL]->Connection OK!
20:13:16 (engine) test 
20:13:16 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:13:16 (engine) [SQL]->Exec [Done]:Resource id #16
20:13:16 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:13:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:13:21 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:13:21 (engine) [SQL]->Connecting to database:
20:13:21 (engine) [SQL]->Connection OK!
20:13:21 (engine) test 
20:13:21 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:13:21 (engine) [SQL]->Exec [Done]:Resource id #16
20:13:21 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:13:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:13:21 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:13:21 (engine) [SQL]->Connecting to database:
20:13:21 (engine) [SQL]->Connection OK!
20:13:21 (engine) test 
20:13:21 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:13:21 (engine) [SQL]->Exec [Done]:Resource id #16
20:13:21 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:13:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:13:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:13:23 (engine) [SQL]->Connecting to database:
20:13:23 (engine) [SQL]->Connection OK!
20:13:23 (engine) test 
20:13:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:13:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:13:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:13:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:13:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:13:23 (engine) [SQL]->Connecting to database:
20:13:23 (engine) [SQL]->Connection OK!
20:13:23 (engine) test 
20:13:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:13:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:13:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:13:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:18:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:18:18 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:18:18 (engine) [SQL]->Connecting to database:
20:18:18 (engine) [SQL]->Connection OK!
20:18:18 (engine) test 
20:18:18 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:18:18 (engine) [SQL]->Exec [Done]:Resource id #16
20:18:18 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:18:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:18:18 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:18:18 (engine) [SQL]->Connecting to database:
20:18:18 (engine) [SQL]->Connection OK!
20:18:18 (engine) test 
20:18:18 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:18:18 (engine) [SQL]->Exec [Done]:Resource id #16
20:18:18 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:18:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:18:18 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:18:18 (engine) [SQL]->Connecting to database:
20:18:18 (engine) [SQL]->Connection OK!
20:18:18 (engine) test 
20:18:18 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:18:18 (engine) [SQL]->Exec [Done]:Resource id #16
20:18:18 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:18:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:18:20 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:18:20 (engine) [SQL]->Connecting to database:
20:18:20 (engine) [SQL]->Connection OK!
20:18:20 (engine) test 
20:18:20 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:18:20 (engine) [SQL]->Exec [Done]:Resource id #16
20:18:20 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:18:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:18:20 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:18:20 (engine) [SQL]->Connecting to database:
20:18:20 (engine) [SQL]->Connection OK!
20:18:20 (engine) test 
20:18:20 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:18:20 (engine) [SQL]->Exec [Done]:Resource id #16
20:18:20 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:18:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:18:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:18:33 (engine) [SQL]->Connecting to database:
20:18:33 (engine) [SQL]->Connection OK!
20:18:33 (engine) test 
20:18:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:18:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:18:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:18:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:18:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:18:33 (engine) [SQL]->Connecting to database:
20:18:33 (engine) [SQL]->Connection OK!
20:18:33 (engine) test 
20:18:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:18:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:18:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:18:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:18:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:18:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:18:34 (engine) [SQL]->Connecting to database:
20:18:34 (engine) [SQL]->Connection OK!
20:18:34 (engine) test 
20:18:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:18:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:18:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:18:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:18:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:18:34 (engine) [SQL]->Connecting to database:
20:18:34 (engine) [SQL]->Connection OK!
20:18:34 (engine) test 
20:18:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:18:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:18:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:18:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:18:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:18:34 (engine) [SQL]->Connecting to database:
20:18:34 (engine) [SQL]->Connection OK!
20:18:34 (engine) test 
20:18:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:18:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:18:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:18:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:19:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:19:36 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:19:36 (engine) [SQL]->Connecting to database:
20:19:36 (engine) [SQL]->Connection OK!
20:19:36 (engine) test 
20:19:36 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:19:36 (engine) [SQL]->Exec [Done]:Resource id #16
20:19:36 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:19:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:19:36 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:19:36 (engine) [SQL]->Connecting to database:
20:19:36 (engine) [SQL]->Connection OK!
20:19:36 (engine) test 
20:19:36 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:19:36 (engine) [SQL]->Exec [Done]:Resource id #16
20:19:36 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:19:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:19:36 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:19:36 (engine) [SQL]->Connecting to database:
20:19:36 (engine) [SQL]->Connection OK!
20:19:36 (engine) test 
20:19:36 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:19:36 (engine) [SQL]->Exec [Done]:Resource id #16
20:19:36 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:19:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:19:41 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:19:41 (engine) [SQL]->Connecting to database:
20:19:41 (engine) [SQL]->Connection OK!
20:19:41 (engine) test 
20:19:41 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:19:41 (engine) [SQL]->Exec [Done]:Resource id #16
20:19:41 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:19:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:19:42 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:19:42 (engine) [SQL]->Connecting to database:
20:19:42 (engine) [SQL]->Connection OK!
20:19:42 (engine) test 
20:19:42 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:19:42 (engine) [SQL]->Exec [Done]:Resource id #16
20:19:42 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:19:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:19:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:19:48 (engine) [SQL]->Connecting to database:
20:19:48 (engine) [SQL]->Connection OK!
20:19:48 (engine) test 
20:19:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:19:48 (engine) [SQL]->Exec [Done]:Resource id #17
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:19:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:19:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:19:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:19:48 (engine) [SQL]->Connecting to database:
20:19:48 (engine) [SQL]->Connection OK!
20:19:48 (engine) test 
20:19:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:19:48 (engine) [SQL]->Exec [Done]:Resource id #17
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:19:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:19:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:19:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:19:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:19:49 (engine) [SQL]->Connecting to database:
20:19:49 (engine) [SQL]->Connection OK!
20:19:49 (engine) test 
20:19:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:19:49 (engine) [SQL]->Exec [Done]:Resource id #17
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:19:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:19:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:19:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:19:49 (engine) [SQL]->Connecting to database:
20:19:49 (engine) [SQL]->Connection OK!
20:19:49 (engine) test 
20:19:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:19:49 (engine) [SQL]->Exec [Done]:Resource id #17
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:19:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:19:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:19:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:19:49 (engine) [SQL]->Connecting to database:
20:19:49 (engine) [SQL]->Connection OK!
20:19:49 (engine) test 
20:19:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:19:49 (engine) [SQL]->Exec [Done]:Resource id #17
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:19:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:19:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:23:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:23:05 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:23:05 (engine) [SQL]->Connecting to database:
20:23:05 (engine) [SQL]->Connection OK!
20:23:05 (engine) test 
20:23:05 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:23:05 (engine) [SQL]->Exec [Done]:Resource id #16
20:23:05 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:23:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:23:06 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:23:06 (engine) [SQL]->Connecting to database:
20:23:06 (engine) [SQL]->Connection OK!
20:23:06 (engine) test 
20:23:06 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:23:06 (engine) [SQL]->Exec [Done]:Resource id #16
20:23:06 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:23:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:23:06 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:23:06 (engine) [SQL]->Connecting to database:
20:23:06 (engine) [SQL]->Connection OK!
20:23:06 (engine) test 
20:23:06 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:23:06 (engine) [SQL]->Exec [Done]:Resource id #16
20:23:06 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:23:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:23:08 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:23:08 (engine) [SQL]->Connecting to database:
20:23:08 (engine) [SQL]->Connection OK!
20:23:08 (engine) test 
20:23:08 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:23:08 (engine) [SQL]->Exec [Done]:Resource id #16
20:23:08 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:23:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:23:08 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:23:08 (engine) [SQL]->Connecting to database:
20:23:08 (engine) [SQL]->Connection OK!
20:23:08 (engine) test 
20:23:08 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:23:08 (engine) [SQL]->Exec [Done]:Resource id #16
20:23:08 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:23:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:23:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:23:22 (engine) [SQL]->Connecting to database:
20:23:22 (engine) [SQL]->Connection OK!
20:23:22 (engine) test 
20:23:22 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:23:22 (engine) [SQL]->Exec [Done]:Resource id #17
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:23:22 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:23:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:23:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:23:22 (engine) [SQL]->Connecting to database:
20:23:22 (engine) [SQL]->Connection OK!
20:23:22 (engine) test 
20:23:22 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:23:22 (engine) [SQL]->Exec [Done]:Resource id #17
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:23:22 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:23:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:23:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:23:22 (engine) [SQL]->Connecting to database:
20:23:22 (engine) [SQL]->Connection OK!
20:23:22 (engine) test 
20:23:22 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:23:22 (engine) [SQL]->Exec [Done]:Resource id #17
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:23:22 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:23:22 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:23:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:23:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:23:23 (engine) [SQL]->Connecting to database:
20:23:23 (engine) [SQL]->Connection OK!
20:23:23 (engine) test 
20:23:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:23:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:23:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:23:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:23:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:23:23 (engine) [SQL]->Connecting to database:
20:23:23 (engine) [SQL]->Connection OK!
20:23:23 (engine) test 
20:23:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:23:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:23:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:23:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:26:27 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:26:27 (engine) [SQL]->Connecting to database:
20:26:27 (engine) [SQL]->Connection OK!
20:26:27 (engine) test 
20:26:27 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:26:27 (engine) [SQL]->Exec [Done]:Resource id #16
20:26:27 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:26:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:26:27 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:26:27 (engine) [SQL]->Connecting to database:
20:26:27 (engine) [SQL]->Connection OK!
20:26:27 (engine) test 
20:26:27 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:26:27 (engine) [SQL]->Exec [Done]:Resource id #16
20:26:27 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:26:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:26:27 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:26:27 (engine) [SQL]->Connecting to database:
20:26:27 (engine) [SQL]->Connection OK!
20:26:27 (engine) test 
20:26:27 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:26:27 (engine) [SQL]->Exec [Done]:Resource id #16
20:26:27 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:26:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:26:29 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:26:29 (engine) [SQL]->Connecting to database:
20:26:29 (engine) [SQL]->Connection OK!
20:26:29 (engine) test 
20:26:29 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:26:29 (engine) [SQL]->Exec [Done]:Resource id #16
20:26:29 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:26:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:26:29 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:26:29 (engine) [SQL]->Connecting to database:
20:26:29 (engine) [SQL]->Connection OK!
20:26:29 (engine) test 
20:26:29 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:26:29 (engine) [SQL]->Exec [Done]:Resource id #16
20:26:29 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:26:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:26:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:26:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:26:31 (engine) [SQL]->Connecting to database:
20:26:31 (engine) [SQL]->Connection OK!
20:26:31 (engine) test 
20:26:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:26:31 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:26:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:26:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:26:32 (engine) [SQL]->Connecting to database:
20:26:32 (engine) [SQL]->Connection OK!
20:26:32 (engine) test 
20:26:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:26:32 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:26:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:26:32 (engine) [SQL]->Connecting to database:
20:26:32 (engine) [SQL]->Connection OK!
20:26:32 (engine) test 
20:26:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:26:32 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:26:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:26:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:26:33 (engine) [SQL]->Connecting to database:
20:26:33 (engine) [SQL]->Connection OK!
20:26:33 (engine) test 
20:26:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:26:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:26:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:26:33 (engine) [SQL]->Connecting to database:
20:26:33 (engine) [SQL]->Connection OK!
20:26:33 (engine) test 
20:26:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:26:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:26:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:26:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:26:45 (engine) [SQL]->Connecting to database:
20:26:45 (engine) [SQL]->Connection OK!
20:26:45 (engine) test 
20:26:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:26:45 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:26:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:26:45 (engine) [SQL]->Connecting to database:
20:26:45 (engine) [SQL]->Connection OK!
20:26:45 (engine) test 
20:26:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:26:45 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:26:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:26:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:26:46 (engine) [SQL]->Connecting to database:
20:26:46 (engine) [SQL]->Connection OK!
20:26:46 (engine) test 
20:26:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:26:46 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:26:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:26:46 (engine) [SQL]->Connecting to database:
20:26:46 (engine) [SQL]->Connection OK!
20:26:46 (engine) test 
20:26:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:26:46 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:26:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:26:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:26:47 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:26:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:26:47 (engine) [SQL]->Connecting to database:
20:26:47 (engine) [SQL]->Connection OK!
20:26:47 (engine) test 
20:26:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:26:47 (engine) [SQL]->Exec [Done]:Resource id #17
20:26:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:26:47 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:26:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:26:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:32:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:32:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:32:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:32:51 (engine) [SQL]->Connecting to database:
20:32:51 (engine) [SQL]->Connection OK!
20:32:51 (engine) test 
20:32:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:32:51 (engine) [SQL]->Exec [Done]:Resource id #17
20:32:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:32:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:32:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:32:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:32:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:32:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:32:52 (engine) [SQL]->Connecting to database:
20:32:52 (engine) [SQL]->Connection OK!
20:32:52 (engine) test 
20:32:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:32:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:32:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:32:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:32:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:32:52 (engine) [SQL]->Connecting to database:
20:32:52 (engine) [SQL]->Connection OK!
20:32:52 (engine) test 
20:32:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:32:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:32:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:32:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:32:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:32:52 (engine) [SQL]->Connecting to database:
20:32:52 (engine) [SQL]->Connection OK!
20:32:52 (engine) test 
20:32:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:32:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:32:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:32:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:35:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:35:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:35:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:35:51 (engine) [SQL]->Connecting to database:
20:35:51 (engine) [SQL]->Connection OK!
20:35:51 (engine) test 
20:35:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:35:51 (engine) [SQL]->Exec [Done]:Resource id #17
20:35:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:35:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:35:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:35:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:35:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:35:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:35:52 (engine) [SQL]->Connecting to database:
20:35:52 (engine) [SQL]->Connection OK!
20:35:52 (engine) test 
20:35:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:35:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:35:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:35:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:35:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:35:52 (engine) [SQL]->Connecting to database:
20:35:52 (engine) [SQL]->Connection OK!
20:35:52 (engine) test 
20:35:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:35:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:35:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:35:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:35:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:35:53 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:35:53 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:35:53 (engine) [SQL]->Connecting to database:
20:35:53 (engine) [SQL]->Connection OK!
20:35:53 (engine) test 
20:35:53 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:35:53 (engine) [SQL]->Exec [Done]:Resource id #17
20:35:53 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:35:53 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:35:53 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:35:53 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:39:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:39:44 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:39:44 (engine) [SQL]->Connecting to database:
20:39:44 (engine) [SQL]->Connection OK!
20:39:44 (engine) test 
20:39:44 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:39:44 (engine) [SQL]->Exec [Done]:Resource id #16
20:39:44 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:39:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:39:44 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:39:44 (engine) [SQL]->Connecting to database:
20:39:44 (engine) [SQL]->Connection OK!
20:39:44 (engine) test 
20:39:44 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:39:44 (engine) [SQL]->Exec [Done]:Resource id #16
20:39:44 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:39:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:39:44 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:39:44 (engine) [SQL]->Connecting to database:
20:39:44 (engine) [SQL]->Connection OK!
20:39:44 (engine) test 
20:39:44 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:39:44 (engine) [SQL]->Exec [Done]:Resource id #16
20:39:44 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:39:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:39:46 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:39:46 (engine) [SQL]->Connecting to database:
20:39:46 (engine) [SQL]->Connection OK!
20:39:46 (engine) test 
20:39:46 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:39:46 (engine) [SQL]->Exec [Done]:Resource id #16
20:39:46 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:39:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:39:46 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:39:46 (engine) [SQL]->Connecting to database:
20:39:46 (engine) [SQL]->Connection OK!
20:39:46 (engine) test 
20:39:46 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:39:46 (engine) [SQL]->Exec [Done]:Resource id #16
20:39:46 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:40:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

20:40:21 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

20:40:21 (engine) [SQL]->Connecting to database:
20:40:21 (engine) [SQL]->Connection OK!
20:40:21 (engine) test 
20:40:21 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
20:40:21 (engine) [SQL]->Exec [Done]:Resource id #16
20:40:21 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

20:40:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:40:22 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:40:22 (engine) [SQL]->Connecting to database:
20:40:22 (engine) [SQL]->Connection OK!
20:40:22 (engine) test 
20:40:22 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:40:22 (engine) [SQL]->Exec [Done]:Resource id #16
20:40:22 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:40:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

20:40:22 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:40:22 (engine) [SQL]->Connecting to database:
20:40:22 (engine) [SQL]->Connection OK!
20:40:22 (engine) test 
20:40:22 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
20:40:22 (engine) [SQL]->Exec [Done]:Resource id #16
20:40:22 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

20:40:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

20:40:23 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

20:40:23 (engine) [SQL]->Connecting to database:
20:40:23 (engine) [SQL]->Connection OK!
20:40:23 (engine) test 
20:40:23 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
20:40:23 (engine) [SQL]->Exec [Done]:Resource id #16
20:40:23 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(16) "Vehicula Lacinia"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "116343"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1989-05-05"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

20:40:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

20:40:24 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

20:40:24 (engine) [SQL]->Connecting to database:
20:40:24 (engine) [SQL]->Connection OK!
20:40:24 (engine) test 
20:40:24 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
20:40:24 (engine) [SQL]->Exec [Done]:Resource id #16
20:40:24 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(9) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(3) "dsf"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [8]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

20:40:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:40:29 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:40:29 (engine) [SQL]->Connecting to database:
20:40:29 (engine) [SQL]->Connection OK!
20:40:29 (engine) test 
20:40:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:40:29 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:40:29 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:40:29 (engine) [SQL]->Exec [Done]:Resource id #21
20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:40:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:40:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:40:29 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:40:29 (engine) [SQL]->Connecting to database:
20:40:29 (engine) [SQL]->Connection OK!
20:40:29 (engine) test 
20:40:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:40:29 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:40:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:40:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:40:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:40:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:40:30 (engine) [SQL]->Connecting to database:
20:40:30 (engine) [SQL]->Connection OK!
20:40:30 (engine) test 
20:40:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:40:30 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:40:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:40:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:40:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:40:30 (engine) [SQL]->Connecting to database:
20:40:30 (engine) [SQL]->Connection OK!
20:40:30 (engine) test 
20:40:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:40:30 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:40:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:40:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:40:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:40:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:40:31 (engine) [SQL]->Connecting to database:
20:40:31 (engine) [SQL]->Connection OK!
20:40:31 (engine) test 
20:40:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:40:31 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:40:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:40:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:40:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:40:31 (engine) [SQL]->Connecting to database:
20:40:31 (engine) [SQL]->Connection OK!
20:40:31 (engine) test 
20:40:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:40:31 (engine) [SQL]->Exec [Done]:Resource id #17
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:40:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000
20:40:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:41:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:41:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:41:51 (engine) [SQL]->Connecting to database:
20:41:51 (engine) [SQL]->Connection OK!
20:41:51 (engine) test 
20:41:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:41:51 (engine) [SQL]->Exec [Done]:Resource id #17
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:41:51 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:41:51 (engine) [SQL]->Exec [Done]:Resource id #21
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:41:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:41:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:41:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:41:51 (engine) [SQL]->Connecting to database:
20:41:51 (engine) [SQL]->Connection OK!
20:41:51 (engine) test 
20:41:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:41:51 (engine) [SQL]->Exec [Done]:Resource id #17
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:41:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:41:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:41:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:41:51 (engine) [SQL]->Connecting to database:
20:41:51 (engine) [SQL]->Connection OK!
20:41:51 (engine) test 
20:41:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:41:51 (engine) [SQL]->Exec [Done]:Resource id #17
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:41:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:41:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:41:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:41:52 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:41:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:41:52 (engine) [SQL]->Connecting to database:
20:41:52 (engine) [SQL]->Connection OK!
20:41:52 (engine) test 
20:41:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:41:52 (engine) [SQL]->Exec [Done]:Resource id #17
20:41:52 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:41:52 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:41:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:41:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:41:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:41:53 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:41:53 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:41:53 (engine) [SQL]->Connecting to database:
20:41:53 (engine) [SQL]->Connection OK!
20:41:53 (engine) test 
20:41:53 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:41:53 (engine) [SQL]->Exec [Done]:Resource id #17
20:41:53 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:41:53 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:41:53 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:41:53 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:44:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:44:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:44:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:44:24 (engine) [SQL]->Connecting to database:
20:44:24 (engine) [SQL]->Connection OK!
20:44:24 (engine) test 
20:44:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:44:24 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:44:24 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:44:24 (engine) [SQL]->Exec [Done]:Resource id #21
20:44:24 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:44:24 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:44:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:44:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:44:25 (engine) [SQL]->Connecting to database:
20:44:25 (engine) [SQL]->Connection OK!
20:44:25 (engine) test 
20:44:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:44:25 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:44:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:44:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:44:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:44:25 (engine) [SQL]->Connecting to database:
20:44:25 (engine) [SQL]->Connection OK!
20:44:25 (engine) test 
20:44:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:44:25 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:44:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:44:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:44:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:44:26 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:44:26 (engine) [SQL]->Connecting to database:
20:44:26 (engine) [SQL]->Connection OK!
20:44:26 (engine) test 
20:44:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:44:26 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:44:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:44:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:44:26 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:44:26 (engine) [SQL]->Connecting to database:
20:44:26 (engine) [SQL]->Connection OK!
20:44:26 (engine) test 
20:44:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:44:26 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:44:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:44:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:44:26 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:44:26 (engine) [SQL]->Connecting to database:
20:44:26 (engine) [SQL]->Connection OK!
20:44:26 (engine) test 
20:44:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:44:26 (engine) [SQL]->Exec [Done]:Resource id #17
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:44:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:44:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:45:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:45:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:45:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:45:32 (engine) [SQL]->Connecting to database:
20:45:32 (engine) [SQL]->Connection OK!
20:45:32 (engine) test 
20:45:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:45:32 (engine) [SQL]->Exec [Done]:Resource id #17
20:45:32 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:45:32 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:45:32 (engine) [SQL]->Exec [Done]:Resource id #21
20:45:32 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:45:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:45:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:45:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:45:33 (engine) [SQL]->Connecting to database:
20:45:33 (engine) [SQL]->Connection OK!
20:45:33 (engine) test 
20:45:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:45:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:45:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:45:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:45:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:45:33 (engine) [SQL]->Connecting to database:
20:45:33 (engine) [SQL]->Connection OK!
20:45:33 (engine) test 
20:45:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:45:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:45:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:45:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:45:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:45:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:45:33 (engine) [SQL]->Connecting to database:
20:45:33 (engine) [SQL]->Connection OK!
20:45:33 (engine) test 
20:45:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:45:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:45:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:45:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:45:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:45:34 (engine) [SQL]->Connecting to database:
20:45:34 (engine) [SQL]->Connection OK!
20:45:34 (engine) test 
20:45:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:45:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:45:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:45:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:49:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:49:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:49:57 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:49:57 (engine) [SQL]->Connecting to database:
20:49:57 (engine) [SQL]->Connection OK!
20:49:57 (engine) test 
20:49:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:49:57 (engine) [SQL]->Exec [Done]:Resource id #17
20:49:57 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:49:57 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:49:57 (engine) [SQL]->Exec [Done]:Resource id #21
20:49:57 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:49:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:49:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:49:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:49:58 (engine) [SQL]->Connecting to database:
20:49:58 (engine) [SQL]->Connection OK!
20:49:58 (engine) test 
20:49:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:49:58 (engine) [SQL]->Exec [Done]:Resource id #17
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:49:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:49:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:49:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:49:58 (engine) [SQL]->Connecting to database:
20:49:58 (engine) [SQL]->Connection OK!
20:49:58 (engine) test 
20:49:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:49:58 (engine) [SQL]->Exec [Done]:Resource id #17
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:49:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:49:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:49:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:49:58 (engine) [SQL]->Connecting to database:
20:49:58 (engine) [SQL]->Connection OK!
20:49:58 (engine) test 
20:49:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:49:58 (engine) [SQL]->Exec [Done]:Resource id #17
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:49:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:49:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:49:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:49:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:49:59 (engine) [SQL]->Connecting to database:
20:49:59 (engine) [SQL]->Connection OK!
20:49:59 (engine) test 
20:49:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:49:59 (engine) [SQL]->Exec [Done]:Resource id #17
20:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:49:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:49:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:50:20 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:50:20 (engine) [SQL]->Connecting to database:
20:50:20 (engine) [SQL]->Connection OK!
20:50:20 (engine) test 
20:50:20 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:50:20 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:50:20 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:50:20 (engine) [SQL]->Exec [Done]:Resource id #21
20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:50:20 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:50:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:50:20 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:50:20 (engine) [SQL]->Connecting to database:
20:50:20 (engine) [SQL]->Connection OK!
20:50:20 (engine) test 
20:50:20 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:50:20 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:50:20 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 454344.234
20:50:20 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(454344.234)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:50:21 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:50:21 (engine) [SQL]->Connecting to database:
20:50:21 (engine) [SQL]->Connection OK!
20:50:21 (engine) test 
20:50:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:50:21 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 454344.234
20:50:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(454344.234)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:50:21 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:50:21 (engine) [SQL]->Connecting to database:
20:50:21 (engine) [SQL]->Connection OK!
20:50:21 (engine) test 
20:50:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:50:21 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 454344.234
20:50:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(454344.234)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:50:21 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:50:21 (engine) [SQL]->Connecting to database:
20:50:21 (engine) [SQL]->Connection OK!
20:50:21 (engine) test 
20:50:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:50:21 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:50:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 454344.234
20:50:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(454344.234)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:50:41 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:50:41 (engine) [SQL]->Connecting to database:
20:50:41 (engine) [SQL]->Connection OK!
20:50:41 (engine) test 
20:50:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:50:41 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:50:41 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:50:41 (engine) [SQL]->Exec [Done]:Resource id #21
20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:50:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:50:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:50:41 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:50:41 (engine) [SQL]->Connecting to database:
20:50:41 (engine) [SQL]->Connection OK!
20:50:41 (engine) test 
20:50:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:50:41 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:50:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.5
20:50:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:50:42 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:50:42 (engine) [SQL]->Connecting to database:
20:50:42 (engine) [SQL]->Connection OK!
20:50:42 (engine) test 
20:50:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:50:42 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.5
20:50:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:50:42 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:50:42 (engine) [SQL]->Connecting to database:
20:50:42 (engine) [SQL]->Connection OK!
20:50:42 (engine) test 
20:50:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:50:42 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:50:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.5
20:50:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:50:43 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:50:43 (engine) [SQL]->Connecting to database:
20:50:43 (engine) [SQL]->Connection OK!
20:50:43 (engine) test 
20:50:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:50:43 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.5
20:50:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:50:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

20:50:43 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 5
20:50:43 (engine) [SQL]->Connecting to database:
20:50:43 (engine) [SQL]->Connection OK!
20:50:43 (engine) test 
20:50:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
20:50:43 (engine) [SQL]->Exec [Done]:Resource id #17
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
20:50:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.5
20:50:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(1.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:51:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:51:01 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:51:01 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:51:01 (engine) [SQL]->Connecting to database:
20:51:01 (engine) [SQL]->Connection OK!
20:51:01 (engine) test 
20:51:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:51:01 (engine) [SQL]->Exec [Done]:Resource id #17
20:51:01 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:51:01 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:51:01 (engine) [SQL]->Exec [Done]:Resource id #21
20:51:01 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:51:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:51:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:51:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:51:02 (engine) [SQL]->Connecting to database:
20:51:02 (engine) [SQL]->Connection OK!
20:51:02 (engine) test 
20:51:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:51:02 (engine) [SQL]->Exec [Done]:Resource id #17
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 0.666666666667
20:51:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(0.666666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:51:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:51:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:51:02 (engine) [SQL]->Connecting to database:
20:51:02 (engine) [SQL]->Connection OK!
20:51:02 (engine) test 
20:51:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:51:02 (engine) [SQL]->Exec [Done]:Resource id #17
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 0.666666666667
20:51:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(0.666666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:51:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:51:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:51:02 (engine) [SQL]->Connecting to database:
20:51:02 (engine) [SQL]->Connection OK!
20:51:02 (engine) test 
20:51:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:51:02 (engine) [SQL]->Exec [Done]:Resource id #17
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:51:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 0.666666666667
20:51:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(0.666666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:51:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:51:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:51:03 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:51:03 (engine) [SQL]->Connecting to database:
20:51:03 (engine) [SQL]->Connection OK!
20:51:03 (engine) test 
20:51:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:51:03 (engine) [SQL]->Exec [Done]:Resource id #17
20:51:03 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:51:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:51:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 0.666666666667
20:51:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(0.666666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:52:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:52:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:52:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:52:22 (engine) [SQL]->Connecting to database:
20:52:22 (engine) [SQL]->Connection OK!
20:52:22 (engine) test 
20:52:22 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:52:22 (engine) [SQL]->Exec [Done]:Resource id #17
20:52:22 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:52:22 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:52:22 (engine) [SQL]->Exec [Done]:Resource id #21
20:52:22 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:52:22 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:52:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:52:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:52:23 (engine) [SQL]->Connecting to database:
20:52:23 (engine) [SQL]->Connection OK!
20:52:23 (engine) test 
20:52:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:52:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:52:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:52:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:52:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:52:23 (engine) [SQL]->Connecting to database:
20:52:23 (engine) [SQL]->Connection OK!
20:52:23 (engine) test 
20:52:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:52:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:52:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:52:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:52:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:52:23 (engine) [SQL]->Connecting to database:
20:52:23 (engine) [SQL]->Connection OK!
20:52:23 (engine) test 
20:52:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:52:23 (engine) [SQL]->Exec [Done]:Resource id #17
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:52:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:52:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:52:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:52:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:52:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:52:24 (engine) [SQL]->Connecting to database:
20:52:24 (engine) [SQL]->Connection OK!
20:52:24 (engine) test 
20:52:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:52:24 (engine) [SQL]->Exec [Done]:Resource id #17
20:52:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:52:24 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:52:24 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:52:24 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:53:19 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:53:19 (engine) [SQL]->Connecting to database:
20:53:19 (engine) [SQL]->Connection OK!
20:53:19 (engine) test 
20:53:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:53:19 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:53:19 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:53:19 (engine) [SQL]->Exec [Done]:Resource id #21
20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:53:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:53:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:53:19 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:53:19 (engine) [SQL]->Connecting to database:
20:53:19 (engine) [SQL]->Connection OK!
20:53:19 (engine) test 
20:53:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:53:19 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:53:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:53:20 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:53:20 (engine) [SQL]->Connecting to database:
20:53:20 (engine) [SQL]->Connection OK!
20:53:20 (engine) test 
20:53:20 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:53:20 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:20 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:53:20 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:53:20 (engine) [SQL]->Connecting to database:
20:53:20 (engine) [SQL]->Connection OK!
20:53:20 (engine) test 
20:53:20 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:53:20 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:53:20 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:20 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:53:21 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:53:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:53:21 (engine) [SQL]->Connecting to database:
20:53:21 (engine) [SQL]->Connection OK!
20:53:21 (engine) test 
20:53:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:53:21 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:21 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:21 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:53:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:53:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:53:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:53:46 (engine) [SQL]->Connecting to database:
20:53:46 (engine) [SQL]->Connection OK!
20:53:46 (engine) test 
20:53:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:53:46 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:46 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:53:46 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:53:46 (engine) [SQL]->Exec [Done]:Resource id #21
20:53:46 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:53:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:53:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:53:47 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:53:47 (engine) [SQL]->Connecting to database:
20:53:47 (engine) [SQL]->Connection OK!
20:53:47 (engine) test 
20:53:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:53:47 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:53:47 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:53:47 (engine) [SQL]->Connecting to database:
20:53:47 (engine) [SQL]->Connection OK!
20:53:47 (engine) test 
20:53:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:53:47 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:53:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:53:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:53:48 (engine) [SQL]->Connecting to database:
20:53:48 (engine) [SQL]->Connection OK!
20:53:48 (engine) test 
20:53:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:53:48 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:53:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:53:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:53:48 (engine) [SQL]->Connecting to database:
20:53:48 (engine) [SQL]->Connection OK!
20:53:48 (engine) test 
20:53:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:53:48 (engine) [SQL]->Exec [Done]:Resource id #17
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:53:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:53:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:55:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:55:04 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:55:04 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:55:04 (engine) [SQL]->Connecting to database:
20:55:04 (engine) [SQL]->Connection OK!
20:55:04 (engine) test 
20:55:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:55:04 (engine) [SQL]->Exec [Done]:Resource id #17
20:55:04 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:55:04 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:55:04 (engine) [SQL]->Exec [Done]:Resource id #21
20:55:04 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:55:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:55:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:55:05 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:55:05 (engine) [SQL]->Connecting to database:
20:55:05 (engine) [SQL]->Connection OK!
20:55:05 (engine) test 
20:55:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:55:05 (engine) [SQL]->Exec [Done]:Resource id #17
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:55:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:55:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:55:05 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:55:05 (engine) [SQL]->Connecting to database:
20:55:05 (engine) [SQL]->Connection OK!
20:55:05 (engine) test 
20:55:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:55:05 (engine) [SQL]->Exec [Done]:Resource id #17
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:55:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:55:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:55:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:55:06 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:55:06 (engine) [SQL]->Connecting to database:
20:55:06 (engine) [SQL]->Connection OK!
20:55:06 (engine) test 
20:55:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:55:06 (engine) [SQL]->Exec [Done]:Resource id #17
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:55:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:55:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:55:06 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:55:06 (engine) [SQL]->Connecting to database:
20:55:06 (engine) [SQL]->Connection OK!
20:55:06 (engine) test 
20:55:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:55:06 (engine) [SQL]->Exec [Done]:Resource id #17
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:55:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:55:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:57:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:57:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:57:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:57:34 (engine) [SQL]->Connecting to database:
20:57:34 (engine) [SQL]->Connection OK!
20:57:34 (engine) test 
20:57:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:57:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:57:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:57:34 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:57:34 (engine) [SQL]->Exec [Done]:Resource id #21
20:57:34 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:57:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:57:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:57:36 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:57:36 (engine) [SQL]->Connecting to database:
20:57:36 (engine) [SQL]->Connection OK!
20:57:36 (engine) test 
20:57:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:57:36 (engine) [SQL]->Exec [Done]:Resource id #17
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:57:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:57:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:57:36 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:57:36 (engine) [SQL]->Connecting to database:
20:57:36 (engine) [SQL]->Connection OK!
20:57:36 (engine) test 
20:57:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:57:36 (engine) [SQL]->Exec [Done]:Resource id #17
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:57:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:57:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:57:36 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:57:36 (engine) [SQL]->Connecting to database:
20:57:36 (engine) [SQL]->Connection OK!
20:57:36 (engine) test 
20:57:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:57:36 (engine) [SQL]->Exec [Done]:Resource id #17
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:57:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:57:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:57:36 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:57:36 (engine) [SQL]->Connecting to database:
20:57:36 (engine) [SQL]->Connection OK!
20:57:36 (engine) test 
20:57:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:57:36 (engine) [SQL]->Exec [Done]:Resource id #17
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:57:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:57:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:58:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:58:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:58:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:58:33 (engine) [SQL]->Connecting to database:
20:58:33 (engine) [SQL]->Connection OK!
20:58:33 (engine) test 
20:58:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:58:33 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:33 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:58:33 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:58:33 (engine) [SQL]->Exec [Done]:Resource id #21
20:58:33 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:58:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:58:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:58:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:58:34 (engine) [SQL]->Connecting to database:
20:58:34 (engine) [SQL]->Connection OK!
20:58:34 (engine) test 
20:58:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:58:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:58:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:58:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:58:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:58:34 (engine) [SQL]->Connecting to database:
20:58:34 (engine) [SQL]->Connection OK!
20:58:34 (engine) test 
20:58:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:58:34 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:58:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:58:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:58:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:58:35 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:58:35 (engine) [SQL]->Connecting to database:
20:58:35 (engine) [SQL]->Connection OK!
20:58:35 (engine) test 
20:58:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:58:35 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:58:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:58:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:58:35 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:58:35 (engine) [SQL]->Connecting to database:
20:58:35 (engine) [SQL]->Connection OK!
20:58:35 (engine) test 
20:58:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:58:35 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:58:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1.0016666655
20:58:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1.0016666655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:58:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:58:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:58:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:58:58 (engine) [SQL]->Connecting to database:
20:58:58 (engine) [SQL]->Connection OK!
20:58:58 (engine) test 
20:58:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:58:58 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:58 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:58:58 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:58:58 (engine) [SQL]->Exec [Done]:Resource id #21
20:58:58 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:58:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:58:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:58:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:58:59 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:58:59 (engine) [SQL]->Connecting to database:
20:58:59 (engine) [SQL]->Connection OK!
20:58:59 (engine) test 
20:58:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:58:59 (engine) [SQL]->Exec [Done]:Resource id #17
20:58:59 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:58:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:58:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:58:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:59:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:59:00 (engine) [SQL]->Connecting to database:
20:59:00 (engine) [SQL]->Connection OK!
20:59:00 (engine) test 
20:59:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:59:00 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:59:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:59:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:59:00 (engine) [SQL]->Connecting to database:
20:59:00 (engine) [SQL]->Connection OK!
20:59:00 (engine) test 
20:59:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:59:00 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:59:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:59:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:59:00 (engine) [SQL]->Connecting to database:
20:59:00 (engine) [SQL]->Connection OK!
20:59:00 (engine) test 
20:59:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:59:00 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:59:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 1
20:59:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

20:59:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 8
20:59:24 (engine) [SQL]->Connecting to database:
20:59:24 (engine) [SQL]->Connection OK!
20:59:24 (engine) test 
20:59:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
20:59:24 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 5
20:59:24 (engine) [SQL]->Exec:SELECT tppt.* , tpt.MinimumYears
				FROM TaxPayerProgramTable tppt
				LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
				WHERE  tpt.ID = 5 AND tppt.ConfirmedDate IS NOT NULL
20:59:24 (engine) [SQL]->Exec [Done]:Resource id #21
20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Last year program exist. ID = 5
20:59:24 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    string(1) "7"
    ["Type"]=>
    int(1)
  }
  ["total"]=>
  int(1)
}

20:59:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

20:59:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
20:59:24 (engine) [SQL]->Connecting to database:
20:59:24 (engine) [SQL]->Connection OK!
20:59:24 (engine) test 
20:59:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
20:59:24 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
20:59:24 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 14.3333333333
20:59:24 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(14.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

20:59:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
20:59:25 (engine) [SQL]->Connecting to database:
20:59:25 (engine) [SQL]->Connection OK!
20:59:25 (engine) test 
20:59:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
20:59:25 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 14.3333333333
20:59:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(14.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

20:59:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
20:59:25 (engine) [SQL]->Connecting to database:
20:59:25 (engine) [SQL]->Connection OK!
20:59:25 (engine) test 
20:59:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
20:59:25 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 14.3333333333
20:59:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(14.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

20:59:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

20:59:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
20:59:25 (engine) [SQL]->Connecting to database:
20:59:25 (engine) [SQL]->Connection OK!
20:59:25 (engine) test 
20:59:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
20:59:25 (engine) [SQL]->Exec [Done]:Resource id #17
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
20:59:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 10000 Rate = 14.3333333333
20:59:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(14.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

21:04:06 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(47) "{\"action\":\"Admin.ClearDatabase\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

21:04:06 (engine) [JSON (Admin.ClearDatabase)]->int(1)

21:04:06 (engine) [SQL]->Connecting to database:
21:04:06 (engine) [SQL]->Connection OK!
21:04:06 (engine) test 
21:04:06 (engine) [SQL]->Exec:DROP TABLE IF EXISTS `InstitutionBudgetTable` ,
			`InstitutionTable` ,
			`SystemTable` ,
			`TaxPayerProgramTable` ,
			`TaxPayerTable` ,
			`TaxProgramTable` ,
			`TaxYearTable` ;
21:04:06 (engine) [SQL]->Exec [Done]:
21:04:06 (engine) [SQL]->Exec:DROP TABLE IF EXISTS `InstitutionBudgetTable` ,
			`InstitutionTable` ,
			`SystemTable` ,
			`TaxPayerProgramTable` ,
			`TaxPayerTable` ,
			`TaxProgramTable` ,
			`TaxYearTable` ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:
		CREATE TABLE IF NOT EXISTS `InstitutionBudgetTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `TaxYearID` int(11) NOT NULL,
		  `InstitutionID` int(11) NOT NULL,
		  `ConfirmedDate` date,
		  PRIMARY KEY (`ID`),
		  KEY `TaxYearID` (`TaxYearID`),
		  KEY `InstitutionID` (`InstitutionID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `InstitutionTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `Code` text NOT NULL,
		  PRIMARY KEY (`ID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `SystemTable` (
		  `ID` int(11) NOT NULL,
		  `Date` datetime NOT NULL,
		  PRIMARY KEY (`ID`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxPayerProgramTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `TaxPayerID` int(11) NOT NULL,
		  `TaxProgramID` int(11) NOT NULL,
		  `YearsRequired` int(11) NOT NULL,
		  `CalculatedTaxAmount` int(11) NOT NULL,
		  `BenefitsAccumulated` int(11) NOT NULL,
		  `ConfirmedDate` date NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `TaxPayerID` (`TaxPayerID`),
		  KEY `TaxProgramID` (`TaxProgramID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxPayerTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `Code` text NOT NULL,
		  `Income` int(11) NOT NULL,
		  `ParentID` int(11),
		  `DateOfCreation` date NOT NULL,
		  `Type` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `ParentID` (`ParentID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxProgramTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `PredictedBudget` int(11) NOT NULL,
		  `PredictedUsers` int(11) NOT NULL,
		  `InstitutionBudgetID` int(11) NOT NULL,
		  `ExtendsProgramID` int(11),
		  `MinimumYears` int(11) NOT NULL,
		  `BenefitsExpireInYears` int(11) NOT NULL,
		  `BenefitsApplyTo` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `InstitutionBudgetID` (`InstitutionBudgetID`),
		  KEY `ExtendsProgramID` (`ExtendsProgramID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxYearTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Year` year(4) NOT NULL,
		  `SubmitDate` date NOT NULL,
		  `StartDate` date NOT NULL,
		  `EndDate` date NOT NULL,
		  `State` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  UNIQUE KEY `Year` (`Year`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:ALTER TABLE `InstitutionBudgetTable`
		  ADD CONSTRAINT `InstitutionBudgetTable_ibfk_2` FOREIGN KEY (`InstitutionID`) REFERENCES `InstitutionTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `InstitutionBudgetTable_ibfk_1` FOREIGN KEY (`TaxYearID`) REFERENCES `TaxYearTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:ALTER TABLE `TaxPayerProgramTable`
		  ADD CONSTRAINT `TaxPayerProgramTable_ibfk_2` FOREIGN KEY (`TaxProgramID`) REFERENCES `TaxProgramTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `TaxPayerProgramTable_ibfk_1` FOREIGN KEY (`TaxPayerID`) REFERENCES `TaxPayerTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:ALTER TABLE `TaxPayerTable`
		  ADD CONSTRAINT `TaxPayerTable_ibfk_1` FOREIGN KEY (`ParentID`) REFERENCES `TaxPayerTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [SQL]->Exec:ALTER TABLE `TaxProgramTable`
		  ADD CONSTRAINT `TaxProgramTable_ibfk_2` FOREIGN KEY (`ExtendsProgramID`) REFERENCES `TaxProgramTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `TaxProgramTable_ibfk_1` FOREIGN KEY (`InstitutionBudgetID`) REFERENCES `InstitutionBudgetTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
			
21:04:06 (engine) [SQL]->Exec [Done]:1
21:04:06 (engine) [RESPONSE (Admin.ClearDatabase)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  NULL
  ["total"]=>
  int(1)
}

21:04:09 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(45) "{\"action\":\"Admin.CreateWorld\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

21:04:09 (engine) [JSON (Admin.CreateWorld)]->int(1)

21:04:09 (engine) [SQL]->Connecting to database:
21:04:09 (engine) [SQL]->Connection OK!
21:04:09 (engine) test 
21:04:09 (engine) [SQL]->Exec:insert into SystemTable (ID, Date) Values
			(1, STR_TO_DATE('Jan/01/2012', '%M/%d/%Y'));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of education', 'I00001');
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Social Ministry', 'I00002');
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of the defence', 'I00003');
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of the interior', 'I00004');
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Dui','T10001',0,'120665',DATE_SUB(curdate(),interval 42 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Neque','T10002',0,'56319',DATE_SUB(curdate(),interval 6 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In A','T10003',0,'46037',DATE_SUB(curdate(),interval 78 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Lectus','T10004',0,'99624',DATE_SUB(curdate(),interval 19 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Praesent','T10005',0,'3552',DATE_SUB(curdate(),interval 64 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Donec','T10006',0,'83440',DATE_SUB(curdate(),interval 39 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Quis','T10007',0,'168592',DATE_SUB(curdate(),interval 78 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Aliquet','T10008',0,'191344',DATE_SUB(curdate(),interval 57 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Varius','T10009',0,'196554',DATE_SUB(curdate(),interval 41 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Fringilla','T10010',0,'94720',DATE_SUB(curdate(),interval 79 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Fermentum','T10011',0,'113185',DATE_SUB(curdate(),interval 35 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Commodo','T10012',0,'109605',DATE_SUB(curdate(),interval 66 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Turpis','T10013',0,'60383',DATE_SUB(curdate(),interval 11 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Vestibulum','T10014',0,'99839',DATE_SUB(curdate(),interval 69 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Nec','T10015',0,'94393',DATE_SUB(curdate(),interval 78 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Praesent','T10016',0,'67743',DATE_SUB(curdate(),interval 36 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Tempor','T10017',0,'154209',DATE_SUB(curdate(),interval 13 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Aliquet','T10018',0,'185355',DATE_SUB(curdate(),interval 83 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Urna','T10019',0,'36081',DATE_SUB(curdate(),interval 28 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Vitae','T10020',0,'188922',DATE_SUB(curdate(),interval 18 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Et','T10021',0,'59243',DATE_SUB(curdate(),interval 70 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Potenti','T10022',0,'77582',DATE_SUB(curdate(),interval 100 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nibh','T10023',0,'154353',DATE_SUB(curdate(),interval 73 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Eleifend','T10024',0,'16450',DATE_SUB(curdate(),interval 28 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ultrices','T10025',0,'83121',DATE_SUB(curdate(),interval 1 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Nisl','T10026',0,'168728',DATE_SUB(curdate(),interval 4 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Nullam','T10027',0,'65861',DATE_SUB(curdate(),interval 39 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Nunc','T10028',0,'115009',DATE_SUB(curdate(),interval 4 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Nulla','T10029',0,'148341',DATE_SUB(curdate(),interval 49 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Tincidunt','T10030',0,'97097',DATE_SUB(curdate(),interval 81 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Proin','T10031',0,'105857',DATE_SUB(curdate(),interval 28 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Imperdiet','T10032',0,'111064',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Penatibus Imperdiet','T10033',0,'163503',DATE_SUB(curdate(),interval 56 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Velit','T10034',0,'121826',DATE_SUB(curdate(),interval 14 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Vel','T10035',0,'108041',DATE_SUB(curdate(),interval 44 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Aliquam','T10036',0,'96876',DATE_SUB(curdate(),interval 74 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis A','T10037',0,'43774',DATE_SUB(curdate(),interval 65 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Fermentum','T10038',0,'91484',DATE_SUB(curdate(),interval 34 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt In','T10039',0,'124645',DATE_SUB(curdate(),interval 33 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Placerat','T10040',0,'25805',DATE_SUB(curdate(),interval 6 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Fermentum','T10041',0,'125165',DATE_SUB(curdate(),interval 46 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Elit','T10042',0,'122229',DATE_SUB(curdate(),interval 29 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Auctor','T10043',0,'146114',DATE_SUB(curdate(),interval 38 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit In','T10044',0,'23705',DATE_SUB(curdate(),interval 25 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Tellus','T10045',0,'181259',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Risus','T10046',0,'28382',DATE_SUB(curdate(),interval 0 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Eget','T10047',0,'66537',DATE_SUB(curdate(),interval 95 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Natoque','T10048',0,'2343',DATE_SUB(curdate(),interval 9 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum In','T10049',0,'111180',DATE_SUB(curdate(),interval 1 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nibh','T10050',0,'61764',DATE_SUB(curdate(),interval 4 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Congue','T10051',0,'86325',DATE_SUB(curdate(),interval 59 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa 
','T10052',0,'167621',DATE_SUB(curdate(),interval 70 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Lacinia','T10053',0,'98420',DATE_SUB(curdate(),interval 93 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Bibendum','T10054',0,'186532',DATE_SUB(curdate(),interval 46 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Velit','T10055',0,'81437',DATE_SUB(curdate(),interval 34 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Magna','T10056',0,'87191',DATE_SUB(curdate(),interval 13 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Purus','T10057',0,'30247',DATE_SUB(curdate(),interval 93 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Natoque','T10058',0,'194965',DATE_SUB(curdate(),interval 48 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Bibendum','T10059',0,'12458',DATE_SUB(curdate(),interval 76 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Risus','T10060',0,'89830',DATE_SUB(curdate(),interval 85 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Aenean','T10061',0,'154692',DATE_SUB(curdate(),interval 76 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Lectus','T10062',0,'42287',DATE_SUB(curdate(),interval 98 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet In','T10063',0,'63444',DATE_SUB(curdate(),interval 70 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Lacinia','T10064',0,'166764',DATE_SUB(curdate(),interval 9 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Turpis','T10065',0,'4579',DATE_SUB(curdate(),interval 91 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique ','T10066',0,'76246',DATE_SUB(curdate(),interval 95 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Sodales','T10067',0,'139669',DATE_SUB(curdate(),interval 36 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Quisque','T10068',0,'40985',DATE_SUB(curdate(),interval 99 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Sapien','T10069',0,'148325',DATE_SUB(curdate(),interval 67 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Proin','T10070',0,'127682',DATE_SUB(curdate(),interval 66 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Mauris','T10071',0,'70897',DATE_SUB(curdate(),interval 61 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Placerat','T10072',0,'140632',DATE_SUB(curdate(),interval 45 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Dui','T10073',0,'71552',DATE_SUB(curdate(),interval 62 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Dignissim','T10074',0,'112606',DATE_SUB(curdate(),interval 12 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Sollicitudin','T10075',0,'97744',DATE_SUB(curdate(),interval 53 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Nec','T10076',0,'103029',DATE_SUB(curdate(),interval 50 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Proin','T10077',0,'32325',DATE_SUB(curdate(),interval 36 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Vulputate','T10078',0,'2500',DATE_SUB(curdate(),interval 78 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Nec','T10079',0,'78140',DATE_SUB(curdate(),interval 46 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Diam','T10080',0,'183660',DATE_SUB(curdate(),interval 73 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Vulputate','T10081',0,'69423',DATE_SUB(curdate(),interval 54 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Non','T10082',0,'134326',DATE_SUB(curdate(),interval 19 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Vestibulum','T10083',0,'144797',DATE_SUB(curdate(),interval 58 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Placerat','T10084',0,'15602',DATE_SUB(curdate(),interval 53 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Placerat','T10085',0,'176515',DATE_SUB(curdate(),interval 71 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Nulla','T10086',0,'97444',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla A','T10087',0,'51963',DATE_SUB(curdate(),interval 82 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Placerat','T10088',0,'109200',DATE_SUB(curdate(),interval 79 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Nulla','T10089',0,'67075',DATE_SUB(curdate(),interval 47 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Dolor','T10090',0,'133356',DATE_SUB(curdate(),interval 98 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Enim','T10091',0,'111034',DATE_SUB(curdate(),interval 2 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Aliquet','T10092',0,'109478',DATE_SUB(curdate(),interval 12 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Praesent','T10093',0,'166301',DATE_SUB(curdate(),interval 92 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Varius','T10094',0,'141569',DATE_SUB(curdate(),interval 59 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Malesuada','T10095',0,'80891',DATE_SUB(curdate(),interval 17 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Velit','T10096',0,'192023',DATE_SUB(curdate(),interval 60 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Ultricies','T10097',0,'13833',DATE_SUB(curdate(),interval 65 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Pharetra','T10098',0,'124321',DATE_SUB(curdate(),interval 47 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Placerat','T10099',0,'98242',DATE_SUB(curdate(),interval 76 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Congue','T10100',0,'176477',DATE_SUB(curdate(),interval 68 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Lorem','T10101',0,'119057',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Convallis','T10102',0,'76141',DATE_SUB(curdate(),interval 23 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Metus','T10103',0,'79538',DATE_SUB(curdate(),interval 42 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Ornare','T10104',0,'3301',DATE_SUB(curdate(),interval 58 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Erat','T10105',0,'45201',DATE_SUB(curdate(),interval 96 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Commodo','T10106',0,'85128',DATE_SUB(curdate(),interval 95 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Sed','T10107',0,'140983',DATE_SUB(curdate(),interval 84 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Condimentum','T10108',0,'103427',DATE_SUB(curdate(),interval 42 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Nisl','T10109',0,'43525',DATE_SUB(curdate(),interval 33 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Leo','T10110',0,'112614',DATE_SUB(curdate(),interval 69 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Tincidunt','T10111',0,'20578',DATE_SUB(curdate(),interval 12 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Ut','T10112',0,'139657',DATE_SUB(curdate(),interval 98 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Aliquam','T10113',0,'185530',DATE_SUB(curdate(),interval 2 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Ipsum','T10114',0,'195001',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Vehicula','T10115',0,'126127',DATE_SUB(curdate(),interval 22 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Quisque','T10116',0,'129925',DATE_SUB(curdate(),interval 57 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin 
','T10117',0,'180444',DATE_SUB(curdate(),interval 68 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Et','T10118',0,'72412',DATE_SUB(curdate(),interval 85 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Penatibus','T10119',0,'193635',DATE_SUB(curdate(),interval 75 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Sodales','T10120',0,'143295',DATE_SUB(curdate(),interval 79 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Nulla','T10121',0,'163222',DATE_SUB(curdate(),interval 36 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Fringilla','T10122',0,'31785',DATE_SUB(curdate(),interval 27 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Fringilla','T10123',0,'98631',DATE_SUB(curdate(),interval 74 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Pellentesque','T10124',0,'61333',DATE_SUB(curdate(),interval 19 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Varius','T10125',0,'174648',DATE_SUB(curdate(),interval 48 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Dui','T10126',0,'64935',DATE_SUB(curdate(),interval 10 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Blandit','T10127',0,'168968',DATE_SUB(curdate(),interval 28 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Varius','T10128',0,'14806',DATE_SUB(curdate(),interval 55 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Praesent','T10129',0,'182539',DATE_SUB(curdate(),interval 20 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Ipsum','T10130',0,'94079',DATE_SUB(curdate(),interval 15 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Eget','T10131',0,'178109',DATE_SUB(curdate(),interval 80 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Facilisis','T10132',0,'199204',DATE_SUB(curdate(),interval 11 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Nulla','T10133',0,'118391',DATE_SUB(curdate(),interval 8 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Sed','T10134',0,'36097',DATE_SUB(curdate(),interval 81 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Rhoncus','T10135',0,'17880',DATE_SUB(curdate(),interval 17 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Imperdiet','T10136',0,'143768',DATE_SUB(curdate(),interval 79 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Aliquet','T10137',0,'198983',DATE_SUB(curdate(),interval 74 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Et','T10138',0,'177424',DATE_SUB(curdate(),interval 56 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Nunc','T10139',0,'72569',DATE_SUB(curdate(),interval 54 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Aenean','T10140',0,'130307',DATE_SUB(curdate(),interval 38 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Aliquet','T10141',0,'92244',DATE_SUB(curdate(),interval 33 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Lorem','T10142',0,'27492',DATE_SUB(curdate(),interval 37 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales A','T10143',0,'107675',DATE_SUB(curdate(),interval 25 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Proin','T10144',0,'9147',DATE_SUB(curdate(),interval 44 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Nulla','T10145',0,'35740',DATE_SUB(curdate(),interval 59 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Interdum','T10146',0,'31247',DATE_SUB(curdate(),interval 94 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Hendrerit','T10147',0,'94000',DATE_SUB(curdate(),interval 82 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Mauris','T10148',0,'39859',DATE_SUB(curdate(),interval 10 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Velit','T10149',0,'87744',DATE_SUB(curdate(),interval 53 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Ornare','T10150',0,'178944',DATE_SUB(curdate(),interval 97 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Quis','T10151',0,'44585',DATE_SUB(curdate(),interval 19 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Et','T10152',0,'127444',DATE_SUB(curdate(),interval 58 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Hendrerit','T10153',0,'34191',DATE_SUB(curdate(),interval 82 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero In','T10154',0,'150017',DATE_SUB(curdate(),interval 73 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Malesuada','T10155',0,'108711',DATE_SUB(curdate(),interval 73 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Tortor','T10156',0,'166055',DATE_SUB(curdate(),interval 71 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Et','T10157',0,'46352',DATE_SUB(curdate(),interval 71 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Erat','T10158',0,'134970',DATE_SUB(curdate(),interval 65 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Id','T10159',0,'168313',DATE_SUB(curdate(),interval 25 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Nascetur','T10160',0,'165789',DATE_SUB(curdate(),interval 48 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies ','T10161',0,'58203',DATE_SUB(curdate(),interval 17 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nulla','T10162',0,'180331',DATE_SUB(curdate(),interval 17 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Tristique','T10163',0,'179519',DATE_SUB(curdate(),interval 60 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Vitae','T10164',0,'61884',DATE_SUB(curdate(),interval 59 year));
21:04:09 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Dui','T10165',0,'59402',DATE_SUB(curdate(),interval 85 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Imperdiet','T10166',0,'98050',DATE_SUB(curdate(),interval 22 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Morbi','T10167',0,'95426',DATE_SUB(curdate(),interval 3 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Donec','T10168',0,'102362',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Tempus','T10169',0,'56348',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Ac','T10170',0,'161289',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Fermentum','T10171',0,'141579',DATE_SUB(curdate(),interval 82 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Adipiscing','T10172',0,'81613',DATE_SUB(curdate(),interval 43 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Fermentum','T10173',0,'54159',DATE_SUB(curdate(),interval 22 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Diam','T10174',0,'90681',DATE_SUB(curdate(),interval 55 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Sagittis','T10175',0,'116527',DATE_SUB(curdate(),interval 91 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Diam','T10176',0,'1752',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Duis','T10177',0,'35130',DATE_SUB(curdate(),interval 74 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Ac','T10178',0,'169260',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Laoreet','T10179',0,'183828',DATE_SUB(curdate(),interval 11 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis In','T10180',0,'109361',DATE_SUB(curdate(),interval 13 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Hendrerit','T10181',0,'71236',DATE_SUB(curdate(),interval 71 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Etiam','T10182',0,'51158',DATE_SUB(curdate(),interval 67 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Ullamcorper','T10183',0,'114996',DATE_SUB(curdate(),interval 98 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Ultricies','T10184',0,'103861',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nec','T10185',0,'114267',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Magna','T10186',0,'90127',DATE_SUB(curdate(),interval 36 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Metus','T10187',0,'96247',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Dui','T10188',0,'134671',DATE_SUB(curdate(),interval 73 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Quis','T10189',0,'87698',DATE_SUB(curdate(),interval 42 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Nec','T10190',0,'19161',DATE_SUB(curdate(),interval 58 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Eros','T10191',0,'111193',DATE_SUB(curdate(),interval 47 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Mauris','T10192',0,'59143',DATE_SUB(curdate(),interval 13 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna 
','T10193',0,'95385',DATE_SUB(curdate(),interval 45 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Donec','T10194',0,'162098',DATE_SUB(curdate(),interval 25 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Blandit','T10195',0,'159970',DATE_SUB(curdate(),interval 100 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Dis','T10196',0,'144717',DATE_SUB(curdate(),interval 16 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Pellentesque','T10197',0,'117939',DATE_SUB(curdate(),interval 34 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Ac','T10198',0,'184219',DATE_SUB(curdate(),interval 39 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Montes','T10199',0,'170925',DATE_SUB(curdate(),interval 61 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Auctor','T10200',0,'147920',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing In','T10201',0,'153971',DATE_SUB(curdate(),interval 30 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Amet','T10202',0,'111717',DATE_SUB(curdate(),interval 44 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Aenean','T10203',0,'87146',DATE_SUB(curdate(),interval 19 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Vestibulum','T10204',0,'71444',DATE_SUB(curdate(),interval 33 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Fermentum','T10205',0,'135245',DATE_SUB(curdate(),interval 17 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Leo','T10206',0,'113357',DATE_SUB(curdate(),interval 99 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Massa','T10207',0,'119905',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Tellus','T10208',0,'189852',DATE_SUB(curdate(),interval 59 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Vestibulum','T10209',0,'178243',DATE_SUB(curdate(),interval 70 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Faucibus','T10210',0,'28228',DATE_SUB(curdate(),interval 17 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Ornare','T10211',0,'72666',DATE_SUB(curdate(),interval 64 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Morbi','T10212',0,'194847',DATE_SUB(curdate(),interval 5 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Ornare','T10213',0,'47059',DATE_SUB(curdate(),interval 30 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Vulputate','T10214',0,'57717',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Praesent','T10215',0,'189768',DATE_SUB(curdate(),interval 80 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Id','T10216',0,'76875',DATE_SUB(curdate(),interval 79 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Vulputate','T10217',0,'96522',DATE_SUB(curdate(),interval 92 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Magna','T10218',0,'17634',DATE_SUB(curdate(),interval 53 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Faucibus','T10219',0,'34694',DATE_SUB(curdate(),interval 94 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Quisque','T10220',0,'198876',DATE_SUB(curdate(),interval 84 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Vestibulum','T10221',0,'27879',DATE_SUB(curdate(),interval 4 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Praesent','T10222',0,'73613',DATE_SUB(curdate(),interval 25 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Leo','T10223',0,'10095',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nisi','T10224',0,'65241',DATE_SUB(curdate(),interval 84 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Etiam','T10225',0,'149775',DATE_SUB(curdate(),interval 44 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ullamcorper','T10226',0,'193886',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Pellentesque','T10227',0,'114002',DATE_SUB(curdate(),interval 46 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Duis Turpis','T10228',0,'60022',DATE_SUB(curdate(),interval 8 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Massa','T10229',0,'26938',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Volutpat','T10230',0,'16211',DATE_SUB(curdate(),interval 18 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Id','T10231',0,'145380',DATE_SUB(curdate(),interval 3 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Nunc','T10232',0,'173376',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Gravida','T10233',0,'142529',DATE_SUB(curdate(),interval 29 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Ut','T10234',0,'185538',DATE_SUB(curdate(),interval 74 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ligula','T10235',0,'40387',DATE_SUB(curdate(),interval 11 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Adipiscing','T10236',0,'40869',DATE_SUB(curdate(),interval 86 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Tellus','T10237',0,'136392',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Porttitor','T10238',0,'198522',DATE_SUB(curdate(),interval 66 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Morbi','T10239',0,'139226',DATE_SUB(curdate(),interval 46 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Praesent','T10240',0,'147552',DATE_SUB(curdate(),interval 64 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Faucibus','T10241',0,'185804',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Molestie','T10242',0,'74582',DATE_SUB(curdate(),interval 96 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Mollis','T10243',0,'14605',DATE_SUB(curdate(),interval 42 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Vulputate','T10244',0,'54525',DATE_SUB(curdate(),interval 1 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Mauris','T10245',0,'165496',DATE_SUB(curdate(),interval 46 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Sed','T10246',0,'23935',DATE_SUB(curdate(),interval 61 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Hendrerit','T10247',0,'14617',DATE_SUB(curdate(),interval 31 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Neque','T10248',0,'189347',DATE_SUB(curdate(),interval 56 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Enim','T10249',0,'37830',DATE_SUB(curdate(),interval 39 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Praesent','T10250',0,'70234',DATE_SUB(curdate(),interval 8 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Convallis','T10251',0,'100669',DATE_SUB(curdate(),interval 21 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Nunc','T10252',0,'46449',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Sed','T10253',0,'155240',DATE_SUB(curdate(),interval 45 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Id','T10254',0,'12062',DATE_SUB(curdate(),interval 42 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Id','T10255',0,'146322',DATE_SUB(curdate(),interval 9 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Volutpat','T10256',0,'129619',DATE_SUB(curdate(),interval 20 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Ullamcorper','T10257',0,'119845',DATE_SUB(curdate(),interval 28 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Velit','T10258',0,'74683',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Enim','T10259',0,'150004',DATE_SUB(curdate(),interval 7 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ac','T10260',0,'78828',DATE_SUB(curdate(),interval 38 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Vitae','T10261',0,'166290',DATE_SUB(curdate(),interval 93 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Dictum','T10262',0,'68244',DATE_SUB(curdate(),interval 78 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Mollis','T10263',0,'173681',DATE_SUB(curdate(),interval 97 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Malesuada','T10264',0,'34982',DATE_SUB(curdate(),interval 30 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Suscipit','T10265',0,'118364',DATE_SUB(curdate(),interval 76 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Eget','T10266',0,'57854',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Congue','T10267',0,'35056',DATE_SUB(curdate(),interval 49 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Arcu','T10268',0,'175602',DATE_SUB(curdate(),interval 6 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Vitae','T10269',0,'197074',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In In','T10270',0,'116775',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Est','T10271',0,'119156',DATE_SUB(curdate(),interval 15 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Urna','T10272',0,'91172',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Accumsan','T10273',0,'15114',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Risus','T10274',0,'73696',DATE_SUB(curdate(),interval 86 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Non','T10275',0,'69925',DATE_SUB(curdate(),interval 42 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Vestibulum','T10276',0,'97851',DATE_SUB(curdate(),interval 86 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Parturient','T10277',0,'131786',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Id','T10278',0,'32936',DATE_SUB(curdate(),interval 20 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Diam','T10279',0,'70245',DATE_SUB(curdate(),interval 67 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Condimentum','T10280',0,'197278',DATE_SUB(curdate(),interval 7 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Commodo','T10281',0,'69067',DATE_SUB(curdate(),interval 87 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Lorem','T10282',0,'144517',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Mollis','T10283',0,'51327',DATE_SUB(curdate(),interval 37 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Lacinia','T10284',0,'44743',DATE_SUB(curdate(),interval 23 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Vehicula','T10285',0,'155051',DATE_SUB(curdate(),interval 2 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Rutrum','T10286',0,'44471',DATE_SUB(curdate(),interval 82 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Mollis','T10287',0,'96881',DATE_SUB(curdate(),interval 23 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Dis','T10288',0,'61505',DATE_SUB(curdate(),interval 23 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis A','T10289',0,'20622',DATE_SUB(curdate(),interval 96 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Id','T10290',0,'158101',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Accumsan','T10291',0,'199005',DATE_SUB(curdate(),interval 19 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Interdum','T10292',0,'86941',DATE_SUB(curdate(),interval 1 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Varius','T10293',0,'7052',DATE_SUB(curdate(),interval 22 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Proin','T10294',0,'9476',DATE_SUB(curdate(),interval 85 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Mauris','T10295',0,'16366',DATE_SUB(curdate(),interval 21 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Malesuada','T10296',0,'89459',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla 
','T10297',0,'98981',DATE_SUB(curdate(),interval 41 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis At','T10298',0,'6632',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Dui','T10299',0,'94357',DATE_SUB(curdate(),interval 12 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Sed','T10300',0,'27822',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Donec','T10301',0,'115031',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Euismod','T10302',0,'23324',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Magna','T10303',0,'95011',DATE_SUB(curdate(),interval 15 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Molestie','T10304',0,'138450',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Tellus','T10305',0,'7790',DATE_SUB(curdate(),interval 85 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Ipsum','T10306',0,'24578',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Laoreet','T10307',0,'186137',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Ipsum','T10308',0,'139108',DATE_SUB(curdate(),interval 62 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Sollicitudin','T10309',0,'176791',DATE_SUB(curdate(),interval 68 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Lorem','T10310',0,'187870',DATE_SUB(curdate(),interval 4 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Ut','T10311',0,'40892',DATE_SUB(curdate(),interval 79 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Id','T10312',0,'83380',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Cum','T10313',0,'131676',DATE_SUB(curdate(),interval 56 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Convallis','T10314',0,'72308',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Blandit','T10315',0,'195102',DATE_SUB(curdate(),interval 88 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Eros','T10316',0,'98945',DATE_SUB(curdate(),interval 61 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Vitae','T10317',0,'56470',DATE_SUB(curdate(),interval 84 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Malesuada','T10318',0,'176505',DATE_SUB(curdate(),interval 58 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Erat','T10319',0,'73028',DATE_SUB(curdate(),interval 98 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Convallis','T10320',0,'156474',DATE_SUB(curdate(),interval 6 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Massa','T10321',0,'124798',DATE_SUB(curdate(),interval 77 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Turpis','T10322',0,'78829',DATE_SUB(curdate(),interval 60 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Metus','T10323',0,'95014',DATE_SUB(curdate(),interval 64 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Non','T10324',0,'49192',DATE_SUB(curdate(),interval 99 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Auctor','T10325',0,'163483',DATE_SUB(curdate(),interval 73 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Diam','T10326',0,'61201',DATE_SUB(curdate(),interval 38 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Ut','T10327',0,'71795',DATE_SUB(curdate(),interval 77 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Suscipit','T10328',0,'167634',DATE_SUB(curdate(),interval 69 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Natoque','T10329',0,'91390',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Nulla','T10330',0,'80413',DATE_SUB(curdate(),interval 73 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada A','T10331',0,'73041',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Imperdiet','T10332',0,'48778',DATE_SUB(curdate(),interval 19 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Sed','T10333',0,'184625',DATE_SUB(curdate(),interval 89 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Vestibulum','T10334',0,'55124',DATE_SUB(curdate(),interval 55 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Bibendum','T10335',0,'63752',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Tempus','T10336',0,'8909',DATE_SUB(curdate(),interval 36 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Adipiscing','T10337',0,'32427',DATE_SUB(curdate(),interval 6 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Turpis','T10338',0,'158440',DATE_SUB(curdate(),interval 57 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Tempus','T10339',0,'166960',DATE_SUB(curdate(),interval 29 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Sit','T10340',0,'96735',DATE_SUB(curdate(),interval 91 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Bibendum','T10341',0,'159512',DATE_SUB(curdate(),interval 91 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Mollis','T10342',0,'89878',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Semper','T10343',0,'177935',DATE_SUB(curdate(),interval 48 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Elit','T10344',0,'168351',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Ipsum','T10345',0,'122186',DATE_SUB(curdate(),interval 79 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Odio','T10346',0,'72332',DATE_SUB(curdate(),interval 0 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Facilisis','T10347',0,'59542',DATE_SUB(curdate(),interval 33 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Convallis','T10348',0,'47431',DATE_SUB(curdate(),interval 41 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Sem','T10349',0,'63276',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Eget','T10350',0,'72065',DATE_SUB(curdate(),interval 82 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Tincidunt','T10351',0,'59879',DATE_SUB(curdate(),interval 46 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Suscipit','T10352',0,'631',DATE_SUB(curdate(),interval 62 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Mauris','T10353',0,'81651',DATE_SUB(curdate(),interval 72 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Semper','T10354',0,'144516',DATE_SUB(curdate(),interval 58 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Elit','T10355',0,'181369',DATE_SUB(curdate(),interval 24 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Pellentesque','T10356',0,'131335',DATE_SUB(curdate(),interval 99 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Imperdiet','T10357',0,'162795',DATE_SUB(curdate(),interval 28 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Donec','T10358',0,'20458',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Odio','T10359',0,'146348',DATE_SUB(curdate(),interval 61 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Cursus','T10360',0,'45692',DATE_SUB(curdate(),interval 69 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec In','T10361',0,'80206',DATE_SUB(curdate(),interval 36 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Tortor','T10362',0,'188788',DATE_SUB(curdate(),interval 37 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Nulla','T10363',0,'122907',DATE_SUB(curdate(),interval 95 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Sollicitudin','T10364',0,'187086',DATE_SUB(curdate(),interval 17 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Praesent','T10365',0,'92024',DATE_SUB(curdate(),interval 99 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Praesent','T10366',0,'51166',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget In','T10367',0,'191304',DATE_SUB(curdate(),interval 51 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Tellus','T10368',0,'38967',DATE_SUB(curdate(),interval 7 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Laoreet','T10369',0,'87531',DATE_SUB(curdate(),interval 23 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sed','T10370',0,'120266',DATE_SUB(curdate(),interval 87 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus In','T10371',0,'161789',DATE_SUB(curdate(),interval 22 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Lacinia','T10372',0,'80134',DATE_SUB(curdate(),interval 73 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nibh','T10373',0,'142885',DATE_SUB(curdate(),interval 42 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Non','T10374',0,'153094',DATE_SUB(curdate(),interval 39 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Scelerisque','T10375',0,'178852',DATE_SUB(curdate(),interval 68 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Lacus','T10376',0,'150350',DATE_SUB(curdate(),interval 73 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Placerat','T10377',0,'191395',DATE_SUB(curdate(),interval 40 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Eleifend','T10378',0,'53563',DATE_SUB(curdate(),interval 81 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Mauris','T10379',0,'6106',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Quis','T10380',0,'198517',DATE_SUB(curdate(),interval 31 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Lectus','T10381',0,'146475',DATE_SUB(curdate(),interval 72 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Ligula','T10382',0,'20501',DATE_SUB(curdate(),interval 64 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ullamcorper','T10383',0,'63075',DATE_SUB(curdate(),interval 12 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Augue','T10384',0,'171087',DATE_SUB(curdate(),interval 77 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Neque','T10385',0,'35053',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Sodales','T10386',0,'126179',DATE_SUB(curdate(),interval 14 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Velit','T10387',0,'81225',DATE_SUB(curdate(),interval 34 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Vestibulum','T10388',0,'131177',DATE_SUB(curdate(),interval 38 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Malesuada','T10389',0,'19963',DATE_SUB(curdate(),interval 79 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat A','T10390',0,'83612',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Cursus','T10391',0,'46542',DATE_SUB(curdate(),interval 28 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Erat','T10392',0,'11154',DATE_SUB(curdate(),interval 5 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Vivamus','T10393',0,'176922',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Id','T10394',0,'83229',DATE_SUB(curdate(),interval 19 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Accumsan','T10395',0,'106989',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Cursus','T10396',0,'130835',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Lacinia','T10397',0,'21934',DATE_SUB(curdate(),interval 46 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Auctor','T10398',0,'114223',DATE_SUB(curdate(),interval 15 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Tempus','T10399',0,'88068',DATE_SUB(curdate(),interval 6 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Id','T10400',0,'23763',DATE_SUB(curdate(),interval 80 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Ipsum','T10401',0,'12756',DATE_SUB(curdate(),interval 40 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Nascetur','T10402',0,'119048',DATE_SUB(curdate(),interval 70 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Tincidunt','T10403',0,'193083',DATE_SUB(curdate(),interval 52 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor In','T10404',0,'169977',DATE_SUB(curdate(),interval 90 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Arcu','T10405',0,'73059',DATE_SUB(curdate(),interval 33 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Vel','T10406',0,'97055',DATE_SUB(curdate(),interval 75 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Donec','T10407',0,'162038',DATE_SUB(curdate(),interval 63 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Luctus','T10408',0,'84943',DATE_SUB(curdate(),interval 15 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Aliquam','T10409',0,'110031',DATE_SUB(curdate(),interval 45 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Sem','T10410',0,'29444',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Nisl','T10411',0,'158765',DATE_SUB(curdate(),interval 60 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nulla','T10412',0,'99342',DATE_SUB(curdate(),interval 10 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Sed','T10413',0,'87135',DATE_SUB(curdate(),interval 9 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Molestie','T10414',0,'167802',DATE_SUB(curdate(),interval 54 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et At','T10415',0,'34168',DATE_SUB(curdate(),interval 27 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Laoreet','T10416',0,'83437',DATE_SUB(curdate(),interval 51 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Malesuada','T10417',0,'192400',DATE_SUB(curdate(),interval 5 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Quis','T10418',0,'64624',DATE_SUB(curdate(),interval 39 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Aliquam','T10419',0,'196985',DATE_SUB(curdate(),interval 96 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Ridiculus','T10420',0,'11974',DATE_SUB(curdate(),interval 36 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Id','T10421',0,'90893',DATE_SUB(curdate(),interval 14 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Blandit','T10422',0,'136138',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Nulla','T10423',0,'106275',DATE_SUB(curdate(),interval 52 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Fermentum','T10424',0,'6302',DATE_SUB(curdate(),interval 53 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Vehicula','T10425',0,'116726',DATE_SUB(curdate(),interval 2 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Sed','T10426',0,'83392',DATE_SUB(curdate(),interval 32 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Odio','T10427',0,'55733',DATE_SUB(curdate(),interval 79 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Tellus','T10428',0,'29651',DATE_SUB(curdate(),interval 22 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Odio','T10429',0,'73839',DATE_SUB(curdate(),interval 25 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Condimentum','T10430',0,'102733',DATE_SUB(curdate(),interval 84 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Venenatis','T10431',0,'71950',DATE_SUB(curdate(),interval 35 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Enim','T10432',0,'175928',DATE_SUB(curdate(),interval 91 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Penatibus','T10433',0,'187629',DATE_SUB(curdate(),interval 49 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Ipsum','T10434',0,'162420',DATE_SUB(curdate(),interval 39 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Lacus','T10435',0,'35609',DATE_SUB(curdate(),interval 64 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent In','T10436',0,'173532',DATE_SUB(curdate(),interval 26 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Dui','T10437',0,'102797',DATE_SUB(curdate(),interval 83 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Dui','T10438',0,'132819',DATE_SUB(curdate(),interval 19 year));
21:04:10 (engine) [SQL]->Exec [Done]:1
21:04:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Nullam','T10439',0,'107330',DATE_SUB(curdate(),interval 6 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Consectetur','T10440',0,'195162',DATE_SUB(curdate(),interval 80 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sapien','T10441',0,'57477',DATE_SUB(curdate(),interval 25 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Tristique','T10442',0,'128654',DATE_SUB(curdate(),interval 2 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Accumsan','T10443',0,'133309',DATE_SUB(curdate(),interval 62 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Venenatis','T10444',0,'176590',DATE_SUB(curdate(),interval 7 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Fringilla','T10445',0,'180372',DATE_SUB(curdate(),interval 5 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Turpis','T10446',0,'49190',DATE_SUB(curdate(),interval 50 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Convallis','T10447',0,'112717',DATE_SUB(curdate(),interval 0 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Felis','T10448',0,'160958',DATE_SUB(curdate(),interval 7 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Eu','T10449',0,'65601',DATE_SUB(curdate(),interval 72 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Imperdiet','T10450',0,'149687',DATE_SUB(curdate(),interval 38 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Consectetur','T10451',0,'292',DATE_SUB(curdate(),interval 94 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Vehicula','T10452',0,'3367',DATE_SUB(curdate(),interval 72 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Ligula','T10453',0,'155608',DATE_SUB(curdate(),interval 71 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Nullam','T10454',0,'40643',DATE_SUB(curdate(),interval 7 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Eget','T10455',0,'15870',DATE_SUB(curdate(),interval 0 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Vehicula','T10456',0,'16786',DATE_SUB(curdate(),interval 76 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Ut','T10457',0,'96383',DATE_SUB(curdate(),interval 16 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Vivamus','T10458',0,'109977',DATE_SUB(curdate(),interval 17 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Proin','T10459',0,'23201',DATE_SUB(curdate(),interval 60 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Id','T10460',0,'62949',DATE_SUB(curdate(),interval 72 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Eu','T10461',0,'84607',DATE_SUB(curdate(),interval 54 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Vitae','T10462',0,'122126',DATE_SUB(curdate(),interval 93 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nisl','T10463',0,'185773',DATE_SUB(curdate(),interval 70 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Amet','T10464',0,'91752',DATE_SUB(curdate(),interval 55 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Rutrum','T10465',0,'143682',DATE_SUB(curdate(),interval 81 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Et','T10466',0,'196751',DATE_SUB(curdate(),interval 82 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tristique','T10467',0,'82171',DATE_SUB(curdate(),interval 25 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Dui','T10468',0,'194501',DATE_SUB(curdate(),interval 28 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed A','T10469',0,'164065',DATE_SUB(curdate(),interval 94 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Quis','T10470',0,'171710',DATE_SUB(curdate(),interval 41 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Eget','T10471',0,'22815',DATE_SUB(curdate(),interval 70 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Mollis','T10472',0,'49098',DATE_SUB(curdate(),interval 22 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Eget','T10473',0,'6577',DATE_SUB(curdate(),interval 69 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Adipiscing','T10474',0,'100178',DATE_SUB(curdate(),interval 5 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Non','T10475',0,'61446',DATE_SUB(curdate(),interval 35 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Mattis','T10476',0,'126628',DATE_SUB(curdate(),interval 46 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Est','T10477',0,'78183',DATE_SUB(curdate(),interval 70 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Tincidunt','T10478',0,'22381',DATE_SUB(curdate(),interval 0 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt A','T10479',0,'140081',DATE_SUB(curdate(),interval 84 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas A','T10480',0,'12407',DATE_SUB(curdate(),interval 31 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Diam','T10481',0,'199375',DATE_SUB(curdate(),interval 14 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Ligula','T10482',0,'38763',DATE_SUB(curdate(),interval 23 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Adipiscing','T10483',0,'115392',DATE_SUB(curdate(),interval 4 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Varius','T10484',0,'100520',DATE_SUB(curdate(),interval 46 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Nulla','T10485',0,'30625',DATE_SUB(curdate(),interval 55 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Velit','T10486',0,'110666',DATE_SUB(curdate(),interval 18 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A At','T10487',0,'3391',DATE_SUB(curdate(),interval 29 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Sit','T10488',0,'120434',DATE_SUB(curdate(),interval 11 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec In','T10489',0,'50280',DATE_SUB(curdate(),interval 28 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Tristique','T10490',0,'102689',DATE_SUB(curdate(),interval 51 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lacus','T10491',0,'110631',DATE_SUB(curdate(),interval 73 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Pellentesque','T10492',0,'36623',DATE_SUB(curdate(),interval 97 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Ultricies','T10493',0,'102410',DATE_SUB(curdate(),interval 9 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Interdum','T10494',0,'54424',DATE_SUB(curdate(),interval 9 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Duis','T10495',0,'76426',DATE_SUB(curdate(),interval 52 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Turpis','T10496',0,'125629',DATE_SUB(curdate(),interval 54 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies A','T10497',0,'165495',DATE_SUB(curdate(),interval 68 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Nec','T10498',0,'37287',DATE_SUB(curdate(),interval 27 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Dignissim','T10499',0,'199617',DATE_SUB(curdate(),interval 73 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Potenti Ipsum','T10500',0,'139179',DATE_SUB(curdate(),interval 75 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Mattis','T10501',0,'167373',DATE_SUB(curdate(),interval 11 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Quis','T10502',0,'42205',DATE_SUB(curdate(),interval 59 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Cras','T10503',0,'22231',DATE_SUB(curdate(),interval 77 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Dignissim','T10504',0,'61625',DATE_SUB(curdate(),interval 16 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Blandit','T10505',0,'168187',DATE_SUB(curdate(),interval 95 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Dui','T10506',0,'42926',DATE_SUB(curdate(),interval 91 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget 
','T10507',0,'127932',DATE_SUB(curdate(),interval 56 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ultricies','T10508',0,'61382',DATE_SUB(curdate(),interval 92 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Pellentesque','T10509',0,'6019',DATE_SUB(curdate(),interval 82 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Id','T10510',0,'81849',DATE_SUB(curdate(),interval 65 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Hendrerit','T10511',0,'83391',DATE_SUB(curdate(),interval 41 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Dui','T10512',0,'114508',DATE_SUB(curdate(),interval 88 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Ut','T10513',0,'164429',DATE_SUB(curdate(),interval 34 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Tincidunt','T10514',0,'49004',DATE_SUB(curdate(),interval 20 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Vehicula','T10515',0,'154021',DATE_SUB(curdate(),interval 64 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Mauris','T10516',0,'110955',DATE_SUB(curdate(),interval 77 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ultricies','T10517',0,'116112',DATE_SUB(curdate(),interval 47 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Purus','T10518',0,'24874',DATE_SUB(curdate(),interval 66 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Dui','T10519',0,'14404',DATE_SUB(curdate(),interval 77 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Dictum','T10520',0,'129690',DATE_SUB(curdate(),interval 12 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Dis','T10521',0,'92853',DATE_SUB(curdate(),interval 50 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Vitae','T10522',0,'141338',DATE_SUB(curdate(),interval 76 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Montes','T10523',0,'80054',DATE_SUB(curdate(),interval 82 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Mauris','T10524',0,'115591',DATE_SUB(curdate(),interval 78 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Vestibulum','T10525',0,'49632',DATE_SUB(curdate(),interval 36 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Commodo','T10526',0,'5240',DATE_SUB(curdate(),interval 66 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Nam','T10527',0,'85686',DATE_SUB(curdate(),interval 18 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Mauris','T10528',0,'61469',DATE_SUB(curdate(),interval 80 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Urna','T10529',0,'59942',DATE_SUB(curdate(),interval 5 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Dolor','T10530',0,'162343',DATE_SUB(curdate(),interval 7 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus 
','T10531',0,'177818',DATE_SUB(curdate(),interval 3 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Et','T10532',0,'162323',DATE_SUB(curdate(),interval 71 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Sed','T10533',0,'14576',DATE_SUB(curdate(),interval 78 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Tristique','T10534',0,'86479',DATE_SUB(curdate(),interval 34 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Nibh','T10535',0,'105287',DATE_SUB(curdate(),interval 94 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Nulla','T10536',0,'148183',DATE_SUB(curdate(),interval 49 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Nulla','T10537',0,'108008',DATE_SUB(curdate(),interval 8 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Blandit','T10538',0,'32232',DATE_SUB(curdate(),interval 53 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Condimentum','T10539',0,'113444',DATE_SUB(curdate(),interval 73 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Vitae','T10540',0,'87546',DATE_SUB(curdate(),interval 14 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Facilisis','T10541',0,'183343',DATE_SUB(curdate(),interval 87 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Nec','T10542',0,'43418',DATE_SUB(curdate(),interval 81 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Lacinia','T10543',0,'149417',DATE_SUB(curdate(),interval 14 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Aliquam','T10544',0,'126568',DATE_SUB(curdate(),interval 18 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Condimentum','T10545',0,'53797',DATE_SUB(curdate(),interval 58 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Praesent','T10546',0,'21173',DATE_SUB(curdate(),interval 8 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Ut','T10547',0,'163829',DATE_SUB(curdate(),interval 100 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Proin','T10548',0,'28105',DATE_SUB(curdate(),interval 49 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Arcu','T10549',0,'72291',DATE_SUB(curdate(),interval 38 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Sit','T10550',0,'36834',DATE_SUB(curdate(),interval 62 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Sagittis','T10551',0,'152787',DATE_SUB(curdate(),interval 90 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Fringilla','T10552',0,'16416',DATE_SUB(curdate(),interval 95 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Blandit','T10553',0,'104706',DATE_SUB(curdate(),interval 9 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Lectus','T10554',0,'36531',DATE_SUB(curdate(),interval 26 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Lorem','T10555',0,'51860',DATE_SUB(curdate(),interval 35 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Vestibulum','T10556',0,'168988',DATE_SUB(curdate(),interval 2 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Mattis','T10557',0,'80665',DATE_SUB(curdate(),interval 87 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Condimentum','T10558',0,'95939',DATE_SUB(curdate(),interval 10 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Aliquet','T10559',0,'1280',DATE_SUB(curdate(),interval 94 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Lacus','T10560',0,'177177',DATE_SUB(curdate(),interval 21 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Tellus','T10561',0,'60867',DATE_SUB(curdate(),interval 22 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Aliquam','T10562',0,'96479',DATE_SUB(curdate(),interval 34 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Tortor','T10563',0,'139137',DATE_SUB(curdate(),interval 75 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Dui','T10564',0,'154722',DATE_SUB(curdate(),interval 60 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Placerat','T10565',0,'92400',DATE_SUB(curdate(),interval 53 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Aenean','T10566',0,'127796',DATE_SUB(curdate(),interval 28 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Dictum','T10567',0,'44237',DATE_SUB(curdate(),interval 83 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Quis','T10568',0,'7154',DATE_SUB(curdate(),interval 17 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Nec','T10569',0,'78840',DATE_SUB(curdate(),interval 56 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Enim','T10570',0,'179314',DATE_SUB(curdate(),interval 31 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Cras','T10571',0,'12668',DATE_SUB(curdate(),interval 76 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ullamcorper','T10572',0,'71681',DATE_SUB(curdate(),interval 88 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Sed','T10573',0,'82370',DATE_SUB(curdate(),interval 78 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Nunc','T10574',0,'12299',DATE_SUB(curdate(),interval 95 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Leo','T10575',0,'154627',DATE_SUB(curdate(),interval 43 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Etiam','T10576',0,'120700',DATE_SUB(curdate(),interval 91 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque ','T10577',0,'92303',DATE_SUB(curdate(),interval 98 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Ornare','T10578',0,'58400',DATE_SUB(curdate(),interval 49 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Ipsum','T10579',0,'50480',DATE_SUB(curdate(),interval 8 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Imperdiet','T10580',0,'192620',DATE_SUB(curdate(),interval 20 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Sagittis','T10581',0,'196901',DATE_SUB(curdate(),interval 19 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Accumsan','T10582',0,'28144',DATE_SUB(curdate(),interval 12 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Sapien','T10583',0,'110413',DATE_SUB(curdate(),interval 72 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Tempus','T10584',0,'124933',DATE_SUB(curdate(),interval 88 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Erat','T10585',0,'169576',DATE_SUB(curdate(),interval 2 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Suscipit','T10586',0,'104028',DATE_SUB(curdate(),interval 39 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Urna','T10587',0,'95559',DATE_SUB(curdate(),interval 69 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Massa','T10588',0,'178741',DATE_SUB(curdate(),interval 82 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit A','T10589',0,'1571',DATE_SUB(curdate(),interval 24 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Quisque','T10590',0,'72722',DATE_SUB(curdate(),interval 25 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sed','T10591',0,'194266',DATE_SUB(curdate(),interval 79 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Laoreet','T10592',0,'131391',DATE_SUB(curdate(),interval 22 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Volutpat','T10593',0,'50410',DATE_SUB(curdate(),interval 12 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Urna','T10594',0,'104205',DATE_SUB(curdate(),interval 14 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non ','T10595',0,'165493',DATE_SUB(curdate(),interval 93 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Morbi','T10596',0,'148526',DATE_SUB(curdate(),interval 25 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Praesent','T10597',0,'99437',DATE_SUB(curdate(),interval 52 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Nibh','T10598',0,'155295',DATE_SUB(curdate(),interval 97 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc 
','T10599',0,'149338',DATE_SUB(curdate(),interval 85 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Odio','T10600',0,'14438',DATE_SUB(curdate(),interval 2 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Vitae','T10601',0,'30480',DATE_SUB(curdate(),interval 55 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Ut','T10602',0,'138628',DATE_SUB(curdate(),interval 64 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Hendrerit','T10603',0,'113848',DATE_SUB(curdate(),interval 11 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Justo','T10604',0,'73505',DATE_SUB(curdate(),interval 84 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Lacinia','T10605',0,'72946',DATE_SUB(curdate(),interval 97 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Suscipit','T10606',0,'184584',DATE_SUB(curdate(),interval 50 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Eros','T10607',0,'69933',DATE_SUB(curdate(),interval 23 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Massa','T10608',0,'51754',DATE_SUB(curdate(),interval 99 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Tellus','T10609',0,'106985',DATE_SUB(curdate(),interval 85 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Vestibulum','T10610',0,'96740',DATE_SUB(curdate(),interval 76 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Nunc','T10611',0,'173763',DATE_SUB(curdate(),interval 100 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Dui','T10612',0,'166318',DATE_SUB(curdate(),interval 43 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Facilisis','T10613',0,'77716',DATE_SUB(curdate(),interval 83 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Justo','T10614',0,'65706',DATE_SUB(curdate(),interval 22 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Volutpat','T10615',0,'91867',DATE_SUB(curdate(),interval 5 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Vestibulum','T10616',0,'7216',DATE_SUB(curdate(),interval 85 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Mattis','T10617',0,'137740',DATE_SUB(curdate(),interval 21 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Condimentum','T10618',0,'194146',DATE_SUB(curdate(),interval 55 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ullamcorper','T10619',0,'107637',DATE_SUB(curdate(),interval 59 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Metus','T10620',0,'3461',DATE_SUB(curdate(),interval 17 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Ante','T10621',0,'699',DATE_SUB(curdate(),interval 91 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Morbi','T10622',0,'26029',DATE_SUB(curdate(),interval 70 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Neque','T10623',0,'150568',DATE_SUB(curdate(),interval 11 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Fringilla','T10624',0,'191289',DATE_SUB(curdate(),interval 44 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Dictum','T10625',0,'130148',DATE_SUB(curdate(),interval 16 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Euismod','T10626',0,'141351',DATE_SUB(curdate(),interval 4 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Aliquet','T10627',0,'126607',DATE_SUB(curdate(),interval 54 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Ornare','T10628',0,'142767',DATE_SUB(curdate(),interval 18 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Vestibulum','T10629',0,'16883',DATE_SUB(curdate(),interval 78 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum In','T10630',0,'94419',DATE_SUB(curdate(),interval 6 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus A','T10631',0,'33973',DATE_SUB(curdate(),interval 11 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Erat','T10632',0,'109697',DATE_SUB(curdate(),interval 37 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Magna','T10633',0,'106561',DATE_SUB(curdate(),interval 59 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Placerat','T10634',0,'126377',DATE_SUB(curdate(),interval 28 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Velit','T10635',0,'163720',DATE_SUB(curdate(),interval 10 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Venenatis','T10636',0,'56003',DATE_SUB(curdate(),interval 98 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Risus','T10637',0,'149019',DATE_SUB(curdate(),interval 30 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Interdum','T10638',0,'71742',DATE_SUB(curdate(),interval 38 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Auctor','T10639',0,'98933',DATE_SUB(curdate(),interval 46 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Venenatis','T10640',0,'165954',DATE_SUB(curdate(),interval 43 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Quis','T10641',0,'3068',DATE_SUB(curdate(),interval 6 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio At','T10642',0,'68953',DATE_SUB(curdate(),interval 8 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Imperdiet','T10643',0,'37168',DATE_SUB(curdate(),interval 83 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Et','T10644',0,'159779',DATE_SUB(curdate(),interval 95 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Non','T10645',0,'48936',DATE_SUB(curdate(),interval 41 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Odio','T10646',0,'158465',DATE_SUB(curdate(),interval 20 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Sagittis','T10647',0,'131854',DATE_SUB(curdate(),interval 79 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Aliquam','T10648',0,'42640',DATE_SUB(curdate(),interval 57 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Vestibulum','T10649',0,'127115',DATE_SUB(curdate(),interval 45 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Maecenas','T10650',0,'108073',DATE_SUB(curdate(),interval 79 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Dui','T10651',0,'123067',DATE_SUB(curdate(),interval 84 year));
21:04:11 (engine) [SQL]->Exec [Done]:1
21:04:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Ut','T10652',0,'157011',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Quis','T10653',0,'86328',DATE_SUB(curdate(),interval 72 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Risus','T10654',0,'184537',DATE_SUB(curdate(),interval 77 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Amet','T10655',0,'110391',DATE_SUB(curdate(),interval 84 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Eget','T10656',0,'82718',DATE_SUB(curdate(),interval 93 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Condimentum','T10657',0,'75268',DATE_SUB(curdate(),interval 87 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Sed','T10658',0,'131480',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Nunc','T10659',0,'2540',DATE_SUB(curdate(),interval 84 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Maecenas','T10660',0,'171467',DATE_SUB(curdate(),interval 65 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Duis','T10661',0,'72913',DATE_SUB(curdate(),interval 46 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Sagittis','T10662',0,'45144',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Nunc','T10663',0,'172995',DATE_SUB(curdate(),interval 94 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Mattis','T10664',0,'172560',DATE_SUB(curdate(),interval 54 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Placerat','T10665',0,'81203',DATE_SUB(curdate(),interval 36 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Commodo','T10666',0,'106089',DATE_SUB(curdate(),interval 80 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Non','T10667',0,'126749',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec A','T10668',0,'133655',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Sem','T10669',0,'125806',DATE_SUB(curdate(),interval 29 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Ultrices','T10670',0,'63376',DATE_SUB(curdate(),interval 19 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Ac','T10671',0,'25898',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Vehicula','T10672',0,'142362',DATE_SUB(curdate(),interval 79 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Ut','T10673',0,'29077',DATE_SUB(curdate(),interval 39 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Lacus','T10674',0,'37208',DATE_SUB(curdate(),interval 52 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Sed','T10675',0,'108095',DATE_SUB(curdate(),interval 56 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Varius','T10676',0,'145658',DATE_SUB(curdate(),interval 9 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ornare','T10677',0,'76781',DATE_SUB(curdate(),interval 56 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Vivamus','T10678',0,'150194',DATE_SUB(curdate(),interval 85 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Libero','T10679',0,'3955',DATE_SUB(curdate(),interval 34 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Urna','T10680',0,'26241',DATE_SUB(curdate(),interval 10 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Vulputate','T10681',0,'98292',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Volutpat','T10682',0,'109603',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Lacus','T10683',0,'146258',DATE_SUB(curdate(),interval 81 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Sociis','T10684',0,'179814',DATE_SUB(curdate(),interval 54 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Leo','T10685',0,'20102',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Nulla','T10686',0,'174697',DATE_SUB(curdate(),interval 87 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nulla','T10687',0,'41890',DATE_SUB(curdate(),interval 61 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Nec','T10688',0,'141774',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Magna','T10689',0,'100978',DATE_SUB(curdate(),interval 57 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nunc','T10690',0,'148217',DATE_SUB(curdate(),interval 37 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Dis','T10691',0,'36654',DATE_SUB(curdate(),interval 44 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Amet','T10692',0,'195496',DATE_SUB(curdate(),interval 75 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Sit','T10693',0,'155564',DATE_SUB(curdate(),interval 35 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Ornare','T10694',0,'43093',DATE_SUB(curdate(),interval 66 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Convallis','T10695',0,'53218',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget A','T10696',0,'128732',DATE_SUB(curdate(),interval 38 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Quisque','T10697',0,'190503',DATE_SUB(curdate(),interval 5 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nec','T10698',0,'85646',DATE_SUB(curdate(),interval 34 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Imperdiet','T10699',0,'156302',DATE_SUB(curdate(),interval 9 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Quis','T10700',0,'169352',DATE_SUB(curdate(),interval 5 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Magna','T10701',0,'81645',DATE_SUB(curdate(),interval 77 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Magna','T10702',0,'85570',DATE_SUB(curdate(),interval 82 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nec','T10703',0,'197972',DATE_SUB(curdate(),interval 82 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eros Aliquet','T10704',0,'39406',DATE_SUB(curdate(),interval 85 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Quisque','T10705',0,'179459',DATE_SUB(curdate(),interval 99 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Vitae','T10706',0,'65279',DATE_SUB(curdate(),interval 0 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Quis','T10707',0,'21404',DATE_SUB(curdate(),interval 63 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Proin','T10708',0,'138005',DATE_SUB(curdate(),interval 71 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Nam','T10709',0,'94063',DATE_SUB(curdate(),interval 86 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Id','T10710',0,'134938',DATE_SUB(curdate(),interval 77 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Nulla','T10711',0,'116951',DATE_SUB(curdate(),interval 26 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Convallis','T10712',0,'21036',DATE_SUB(curdate(),interval 8 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Lorem','T10713',0,'12733',DATE_SUB(curdate(),interval 78 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Malesuada','T10714',0,'156716',DATE_SUB(curdate(),interval 26 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Dictum','T10715',0,'179178',DATE_SUB(curdate(),interval 36 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Condimentum','T10716',0,'13744',DATE_SUB(curdate(),interval 42 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Felis','T10717',0,'55394',DATE_SUB(curdate(),interval 41 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Velit','T10718',0,'35331',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Diam','T10719',0,'58061',DATE_SUB(curdate(),interval 92 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non A','T10720',0,'198882',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Arcu','T10721',0,'49799',DATE_SUB(curdate(),interval 73 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Sem','T10722',0,'198195',DATE_SUB(curdate(),interval 95 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Volutpat','T10723',0,'62191',DATE_SUB(curdate(),interval 77 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Sed','T10724',0,'38056',DATE_SUB(curdate(),interval 15 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Et','T10725',0,'112605',DATE_SUB(curdate(),interval 35 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Dignissim','T10726',0,'77045',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Lacus','T10727',0,'189879',DATE_SUB(curdate(),interval 4 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Aenean','T10728',0,'103763',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Semper','T10729',0,'38985',DATE_SUB(curdate(),interval 45 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Tellus','T10730',0,'79223',DATE_SUB(curdate(),interval 73 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Lectus','T10731',0,'98222',DATE_SUB(curdate(),interval 55 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Vehicula','T10732',0,'140491',DATE_SUB(curdate(),interval 0 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Velit','T10733',0,'72278',DATE_SUB(curdate(),interval 57 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum 
','T10734',0,'120537',DATE_SUB(curdate(),interval 51 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Proin','T10735',0,'110111',DATE_SUB(curdate(),interval 49 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Augue','T10736',0,'192427',DATE_SUB(curdate(),interval 50 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Tempus','T10737',0,'189552',DATE_SUB(curdate(),interval 64 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Nisl','T10738',0,'72226',DATE_SUB(curdate(),interval 41 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Nulla','T10739',0,'192248',DATE_SUB(curdate(),interval 13 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Nulla','T10740',0,'28633',DATE_SUB(curdate(),interval 68 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Volutpat','T10741',0,'49968',DATE_SUB(curdate(),interval 94 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Nulla','T10742',0,'88119',DATE_SUB(curdate(),interval 68 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Purus','T10743',0,'33296',DATE_SUB(curdate(),interval 90 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tincidunt','T10744',0,'79644',DATE_SUB(curdate(),interval 90 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Ultrices','T10745',0,'107056',DATE_SUB(curdate(),interval 63 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Id','T10746',0,'8867',DATE_SUB(curdate(),interval 74 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Dolor','T10747',0,'175699',DATE_SUB(curdate(),interval 28 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eros Nullam','T10748',0,'192913',DATE_SUB(curdate(),interval 60 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui In','T10749',0,'106554',DATE_SUB(curdate(),interval 78 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue A','T10750',0,'90144',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Gravida','T10751',0,'74399',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Urna','T10752',0,'184551',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sociis','T10753',0,'132022',DATE_SUB(curdate(),interval 81 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Fermentum','T10754',0,'109367',DATE_SUB(curdate(),interval 10 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Nisi','T10755',0,'77075',DATE_SUB(curdate(),interval 38 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Nec','T10756',0,'195545',DATE_SUB(curdate(),interval 98 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Facilisis','T10757',0,'150121',DATE_SUB(curdate(),interval 63 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus A','T10758',0,'20557',DATE_SUB(curdate(),interval 45 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Parturient','T10759',0,'94686',DATE_SUB(curdate(),interval 56 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Fringilla','T10760',0,'119164',DATE_SUB(curdate(),interval 36 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Massa','T10761',0,'33445',DATE_SUB(curdate(),interval 21 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Condimentum','T10762',0,'62349',DATE_SUB(curdate(),interval 67 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Laoreet','T10763',0,'9936',DATE_SUB(curdate(),interval 59 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Dui','T10764',0,'111914',DATE_SUB(curdate(),interval 61 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Justo','T10765',0,'48533',DATE_SUB(curdate(),interval 2 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Ultrices','T10766',0,'94030',DATE_SUB(curdate(),interval 33 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Aenean','T10767',0,'178870',DATE_SUB(curdate(),interval 6 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec A','T10768',0,'85285',DATE_SUB(curdate(),interval 19 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Laoreet','T10769',0,'80526',DATE_SUB(curdate(),interval 71 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Condimentum','T10770',0,'75373',DATE_SUB(curdate(),interval 45 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Nisi','T10771',0,'6691',DATE_SUB(curdate(),interval 46 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Cras','T10772',0,'13992',DATE_SUB(curdate(),interval 100 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Justo','T10773',0,'2725',DATE_SUB(curdate(),interval 41 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Ridiculus','T10774',0,'148942',DATE_SUB(curdate(),interval 48 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Lorem','T10775',0,'108712',DATE_SUB(curdate(),interval 77 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Non','T10776',0,'192218',DATE_SUB(curdate(),interval 88 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Risus','T10777',0,'116356',DATE_SUB(curdate(),interval 88 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Arcu','T10778',0,'63685',DATE_SUB(curdate(),interval 49 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Blandit','T10779',0,'189632',DATE_SUB(curdate(),interval 84 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Adipiscing','T10780',0,'166202',DATE_SUB(curdate(),interval 85 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Leo','T10781',0,'52561',DATE_SUB(curdate(),interval 99 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Dolor','T10782',0,'93430',DATE_SUB(curdate(),interval 76 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Amet','T10783',0,'104576',DATE_SUB(curdate(),interval 78 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Mus','T10784',0,'130219',DATE_SUB(curdate(),interval 54 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Elit','T10785',0,'83132',DATE_SUB(curdate(),interval 93 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Cursus','T10786',0,'83075',DATE_SUB(curdate(),interval 58 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Quis','T10787',0,'83172',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Et','T10788',0,'175800',DATE_SUB(curdate(),interval 71 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Pellentesque','T10789',0,'140245',DATE_SUB(curdate(),interval 42 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Nibh','T10790',0,'35135',DATE_SUB(curdate(),interval 80 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Diam','T10791',0,'114334',DATE_SUB(curdate(),interval 16 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Risus','T10792',0,'140821',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Ut','T10793',0,'191198',DATE_SUB(curdate(),interval 65 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Metus','T10794',0,'44773',DATE_SUB(curdate(),interval 94 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Lorem','T10795',0,'194143',DATE_SUB(curdate(),interval 11 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Commodo','T10796',0,'165788',DATE_SUB(curdate(),interval 98 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Mauris','T10797',0,'79601',DATE_SUB(curdate(),interval 14 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Mollis','T10798',0,'187345',DATE_SUB(curdate(),interval 88 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Facilisis','T10799',0,'7481',DATE_SUB(curdate(),interval 45 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Tortor','T10800',0,'96994',DATE_SUB(curdate(),interval 18 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Massa','T10801',0,'166791',DATE_SUB(curdate(),interval 72 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Arcu','T10802',0,'130992',DATE_SUB(curdate(),interval 55 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Vitae','T10803',0,'132751',DATE_SUB(curdate(),interval 58 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Urna','T10804',0,'112445',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Tincidunt','T10805',0,'121550',DATE_SUB(curdate(),interval 72 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Non','T10806',0,'119805',DATE_SUB(curdate(),interval 81 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc In','T10807',0,'52181',DATE_SUB(curdate(),interval 79 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Lacinia','T10808',0,'194166',DATE_SUB(curdate(),interval 24 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Tempus','T10809',0,'190872',DATE_SUB(curdate(),interval 100 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Non','T10810',0,'109274',DATE_SUB(curdate(),interval 56 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Varius','T10811',0,'28853',DATE_SUB(curdate(),interval 71 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Lectus','T10812',0,'35459',DATE_SUB(curdate(),interval 73 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Metus','T10813',0,'89414',DATE_SUB(curdate(),interval 20 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Accumsan','T10814',0,'1355',DATE_SUB(curdate(),interval 38 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Et','T10815',0,'33283',DATE_SUB(curdate(),interval 6 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Et','T10816',0,'59940',DATE_SUB(curdate(),interval 20 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Massa','T10817',0,'39910',DATE_SUB(curdate(),interval 81 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Lacinia','T10818',0,'72950',DATE_SUB(curdate(),interval 9 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Facilisis','T10819',0,'161752',DATE_SUB(curdate(),interval 66 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Turpis','T10820',0,'76907',DATE_SUB(curdate(),interval 89 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nulla','T10821',0,'16572',DATE_SUB(curdate(),interval 10 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lacus','T10822',0,'96602',DATE_SUB(curdate(),interval 56 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare At','T10823',0,'124139',DATE_SUB(curdate(),interval 37 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Molestie','T10824',0,'114257',DATE_SUB(curdate(),interval 73 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Urna','T10825',0,'106660',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Id','T10826',0,'27240',DATE_SUB(curdate(),interval 47 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum A','T10827',0,'26332',DATE_SUB(curdate(),interval 62 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Malesuada','T10828',0,'100960',DATE_SUB(curdate(),interval 70 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Condimentum','T10829',0,'160548',DATE_SUB(curdate(),interval 22 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat At','T10830',0,'157142',DATE_SUB(curdate(),interval 3 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Ante','T10831',0,'81102',DATE_SUB(curdate(),interval 72 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Sapien','T10832',0,'90106',DATE_SUB(curdate(),interval 50 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Ac','T10833',0,'107816',DATE_SUB(curdate(),interval 26 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Lacus','T10834',0,'147437',DATE_SUB(curdate(),interval 29 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In 
','T10835',0,'182304',DATE_SUB(curdate(),interval 55 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Consectetur','T10836',0,'50677',DATE_SUB(curdate(),interval 74 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Pellentesque','T10837',0,'191664',DATE_SUB(curdate(),interval 68 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Lacinia','T10838',0,'143180',DATE_SUB(curdate(),interval 27 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Mauris','T10839',0,'199779',DATE_SUB(curdate(),interval 48 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Faucibus','T10840',0,'195697',DATE_SUB(curdate(),interval 85 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Malesuada','T10841',0,'22041',DATE_SUB(curdate(),interval 31 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Et','T10842',0,'120817',DATE_SUB(curdate(),interval 82 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Id','T10843',0,'72873',DATE_SUB(curdate(),interval 10 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis In','T10844',0,'166819',DATE_SUB(curdate(),interval 94 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Suspendisse','T10845',0,'123436',DATE_SUB(curdate(),interval 1 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Morbi','T10846',0,'58560',DATE_SUB(curdate(),interval 69 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Blandit','T10847',0,'32821',DATE_SUB(curdate(),interval 55 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Pellentesque','T10848',0,'79701',DATE_SUB(curdate(),interval 17 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Facilisis','T10849',0,'97900',DATE_SUB(curdate(),interval 86 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Diam','T10850',0,'133222',DATE_SUB(curdate(),interval 7 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Quis','T10851',0,'34719',DATE_SUB(curdate(),interval 54 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Dolor','T10852',0,'95403',DATE_SUB(curdate(),interval 32 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Diam','T10853',0,'67571',DATE_SUB(curdate(),interval 33 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Lectus','T10854',0,'4685',DATE_SUB(curdate(),interval 89 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Placerat','T10855',0,'86887',DATE_SUB(curdate(),interval 67 year));
21:04:12 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nulla','T10856',0,'167564',DATE_SUB(curdate(),interval 100 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec In','T10857',0,'168659',DATE_SUB(curdate(),interval 70 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Facilisis','T10858',0,'154019',DATE_SUB(curdate(),interval 3 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Aenean','T10859',0,'114242',DATE_SUB(curdate(),interval 18 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Condimentum','T10860',0,'102041',DATE_SUB(curdate(),interval 75 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Commodo','T10861',0,'17608',DATE_SUB(curdate(),interval 57 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Eleifend','T10862',0,'90290',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Volutpat','T10863',0,'12902',DATE_SUB(curdate(),interval 63 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Convallis','T10864',0,'123883',DATE_SUB(curdate(),interval 6 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Penatibus','T10865',0,'151649',DATE_SUB(curdate(),interval 65 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Auctor','T10866',0,'136129',DATE_SUB(curdate(),interval 51 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis At','T10867',0,'140019',DATE_SUB(curdate(),interval 42 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Varius','T10868',0,'34981',DATE_SUB(curdate(),interval 44 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Fringilla','T10869',0,'2439',DATE_SUB(curdate(),interval 54 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Penatibus','T10870',0,'187627',DATE_SUB(curdate(),interval 68 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Lorem','T10871',0,'60509',DATE_SUB(curdate(),interval 6 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Molestie','T10872',0,'25768',DATE_SUB(curdate(),interval 13 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Volutpat','T10873',0,'157035',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Et','T10874',0,'173757',DATE_SUB(curdate(),interval 89 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Arcu','T10875',0,'62172',DATE_SUB(curdate(),interval 1 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Mus','T10876',0,'92051',DATE_SUB(curdate(),interval 84 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Dis','T10877',0,'74923',DATE_SUB(curdate(),interval 12 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Justo','T10878',0,'159310',DATE_SUB(curdate(),interval 28 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Tristique','T10879',0,'70798',DATE_SUB(curdate(),interval 22 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Ridiculus','T10880',0,'70998',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Suscipit','T10881',0,'152505',DATE_SUB(curdate(),interval 79 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Aliquet','T10882',0,'134559',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Ac','T10883',0,'68281',DATE_SUB(curdate(),interval 98 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Vulputate','T10884',0,'163382',DATE_SUB(curdate(),interval 22 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Cursus','T10885',0,'68254',DATE_SUB(curdate(),interval 21 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Et','T10886',0,'99168',DATE_SUB(curdate(),interval 82 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Commodo','T10887',0,'8008',DATE_SUB(curdate(),interval 26 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi A','T10888',0,'132740',DATE_SUB(curdate(),interval 70 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nisi','T10889',0,'97586',DATE_SUB(curdate(),interval 14 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Pellentesque','T10890',0,'92966',DATE_SUB(curdate(),interval 26 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Condimentum','T10891',0,'47419',DATE_SUB(curdate(),interval 61 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Pellentesque','T10892',0,'166389',DATE_SUB(curdate(),interval 89 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Condimentum','T10893',0,'18443',DATE_SUB(curdate(),interval 75 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Condimentum','T10894',0,'113896',DATE_SUB(curdate(),interval 55 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Non','T10895',0,'161181',DATE_SUB(curdate(),interval 77 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Magnis','T10896',0,'94629',DATE_SUB(curdate(),interval 54 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Tincidunt','T10897',0,'136186',DATE_SUB(curdate(),interval 96 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Sem','T10898',0,'42219',DATE_SUB(curdate(),interval 26 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Eget','T10899',0,'175995',DATE_SUB(curdate(),interval 56 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Lorem','T10900',0,'88379',DATE_SUB(curdate(),interval 75 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Venenatis','T10901',0,'99510',DATE_SUB(curdate(),interval 19 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Augue','T10902',0,'148819',DATE_SUB(curdate(),interval 56 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat 
','T10903',0,'66125',DATE_SUB(curdate(),interval 68 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Tempus','T10904',0,'44171',DATE_SUB(curdate(),interval 92 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Convallis','T10905',0,'173761',DATE_SUB(curdate(),interval 89 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Sit','T10906',0,'30563',DATE_SUB(curdate(),interval 100 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Sem','T10907',0,'111884',DATE_SUB(curdate(),interval 3 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Lorem','T10908',0,'155608',DATE_SUB(curdate(),interval 63 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Vulputate','T10909',0,'165198',DATE_SUB(curdate(),interval 66 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Mattis','T10910',0,'43533',DATE_SUB(curdate(),interval 1 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut 
','T10911',0,'140056',DATE_SUB(curdate(),interval 14 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Molestie','T10912',0,'11022',DATE_SUB(curdate(),interval 11 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Aliquam','T10913',0,'711',DATE_SUB(curdate(),interval 87 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Tempus','T10914',0,'174000',DATE_SUB(curdate(),interval 53 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Praesent','T10915',0,'112444',DATE_SUB(curdate(),interval 94 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Nec','T10916',0,'112741',DATE_SUB(curdate(),interval 97 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Malesuada','T10917',0,'124752',DATE_SUB(curdate(),interval 96 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Ultricies','T10918',0,'195528',DATE_SUB(curdate(),interval 8 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Volutpat','T10919',0,'43905',DATE_SUB(curdate(),interval 74 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nunc','T10920',0,'171742',DATE_SUB(curdate(),interval 42 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Sed','T10921',0,'58487',DATE_SUB(curdate(),interval 20 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Pellentesque','T10922',0,'146859',DATE_SUB(curdate(),interval 20 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Ultricies','T10923',0,'28335',DATE_SUB(curdate(),interval 2 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Fermentum','T10924',0,'197748',DATE_SUB(curdate(),interval 25 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Mauris','T10925',0,'42219',DATE_SUB(curdate(),interval 5 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Placerat','T10926',0,'26939',DATE_SUB(curdate(),interval 85 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Ipsum','T10927',0,'117087',DATE_SUB(curdate(),interval 47 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Tristique','T10928',0,'177537',DATE_SUB(curdate(),interval 83 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Ipsum','T10929',0,'5956',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Porttitor','T10930',0,'106570',DATE_SUB(curdate(),interval 94 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Lacus','T10931',0,'191398',DATE_SUB(curdate(),interval 70 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed A','T10932',0,'189999',DATE_SUB(curdate(),interval 47 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Pellentesque','T10933',0,'105967',DATE_SUB(curdate(),interval 1 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Nulla','T10934',0,'171158',DATE_SUB(curdate(),interval 21 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Sodales','T10935',0,'136438',DATE_SUB(curdate(),interval 65 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Mattis','T10936',0,'95003',DATE_SUB(curdate(),interval 19 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Volutpat','T10937',0,'103363',DATE_SUB(curdate(),interval 9 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Condimentum','T10938',0,'5390',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Ac','T10939',0,'5366',DATE_SUB(curdate(),interval 10 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Sapien','T10940',0,'115817',DATE_SUB(curdate(),interval 49 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Quis','T10941',0,'100007',DATE_SUB(curdate(),interval 49 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Ornare','T10942',0,'140847',DATE_SUB(curdate(),interval 80 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Praesent','T10943',0,'87961',DATE_SUB(curdate(),interval 68 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Sed','T10944',0,'174835',DATE_SUB(curdate(),interval 71 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Enim','T10945',0,'159768',DATE_SUB(curdate(),interval 69 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Id','T10946',0,'3592',DATE_SUB(curdate(),interval 16 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Venenatis','T10947',0,'53789',DATE_SUB(curdate(),interval 74 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Commodo','T10948',0,'45458',DATE_SUB(curdate(),interval 16 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Vitae','T10949',0,'129460',DATE_SUB(curdate(),interval 73 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Blandit','T10950',0,'104520',DATE_SUB(curdate(),interval 88 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Tincidunt','T10951',0,'112520',DATE_SUB(curdate(),interval 70 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sed','T10952',0,'80108',DATE_SUB(curdate(),interval 29 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Magna','T10953',0,'197069',DATE_SUB(curdate(),interval 27 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Ipsum','T10954',0,'86652',DATE_SUB(curdate(),interval 84 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Vivamus','T10955',0,'114862',DATE_SUB(curdate(),interval 7 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Vulputate','T10956',0,'45857',DATE_SUB(curdate(),interval 51 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Enim','T10957',0,'47518',DATE_SUB(curdate(),interval 61 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Diam','T10958',0,'98454',DATE_SUB(curdate(),interval 97 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Pellentesque','T10959',0,'132064',DATE_SUB(curdate(),interval 60 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sed','T10960',0,'179332',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Libero','T10961',0,'117565',DATE_SUB(curdate(),interval 28 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Elit','T10962',0,'24063',DATE_SUB(curdate(),interval 94 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Nec','T10963',0,'631',DATE_SUB(curdate(),interval 27 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Vivamus','T10964',0,'156144',DATE_SUB(curdate(),interval 2 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Adipiscing','T10965',0,'127447',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Tincidunt','T10966',0,'60641',DATE_SUB(curdate(),interval 50 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Eget','T10967',0,'20179',DATE_SUB(curdate(),interval 68 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus ','T10968',0,'199088',DATE_SUB(curdate(),interval 28 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ultricies','T10969',0,'114006',DATE_SUB(curdate(),interval 77 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Nisl','T10970',0,'139659',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Vivamus','T10971',0,'120234',DATE_SUB(curdate(),interval 89 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Sed','T10972',0,'181271',DATE_SUB(curdate(),interval 4 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Non','T10973',0,'76010',DATE_SUB(curdate(),interval 18 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Ut','T10974',0,'135954',DATE_SUB(curdate(),interval 86 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Tristique','T10975',0,'106701',DATE_SUB(curdate(),interval 67 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Auctor','T10976',0,'191157',DATE_SUB(curdate(),interval 66 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Dui','T10977',0,'84533',DATE_SUB(curdate(),interval 72 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Mauris','T10978',0,'8838',DATE_SUB(curdate(),interval 60 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Dictum','T10979',0,'96464',DATE_SUB(curdate(),interval 76 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Malesuada','T10980',0,'159842',DATE_SUB(curdate(),interval 43 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Ipsum','T10981',0,'121224',DATE_SUB(curdate(),interval 61 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed At','T10982',0,'92566',DATE_SUB(curdate(),interval 51 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Ullamcorper','T10983',0,'36092',DATE_SUB(curdate(),interval 85 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Blandit','T10984',0,'100516',DATE_SUB(curdate(),interval 64 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Donec','T10985',0,'70806',DATE_SUB(curdate(),interval 88 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Fringilla','T10986',0,'95868',DATE_SUB(curdate(),interval 87 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Tincidunt','T10987',0,'124982',DATE_SUB(curdate(),interval 7 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Convallis','T10988',0,'99652',DATE_SUB(curdate(),interval 28 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Erat','T10989',0,'177588',DATE_SUB(curdate(),interval 47 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Blandit','T10990',0,'195039',DATE_SUB(curdate(),interval 46 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Tempus','T10991',0,'60325',DATE_SUB(curdate(),interval 88 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Tempus','T10992',0,'101969',DATE_SUB(curdate(),interval 96 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Lacinia','T10993',0,'166436',DATE_SUB(curdate(),interval 78 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Justo','T10994',0,'128855',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Et','T10995',0,'75301',DATE_SUB(curdate(),interval 62 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Enim','T10996',0,'181219',DATE_SUB(curdate(),interval 29 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Suspendisse','T10997',0,'152514',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Pharetra','T10998',0,'165251',DATE_SUB(curdate(),interval 49 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Erat','T10999',0,'72853',DATE_SUB(curdate(),interval 18 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Sed','T11000',0,'27857',DATE_SUB(curdate(),interval 66 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:SELECT ID FROM TaxPayerTable where DateOfCreation < date_sub(curdate(),interval 60 YEAR)
21:04:13 (engine) [SQL]->Exec [Done]:Resource id #2027
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (3,'Dignissim Imperdiet','T11002',0,'87440',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (5,'Leo Amet','T11003',0,'61153',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (7,'Blandit Ut','T11004',0,'35935',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (10,'Eleifend Erat','T11005',0,'68126',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (12,'Libero Imperdiet','T11006',0,'181119',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (14,'Ultricies Urna','T11007',0,'103298',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (15,'Nibh Libero','T11008',0,'183941',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (18,'Nulla Sed','T11009',0,'90670',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (21,'Quis Dictum','T11010',0,'98588',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (22,'Imperdiet Maecenas','T11011',0,'173922',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (23,'Nascetur Condimentum','T11012',0,'73327',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (30,'Blandit Lectus','T11013',0,'114839',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (32,'Neque Nascetur','T11014',0,'7889',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (36,'
 Laoreet','T11015',0,'77163',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (37,'Sed Donec','T11016',0,'172634',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (45,'Risus Leo','T11017',0,'136882',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (47,'Mattis Placerat','T11018',0,'141681',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (52,'Sapien Sit','T11019',0,'100355',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (53,'Vitae 
','T11020',0,'99011',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (57,'Ornare Augue','T11021',0,'155439',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (59,'
 Hendrerit','T11022',0,'7517',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (60,'Commodo Convallis','T11023',0,'166405',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (61,'Vitae Laoreet','T11024',0,'163',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (62,'Amet Ac','T11025',0,'97677',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (63,'Sed Facilisis','T11026',0,'79573',DATE_SUB(curdate(),interval 39 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (65,'Suscipit Risus','T11027',0,'59136',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (66,'Semper Fringilla','T11028',0,'32887',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (68,'Nibh Aenean','T11029',0,'145979',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (69,'Quis Semper','T11030',0,'33937',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (70,'Cursus Lorem','T11031',0,'188021',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (71,'Laoreet Rutrum','T11032',0,'2646',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (73,'Vitae Adipiscing','T11033',0,'185477',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (78,'Diam Vitae','T11034',0,'65475',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (80,'A Magna','T11035',0,'175058',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (85,'Ut Congue','T11036',0,'67338',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (86,'Ac Interdum','T11037',0,'136560',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (87,'Nulla Nulla','T11038',0,'174091',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (88,'Ultrices Neque','T11039',0,'188951',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (90,'Lacinia Arcu','T11040',0,'51941',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (93,'Sociis Tellus','T11041',0,'173274',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (97,'Nunc Nulla','T11042',0,'126240',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (99,'Hendrerit Phasellus','T11043',0,'146038',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (100,'Massa Augue','T11044',0,'100876',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (101,'Id Placerat','T11045',0,'53434',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (105,'Congue Et','T11046',0,'198495',DATE_SUB(curdate(),interval 39 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (106,'Fermentum Vel','T11047',0,'88992',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (107,'Nulla Fermentum','T11048',0,'15458',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (110,'Dictum Aenean','T11049',0,'102563',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (112,'Et Pellentesque','T11050',0,'28268',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (114,'Ornare Nulla','T11051',0,'36962',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (117,'Vel Magna','T11052',0,'144852',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (118,'Enim Purus','T11053',0,'7879',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (119,'Tincidunt Quis','T11054',0,'161980',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (120,'Non Massa','T11055',0,'155380',DATE_SUB(curdate(),interval 39 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (123,'Arcu Ultrices','T11056',0,'43825',DATE_SUB(curdate(),interval 39 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (131,'Maecenas Urna','T11057',0,'51076',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (134,'Enim Fringilla','T11058',0,'177894',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (136,'Et Mollis','T11059',0,'144629',DATE_SUB(curdate(),interval 32 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (137,'Porttitor Eget','T11060',0,'55708',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (146,'Massa Leo','T11061',0,'111175',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (147,'Nec Risus','T11062',0,'129024',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (150,'Euismod Massa','T11063',0,'36645',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (153,'Vulputate Odio','T11064',0,'86286',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (154,'Blandit Ac','T11065',0,'1863',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (155,'Posuere Risus','T11066',0,'107337',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (156,'Imperdiet Sollicitudin','T11067',0,'111694',DATE_SUB(curdate(),interval 38 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (157,'Lectus Ullamcorper','T11068',0,'75273',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (158,'Lobortis Sagittis','T11069',0,'142789',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (165,'Mi Aenean','T11070',0,'164736',DATE_SUB(curdate(),interval 40 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (169,'Convallis Dolor','T11071',0,'99760',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (171,'Tellus Luctus','T11072',0,'26270',DATE_SUB(curdate(),interval 35 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (175,'Gravida Suscipit','T11073',0,'110757',DATE_SUB(curdate(),interval 37 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (177,'Congue Lacus','T11074',0,'10477',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (181,'Blandit Imperdiet','T11075',0,'149809',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (182,'Eget Tortor','T11076',0,'40718',DATE_SUB(curdate(),interval 36 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (183,'Arcu Ligula','T11077',0,'21517',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (184,'Vulputate Sagittis','T11078',0,'54863',DATE_SUB(curdate(),interval 30 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (188,'Vel Suscipit','T11079',0,'22994',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (195,'Fermentum Et','T11080',0,'178196',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (199,'Praesent Tristique','T11081',0,'4197',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (206,'Condimentum Mollis','T11082',0,'87795',DATE_SUB(curdate(),interval 39 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (207,'Ut Placerat','T11083',0,'188612',DATE_SUB(curdate(),interval 31 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (209,'Quis Sem','T11084',0,'146985',DATE_SUB(curdate(),interval 34 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (211,'Interdum Leo','T11085',0,'145351',DATE_SUB(curdate(),interval 33 year));
21:04:13 (engine) [SQL]->Exec [Done]:1
21:04:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (215,'Suscipit Lorem','T11086',0,'79692',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (216,'Suscipit Id','T11087',0,'11876',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (217,'Diam Velit','T11088',0,'159588',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (219,'A Sed','T11089',0,'114644',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (220,'Dictum Amet','T11090',0,'163177',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (224,'Magna Quis','T11091',0,'141729',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (226,'Ornare Sodales','T11092',0,'176948',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (229,'At Imperdiet','T11093',0,'62109',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (234,'Mauris Vitae','T11094',0,'154363',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (236,'Risus Id','T11095',0,'172860',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (237,'Convallis Velit','T11096',0,'25794',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (238,'Nascetur Vivamus','T11097',0,'21406',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (240,'Condimentum Aliquam','T11098',0,'190003',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (241,'Ut In','T11099',0,'85652',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (242,'Imperdiet Quis','T11100',0,'111441',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (246,'Aliquam 
','T11101',0,'89633',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (261,'Ornare Malesuada','T11102',0,'184764',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (262,'Nunc Eget','T11103',0,'156282',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (263,'Faucibus Non','T11104',0,'1881',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (265,'Mauris Aliquam','T11105',0,'61001',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (269,'Congue Massa','T11106',0,'48314',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (270,'Sapien Eros','T11107',0,'61730',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (274,'Ac Lacinia','T11108',0,'80839',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (276,'Cursus Nulla','T11109',0,'88877',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (279,'Mollis Nec','T11110',0,'21913',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (281,'Tempus Dictum','T11111',0,'191248',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (282,'Vulputate Malesuada','T11112',0,'107642',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (286,'Amet Leo','T11113',0,'148178',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (289,'Nam Ac','T11114',0,'168531',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (290,'Ornare Auctor','T11115',0,'5559',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (294,'Adipiscing Quis','T11116',0,'108492',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (304,'At In','T11117',0,'12227',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (305,'Ipsum Vitae','T11118',0,'96041',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (306,'Commodo Sed','T11119',0,'23609',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (308,'Odio Laoreet','T11120',0,'55392',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (309,'Ligula Adipiscing','T11121',0,'121122',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (311,'Lorem Eget','T11122',0,'121921',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (312,'In In','T11123',0,'57549',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (314,'Augue Id','T11124',0,'73499',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (315,'Hendrerit Praesent','T11125',0,'142092',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (316,'In Cursus','T11126',0,'136693',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (317,'Vitae Vulputate','T11127',0,'104810',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (319,'Sociis Vulputate','T11128',0,'102672',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (321,'Sed Ut','T11129',0,'110988',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (323,'Arcu Imperdiet','T11130',0,'94358',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (324,'Vulputate Diam','T11131',0,'156706',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (325,'Neque Auctor','T11132',0,'45024',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (327,'Sit Elit','T11133',0,'115777',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (328,'Erat Fringilla','T11134',0,'168003',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (329,'Commodo Risus','T11135',0,'156507',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (330,'Imperdiet Ultricies','T11136',0,'95773',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (333,'Consectetur Sem','T11137',0,'160623',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (340,'Magna Nunc','T11138',0,'29780',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (341,'Sem Sagittis','T11139',0,'174334',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (345,'Posuere Nam','T11140',0,'6194',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (349,'Sem Imperdiet','T11141',0,'168422',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (350,'Sed Ut','T11142',0,'182388',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (352,'Accumsan Nec','T11143',0,'91538',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (353,'Purus Vel','T11144',0,'39038',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (356,'Non ','T11145',0,'77467',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (359,'Nunc Condimentum','T11146',0,'33804',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (360,'Magnis Nulla','T11147',0,'186365',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (363,'Et Eget','T11148',0,'43045',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (365,'Mollis Arcu','T11149',0,'65687',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (370,'Dignissim Placerat','T11150',0,'76184',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (372,'Elit Ullamcorper','T11151',0,'199379',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (375,'Suscipit Cursus','T11152',0,'66089',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (376,'Cursus Vestibulum','T11153',0,'182849',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (378,'Massa Posuere','T11154',0,'154246',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (381,'Tortor Vivamus','T11155',0,'54960',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (382,'Sodales A','T11156',0,'86253',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (384,'Massa Diam','T11157',0,'136670',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (385,'Lorem Interdum','T11158',0,'14489',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (389,'Convallis Augue','T11159',0,'172028',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (400,'Sollicitudin Cursus','T11160',0,'84716',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (402,'Sed Tellus','T11161',0,'183079',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (404,'Massa Ac','T11162',0,'177014',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (406,'Malesuada Vestibulum','T11163',0,'161296',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (407,'Ornare Dui','T11164',0,'58803',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (419,' Sapien','T11165',0,'96813',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (427,'Nulla Eleifend','T11166',0,'186489',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (430,'Vitae Suspendisse','T11167',0,'124514',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (432,'Ac Accumsan','T11168',0,'67816',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (435,'Turpis Massa','T11169',0,'10783',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (437,'Rutrum Rutrum','T11170',0,'70024',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (440,'Nam Tempus','T11171',0,'77259',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (443,'A Vehicula','T11172',0,'189198',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (449,'Laoreet Praesent','T11173',0,'77863',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (451,'Turpis Tempor','T11174',0,'128768',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (452,'Nisl Velit','T11175',0,'99938',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (453,'Justo Ullamcorper','T11176',0,'197808',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (456,'Eu Venenatis','T11177',0,'100321',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (460,'Ac Nulla','T11178',0,'73022',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (462,'Sit Lacinia','T11179',0,'165904',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (463,'Quis Nunc','T11180',0,'158892',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (465,'Nisi Ac','T11181',0,'157743',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (466,'Phasellus Quis','T11182',0,'160910',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (469,'Diam Convallis','T11183',0,'143474',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (471,'Pellentesque Lectus','T11184',0,'141612',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (473,'Praesent Varius','T11185',0,'54119',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (477,'Sed Bibendum','T11186',0,'162414',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (479,'Praesent Lorem','T11187',0,'94474',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (491,'Consectetur Velit','T11188',0,'181646',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (492,'Faucibus Laoreet','T11189',0,'162959',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (497,'Tincidunt In','T11190',0,'115198',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (499,'Aliquam Blandit','T11191',0,'167997',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (500,' Massa','T11192',0,'60572',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (503,'Quis Mollis','T11193',0,'96081',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (505,'Varius Blandit','T11194',0,'177758',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (506,'Elit Quis','T11195',0,'83020',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (508,'Vitae Tempor','T11196',0,'194766',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (509,'Elit Eget','T11197',0,'6941',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (510,'Bibendum Imperdiet','T11198',0,'195646',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (512,'Ornare Sed','T11199',0,'79632',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (515,'Risus Vivamus','T11200',0,'130588',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (516,'Nunc Id','T11201',0,'188607',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (518,'Nisi Nulla','T11202',0,'15980',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (519,'Nulla Id','T11203',0,'142211',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (522,'Sed Ac','T11204',0,'179911',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (523,'Parturient Elit','T11205',0,'197675',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (524,'Non Malesuada','T11206',0,'42605',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (526,'Metus Imperdiet','T11207',0,'70566',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (528,'Justo Dolor','T11208',0,'55000',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (532,'Suscipit Interdum','T11209',0,'14060',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (533,'Condimentum Auctor','T11210',0,'184966',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (535,'Dictum Bibendum','T11211',0,'12760',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (539,'Varius Eget','T11212',0,'60430',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (541,'Id Duis','T11213',0,'135145',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (542,'Proin Praesent','T11214',0,'178318',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (547,'Ligula Aliquet','T11215',0,'38598',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (550,'Tincidunt Magnis','T11216',0,'79762',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (551,'Ac Magnis','T11217',0,'190849',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (552,'In A','T11218',0,'195742',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (557,'Id Nulla','T11219',0,'145617',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (559,'Dolor Quis','T11220',0,'125993',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (563,'Varius Donec','T11221',0,'69212',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (567,'Nulla Dui','T11222',0,'123965',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (571,'Ridiculus Neque','T11223',0,'101302',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (572,'Leo Ornare','T11224',0,'24313',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (573,'Sagittis Mauris','T11225',0,'140541',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (574,'Mauris Vehicula','T11226',0,'51658',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (576,'Scelerisque Turpis','T11227',0,'61107',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (577,'Adipiscing Elit','T11228',0,'126656',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (583,'Id Maecenas','T11229',0,'183053',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (584,'Interdum Condimentum','T11230',0,'26000',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (587,'Nec In','T11231',0,'86263',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (588,'Dui Proin','T11232',0,'119108',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (591,'Lectus Mi','T11233',0,'182006',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (595,'Maecenas Nibh','T11234',0,'10679',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (598,'Lobortis Aenean','T11235',0,'86675',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (599,'Ultricies Interdum','T11236',0,'101736',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (602,'Accumsan Convallis','T11237',0,'194248',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (604,'Arcu Tristique','T11238',0,'192409',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (605,'Pharetra A','T11239',0,'187130',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (608,'A Mauris','T11240',0,'39172',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (609,'Id Erat','T11241',0,'31700',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (610,'Nunc 
','T11242',0,'102533',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (611,'Mattis A','T11243',0,'120043',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (613,'Amet Quis','T11244',0,'80175',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (616,'Venenatis Commodo','T11245',0,'64336',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (621,'Parturient At','T11246',0,'159761',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (622,'Volutpat Cursus','T11247',0,'98141',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (629,'Velit Ac','T11248',0,'39651',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (636,'Suspendisse Ornare','T11249',0,'180831',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (643,'Arcu Consectetur','T11250',0,'99116',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (644,'Quis Diam','T11251',0,'951',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (647,'Nisi Ante','T11252',0,'86850',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (650,'Nunc Nulla','T11253',0,'45878',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (651,'Congue Dui','T11254',0,'92445',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (653,'Porttitor Proin','T11255',0,'68014',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (654,'Lorem Felis','T11256',0,'24672',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (655,'Nulla Dui','T11257',0,'99725',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (656,'Tristique Vehicula','T11258',0,'120648',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (657,'Lacus Non','T11259',0,'36549',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (659,'Consectetur Gravida','T11260',0,'6441',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (660,'Commodo Sollicitudin','T11261',0,'8498',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (663,'Duis Volutpat','T11262',0,'25866',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (666,'Sociis Magnis','T11263',0,'16146',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (672,'Dolor Nisi','T11264',0,'105819',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (678,'Vivamus Dui','T11265',0,'73314',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (683,'Nullam Non','T11266',0,'96627',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (686,'Sit Sodales','T11267',0,'81321',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (687,'Leo Massa','T11268',0,'76565',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (692,'Diam Nisi','T11269',0,'13679',DATE_SUB(curdate(),interval 40 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (694,'Luctus Facilisis','T11270',0,'8528',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (701,'Sodales Tortor','T11271',0,'96964',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (702,'In Consectetur','T11272',0,'115539',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (703,'Nulla A','T11273',0,'47004',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (704,'Sapien Vestibulum','T11274',0,'35095',DATE_SUB(curdate(),interval 35 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (705,'Turpis Amet','T11275',0,'16666',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (707,'Elit Et','T11276',0,'64547',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (708,'Dictum Enim','T11277',0,'142301',DATE_SUB(curdate(),interval 39 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (709,'Neque Nulla','T11278',0,'41837',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (710,'A Nec','T11279',0,'186173',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (713,'Lectus Facilisis','T11280',0,'152815',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (719,'Est ','T11281',0,'162623',DATE_SUB(curdate(),interval 34 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (721,'Vestibulum In','T11282',0,'171761',DATE_SUB(curdate(),interval 31 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (722,'Mattis Aenean','T11283',0,'153645',DATE_SUB(curdate(),interval 36 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (723,'Bibendum Eu','T11284',0,'62575',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (730,'Ridiculus Rhoncus','T11285',0,'24254',DATE_SUB(curdate(),interval 30 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (737,'Tristique Ipsum','T11286',0,'65388',DATE_SUB(curdate(),interval 37 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (740,'Rhoncus Proin','T11287',0,'172209',DATE_SUB(curdate(),interval 38 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (741,'Eget Magna','T11288',0,'96388',DATE_SUB(curdate(),interval 32 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (742,'Magna Ultricies','T11289',0,'117221',DATE_SUB(curdate(),interval 33 year));
21:04:14 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (743,'At Tristique','T11290',0,'88553',DATE_SUB(curdate(),interval 39 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (744,'Praesent Varius','T11291',0,'89180',DATE_SUB(curdate(),interval 38 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (745,'Eget Quis','T11292',0,'19021',DATE_SUB(curdate(),interval 38 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (746,'Convallis In','T11293',0,'170998',DATE_SUB(curdate(),interval 36 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (749,'Massa Ac','T11294',0,'43546',DATE_SUB(curdate(),interval 36 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (753,'Massa Sit','T11295',0,'60736',DATE_SUB(curdate(),interval 32 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (756,'Fermentum Metus','T11296',0,'85059',DATE_SUB(curdate(),interval 33 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (757,'Amet Amet','T11297',0,'133913',DATE_SUB(curdate(),interval 34 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (762,'Cum Nisl','T11298',0,'43730',DATE_SUB(curdate(),interval 39 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (764,'Tempor Nulla','T11299',0,'127740',DATE_SUB(curdate(),interval 36 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (769,'Convallis Cursus','T11300',0,'81864',DATE_SUB(curdate(),interval 32 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (772,'Velit Fringilla','T11301',0,'153632',DATE_SUB(curdate(),interval 35 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:SELECT ID FROM TaxPayerTable where ParentID is not null
21:04:15 (engine) [SQL]->Exec [Done]:Resource id #2630
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1001,'Tristique Turpis','T11302',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1002,'Volutpat Interdum','T11303',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1003,'Eu Semper','T11304',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1004,'Malesuada Nam','T11305',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1005,'Auctor Eget','T11306',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1006,'Turpis A','T11307',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1007,'Tempus A','T11308',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1008,'Et Tempus','T11309',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1009,'A Dui','T11310',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1010,'Auctor Adipiscing','T11311',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1011,'At Fermentum','T11312',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1012,'Condimentum Nulla','T11313',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1013,'Lacus Aliquam','T11314',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1014,'Et Sodales','T11315',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1015,'Mus Imperdiet','T11316',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1016,'Erat Mauris','T11317',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1017,'Sed Metus','T11318',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1018,'A At','T11319',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1019,'Convallis Est','T11320',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1020,'Magna Odio','T11321',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1021,'Convallis At','T11322',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1022,'Condimentum Non','T11323',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1023,'Erat Arcu','T11324',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1024,'Etiam Convallis','T11325',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1025,'Non Eget','T11326',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1026,'Donec Enim','T11327',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1027,'In Convallis','T11328',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1028,'Velit Placerat','T11329',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1029,'Dignissim Nascetur','T11330',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1030,'Eget Risus','T11331',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1031,'In A','T11332',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1032,'Hendrerit Commodo','T11333',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1033,'Condimentum Nascetur','T11334',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1034,'Scelerisque Duis','T11335',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1035,'Amet Risus','T11336',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1036,'Tellus Mollis','T11337',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1037,'Laoreet Nec','T11338',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1038,'Eget Arcu','T11339',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1039,'Erat Laoreet','T11340',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1040,'Sed Sem','T11341',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1041,'Id Tempus','T11342',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1042,'Sed Euismod','T11343',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1043,'Dis Praesent','T11344',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1044,'Tincidunt Auctor','T11345',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1045,'Lacus Vivamus','T11346',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1046,'Ullamcorper Lorem','T11347',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1047,'Sociis Tellus','T11348',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1048,'Lacinia Imperdiet','T11349',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1049,'Tristique Cursus','T11350',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1050,'Facilisis Pellentesque','T11351',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1051,'Magnis Ultricies','T11352',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1052,'Lectus Vitae','T11353',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1053,'Nibh Nulla','T11354',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1054,'Ac Suscipit','T11355',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1055,'A Sed','T11356',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1056,'Laoreet Vivamus','T11357',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1057,'A Vestibulum','T11358',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1058,'Fermentum Rhoncus','T11359',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1059,'A Dis','T11360',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1060,'Phasellus Maecenas','T11361',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1061,'Mattis Eget','T11362',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1062,'Molestie Sit','T11363',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1063,'Arcu Et','T11364',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1064,'Ut Praesent','T11365',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1065,'Natoque Molestie','T11366',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1066,'Magnis Gravida','T11367',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1067,'Mauris Neque','T11368',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1068,'Quis Felis','T11369',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1069,'Magna Consectetur','T11370',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1070,'Nascetur Aliquam','T11371',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1071,'Quam Nisi','T11372',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1072,'Eget Sed','T11373',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1073,'Et Ut','T11374',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1074,'Nisl Vulputate','T11375',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1075,'Sed Fringilla','T11376',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1076,'In Cursus','T11377',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1077,'Semper Ultrices','T11378',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1078,'Vitae Tincidunt','T11379',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1079,'Lacus Vestibulum','T11380',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1080,'Eleifend Lorem','T11381',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1081,'Auctor Cum','T11382',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1082,'A Convallis','T11383',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1083,'Tellus Quisque','T11384',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1084,'Mauris Ultricies','T11385',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1085,'Auctor Praesent','T11386',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1086,'Nec Pharetra','T11387',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1087,'Commodo Phasellus','T11388',0,0,DATE_SUB(curdate(),interval 10 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1088,'Leo In','T11389',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1089,'Libero Praesent','T11390',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1090,'Ultricies Lorem','T11391',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1091,'Varius Mauris','T11392',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1092,'Tincidunt Aliquam','T11393',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1093,'Donec Fringilla','T11394',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1094,'Elit Suspendisse','T11395',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1095,'Tortor A','T11396',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1096,'Quam Lorem','T11397',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1097,'In Aliquam','T11398',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1098,'Vulputate Erat','T11399',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1099,'Nulla Non','T11400',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1100,'Ut Proin','T11401',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1101,'Eu Diam','T11402',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1102,'Eget Maecenas','T11403',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1103,'Dignissim Scelerisque','T11404',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1104,'Nulla In','T11405',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1105,'Praesent Vestibulum','T11406',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1106,'Aenean In','T11407',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1107,'Nulla Nulla','T11408',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1108,'Proin Quis','T11409',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1109,'Donec Ipsum','T11410',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1110,'Eget Lacus','T11411',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1111,'Ornare Semper','T11412',0,0,DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1112,'Venenatis Urna','T11413',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1113,'Aenean Dis','T11414',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1114,'Rutrum Blandit','T11415',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1115,'Justo Praesent','T11416',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1116,'Lectus Phasellus','T11417',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1117,'Neque Vivamus','T11418',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1118,'Tincidunt A','T11419',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1119,'Arcu Amet','T11420',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1120,'Ipsum Nec','T11421',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1121,'Tortor Elit','T11422',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1122,'Rutrum Commodo','T11423',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1123,'Laoreet Convallis','T11424',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1124,'Dictum Quis','T11425',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1125,'Praesent Lacus','T11426',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1126,'At Donec','T11427',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1127,'Id Nulla','T11428',0,0,DATE_SUB(curdate(),interval 1 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1128,'Nec Luctus','T11429',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1129,'Nulla Ligula','T11430',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1130,'Faucibus Mattis','T11431',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1131,'Ut Nec','T11432',0,0,DATE_SUB(curdate(),interval 11 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1132,'Ut Bibendum','T11433',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1133,'Consectetur Placerat','T11434',0,0,DATE_SUB(curdate(),interval 3 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1134,'In Amet','T11435',0,0,DATE_SUB(curdate(),interval 9 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1135,'Arcu Imperdiet','T11436',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1136,'Nibh Proin','T11437',0,0,DATE_SUB(curdate(),interval 8 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1137,'Et Tempus','T11438',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1138,'Vitae Id','T11439',0,0,DATE_SUB(curdate(),interval 6 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1139,'Suscipit Enim','T11440',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1140,'Ridiculus Leo','T11441',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1141,'Nulla Dui','T11442',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1142,'Donec Mattis','T11443',0,0,DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1143,'Morbi Magna','T11444',0,0,DATE_SUB(curdate(),interval 15 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1144,'Vel Id','T11445',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1145,'Malesuada A','T11446',0,0,DATE_SUB(curdate(),interval 0 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1146,'Urna Sed','T11447',0,0,DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1147,'Ipsum Ipsum','T11448',0,0,DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1148,'Metus Lectus','T11449',0,0,DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1149,'Vitae Et','T11450',0,0,DATE_SUB(curdate(),interval 5 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1150,'Nunc Ipsum','T11451',0,0,DATE_SUB(curdate(),interval 2 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Dui FIE','B10001',1,'6864626',DATE_SUB(curdate(),interval 45 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Nisi AS','B10002',1,'5751861',DATE_SUB(curdate(),interval 41 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Urna OÜ','B10003',1,'6630037',DATE_SUB(curdate(),interval 98 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Fringilla AS','B10004',1,'7943664',DATE_SUB(curdate(),interval 73 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Varius OÜ','B10005',1,'1612056',DATE_SUB(curdate(),interval 14 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Sed OÜ','B10006',1,'7576243',DATE_SUB(curdate(),interval 24 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Elit FIE','B10007',1,'4074913',DATE_SUB(curdate(),interval 89 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Et AS','B10008',1,'4554685',DATE_SUB(curdate(),interval 78 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Volutpat OÜ','B10009',1,'2707846',DATE_SUB(curdate(),interval 13 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Volutpat OÜ','B10010',1,'5928918',DATE_SUB(curdate(),interval 45 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Sed OÜ','B10011',1,'7865841',DATE_SUB(curdate(),interval 98 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Sodales FIE','B10012',1,'3515043',DATE_SUB(curdate(),interval 17 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Aliquam OÜ','B10013',1,'9177747',DATE_SUB(curdate(),interval 26 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Id OÜ','B10014',1,'6535742',DATE_SUB(curdate(),interval 53 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Nisl AS','B10015',1,'8486703',DATE_SUB(curdate(),interval 53 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Ultrices AS','B10016',1,'7173585',DATE_SUB(curdate(),interval 90 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Vel FIE','B10017',1,'3872844',DATE_SUB(curdate(),interval 70 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Tortor AS','B10018',1,'7058902',DATE_SUB(curdate(),interval 40 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Neque AS','B10019',1,'7511157',DATE_SUB(curdate(),interval 72 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Adipiscing FIE','B10020',1,'1965672',DATE_SUB(curdate(),interval 63 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae A FIE','B10021',1,'4674032',DATE_SUB(curdate(),interval 22 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Arcu OÜ','B10022',1,'7470860',DATE_SUB(curdate(),interval 25 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Vitae AS','B10023',1,'3459204',DATE_SUB(curdate(),interval 70 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Pellentesque FIE','B10024',1,'1327992',DATE_SUB(curdate(),interval 73 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Blandit OÜ','B10025',1,'5996617',DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Auctor AS','B10026',1,'1977723',DATE_SUB(curdate(),interval 25 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Mus OÜ','B10027',1,'7315347',DATE_SUB(curdate(),interval 90 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Varius OÜ','B10028',1,'5063959',DATE_SUB(curdate(),interval 93 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Molestie AS','B10029',1,'9188322',DATE_SUB(curdate(),interval 19 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Tempus AS','B10030',1,'8456577',DATE_SUB(curdate(),interval 84 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Pellentesque AS','B10031',1,'5629209',DATE_SUB(curdate(),interval 61 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Urna FIE','B10032',1,'4248694',DATE_SUB(curdate(),interval 88 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Erat OÜ','B10033',1,'7019890',DATE_SUB(curdate(),interval 79 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Massa FIE','B10034',1,'7518023',DATE_SUB(curdate(),interval 100 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Sodales FIE','B10035',1,'3123394',DATE_SUB(curdate(),interval 35 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Id AS','B10036',1,'4247763',DATE_SUB(curdate(),interval 7 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Ultricies AS','B10037',1,'2675836',DATE_SUB(curdate(),interval 85 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Est OÜ','B10038',1,'5464280',DATE_SUB(curdate(),interval 82 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Id FIE','B10039',1,'8837112',DATE_SUB(curdate(),interval 18 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Id FIE','B10040',1,'7203891',DATE_SUB(curdate(),interval 86 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Gravida AS','B10041',1,'6812442',DATE_SUB(curdate(),interval 86 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Quis AS','B10042',1,'8234674',DATE_SUB(curdate(),interval 12 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Maecenas OÜ','B10043',1,'3618790',DATE_SUB(curdate(),interval 99 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Dui OÜ','B10044',1,'9375051',DATE_SUB(curdate(),interval 52 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Nisi AS','B10045',1,'2393072',DATE_SUB(curdate(),interval 30 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Et OÜ','B10046',1,'9526339',DATE_SUB(curdate(),interval 53 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Lacus AS','B10047',1,'6324308',DATE_SUB(curdate(),interval 32 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Id AS','B10048',1,'1902342',DATE_SUB(curdate(),interval 4 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Velit FIE','B10049',1,'6886267',DATE_SUB(curdate(),interval 56 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Tincidunt OÜ','B10050',1,'3388016',DATE_SUB(curdate(),interval 90 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Malesuada AS','B10051',1,'2283364',DATE_SUB(curdate(),interval 67 year));
21:04:15 (engine) [SQL]->Exec [Done]:1
21:04:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Quis OÜ','B10052',1,'1621109',DATE_SUB(curdate(),interval 31 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Quis FIE','B10053',1,'2843691',DATE_SUB(curdate(),interval 96 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Varius AS','B10054',1,'4436471',DATE_SUB(curdate(),interval 31 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Sit OÜ','B10055',1,'1744008',DATE_SUB(curdate(),interval 23 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Non AS','B10056',1,'7445974',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Accumsan FIE','B10057',1,'4720780',DATE_SUB(curdate(),interval 97 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Venenatis AS','B10058',1,'8964798',DATE_SUB(curdate(),interval 11 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Vel OÜ','B10059',1,'6558448',DATE_SUB(curdate(),interval 14 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Molestie OÜ','B10060',1,'6636185',DATE_SUB(curdate(),interval 30 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Lacinia FIE','B10061',1,'3151546',DATE_SUB(curdate(),interval 95 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Commodo FIE','B10062',1,'3801344',DATE_SUB(curdate(),interval 8 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Fringilla FIE','B10063',1,'7545003',DATE_SUB(curdate(),interval 81 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Diam FIE','B10064',1,'2818124',DATE_SUB(curdate(),interval 98 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Donec FIE','B10065',1,'5028812',DATE_SUB(curdate(),interval 45 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed A OÜ','B10066',1,'4710845',DATE_SUB(curdate(),interval 51 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Mauris OÜ','B10067',1,'6040483',DATE_SUB(curdate(),interval 31 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Lacus FIE','B10068',1,'2605614',DATE_SUB(curdate(),interval 99 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit 
 OÜ','B10069',1,'7162725',DATE_SUB(curdate(),interval 94 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Varius AS','B10070',1,'1488213',DATE_SUB(curdate(),interval 77 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Rhoncus OÜ','B10071',1,'9358511',DATE_SUB(curdate(),interval 47 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque In OÜ','B10072',1,'4858030',DATE_SUB(curdate(),interval 40 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Erat OÜ','B10073',1,'3047871',DATE_SUB(curdate(),interval 67 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Massa OÜ','B10074',1,'5289259',DATE_SUB(curdate(),interval 73 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Tincidunt FIE','B10075',1,'7442217',DATE_SUB(curdate(),interval 94 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sapien OÜ','B10076',1,'9194032',DATE_SUB(curdate(),interval 97 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Molestie FIE','B10077',1,'8719847',DATE_SUB(curdate(),interval 85 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Non FIE','B10078',1,'8351650',DATE_SUB(curdate(),interval 34 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Ut OÜ','B10079',1,'7443152',DATE_SUB(curdate(),interval 90 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Phasellus OÜ','B10080',1,'5098682',DATE_SUB(curdate(),interval 99 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Metus AS','B10081',1,'2007094',DATE_SUB(curdate(),interval 50 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae In OÜ','B10082',1,'6986439',DATE_SUB(curdate(),interval 90 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Aliquam FIE','B10083',1,'4371943',DATE_SUB(curdate(),interval 78 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Ultricies FIE','B10084',1,'5613497',DATE_SUB(curdate(),interval 66 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Lacinia AS','B10085',1,'5312296',DATE_SUB(curdate(),interval 47 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Cras FIE','B10086',1,'7113557',DATE_SUB(curdate(),interval 4 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Ultrices FIE','B10087',1,'2721523',DATE_SUB(curdate(),interval 97 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Aenean FIE','B10088',1,'7737571',DATE_SUB(curdate(),interval 2 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Tincidunt FIE','B10089',1,'7083986',DATE_SUB(curdate(),interval 51 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nec OÜ','B10090',1,'4811399',DATE_SUB(curdate(),interval 87 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Cum OÜ','B10091',1,'3991722',DATE_SUB(curdate(),interval 94 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Praesent OÜ','B10092',1,'1518773',DATE_SUB(curdate(),interval 24 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Consectetur AS','B10093',1,'4667631',DATE_SUB(curdate(),interval 20 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tortor OÜ','B10094',1,'1139980',DATE_SUB(curdate(),interval 49 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Nulla OÜ','B10095',1,'5876708',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Sollicitudin FIE','B10096',1,'5244012',DATE_SUB(curdate(),interval 70 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Parturient AS','B10097',1,'4338240',DATE_SUB(curdate(),interval 81 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Est OÜ','B10098',1,'6535663',DATE_SUB(curdate(),interval 51 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Placerat OÜ','B10099',1,'7376020',DATE_SUB(curdate(),interval 60 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Semper OÜ','B10100',1,'3702450',DATE_SUB(curdate(),interval 79 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Dictum OÜ','B10101',1,'5049886',DATE_SUB(curdate(),interval 43 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Ornare FIE','B10102',1,'1854365',DATE_SUB(curdate(),interval 4 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Nulla OÜ','B10103',1,'6001011',DATE_SUB(curdate(),interval 22 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nulla FIE','B10104',1,'7276427',DATE_SUB(curdate(),interval 26 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Eget OÜ','B10105',1,'7428692',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Eget FIE','B10106',1,'4459699',DATE_SUB(curdate(),interval 75 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis 
 OÜ','B10107',1,'3050464',DATE_SUB(curdate(),interval 67 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Praesent AS','B10108',1,'8044326',DATE_SUB(curdate(),interval 52 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Tellus OÜ','B10109',1,'8280838',DATE_SUB(curdate(),interval 74 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Et OÜ','B10110',1,'3456641',DATE_SUB(curdate(),interval 84 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Natoque AS','B10111',1,'1826377',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Et OÜ','B10112',1,'9550168',DATE_SUB(curdate(),interval 52 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Justo FIE','B10113',1,'1098789',DATE_SUB(curdate(),interval 75 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Erat AS','B10114',1,'6746244',DATE_SUB(curdate(),interval 87 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Donec AS','B10115',1,'1687809',DATE_SUB(curdate(),interval 74 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Ut FIE','B10116',1,'2637771',DATE_SUB(curdate(),interval 95 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Id OÜ','B10117',1,'8646123',DATE_SUB(curdate(),interval 92 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Amet AS','B10118',1,'2835999',DATE_SUB(curdate(),interval 97 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Mollis OÜ','B10119',1,'3805724',DATE_SUB(curdate(),interval 59 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Vitae FIE','B10120',1,'4733264',DATE_SUB(curdate(),interval 35 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Aliquam AS','B10121',1,'6362974',DATE_SUB(curdate(),interval 19 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Enim FIE','B10122',1,'8932854',DATE_SUB(curdate(),interval 58 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Condimentum OÜ','B10123',1,'2974291',DATE_SUB(curdate(),interval 44 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Vulputate OÜ','B10124',1,'4351351',DATE_SUB(curdate(),interval 0 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Fermentum OÜ','B10125',1,'9054283',DATE_SUB(curdate(),interval 26 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Tincidunt FIE','B10126',1,'8524939',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Sagittis OÜ','B10127',1,'6355203',DATE_SUB(curdate(),interval 98 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Commodo OÜ','B10128',1,'7497894',DATE_SUB(curdate(),interval 49 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Venenatis AS','B10129',1,'4064327',DATE_SUB(curdate(),interval 76 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis In OÜ','B10130',1,'9626105',DATE_SUB(curdate(),interval 3 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Nec FIE','B10131',1,'2251794',DATE_SUB(curdate(),interval 26 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Convallis OÜ','B10132',1,'2899590',DATE_SUB(curdate(),interval 14 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Mauris OÜ','B10133',1,'6418204',DATE_SUB(curdate(),interval 12 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sociis FIE','B10134',1,'8692368',DATE_SUB(curdate(),interval 18 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Potenti FIE','B10135',1,'3616302',DATE_SUB(curdate(),interval 13 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Vulputate FIE','B10136',1,'1207819',DATE_SUB(curdate(),interval 76 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ultricies AS','B10137',1,'8230457',DATE_SUB(curdate(),interval 72 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Venenatis AS','B10138',1,'8068702',DATE_SUB(curdate(),interval 25 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Dui FIE','B10139',1,'7135813',DATE_SUB(curdate(),interval 33 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Vitae FIE','B10140',1,'6785261',DATE_SUB(curdate(),interval 2 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Nibh FIE','B10141',1,'7105827',DATE_SUB(curdate(),interval 15 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Sem FIE','B10142',1,'7745664',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Mollis FIE','B10143',1,'8547465',DATE_SUB(curdate(),interval 38 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Vestibulum OÜ','B10144',1,'5502688',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Nulla FIE','B10145',1,'5142141',DATE_SUB(curdate(),interval 35 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Commodo OÜ','B10146',1,'8669801',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Hendrerit FIE','B10147',1,'4281365',DATE_SUB(curdate(),interval 49 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Varius OÜ','B10148',1,'9796083',DATE_SUB(curdate(),interval 7 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Magna OÜ','B10149',1,'6074034',DATE_SUB(curdate(),interval 53 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Congue FIE','B10150',1,'4967692',DATE_SUB(curdate(),interval 54 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Aliquam AS','B10151',1,'5610179',DATE_SUB(curdate(),interval 58 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Sit FIE','B10152',1,'1629513',DATE_SUB(curdate(),interval 43 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Mauris AS','B10153',1,'8537559',DATE_SUB(curdate(),interval 98 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Sed AS','B10154',1,'4462609',DATE_SUB(curdate(),interval 84 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Facilisis OÜ','B10155',1,'1116008',DATE_SUB(curdate(),interval 76 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Sem FIE','B10156',1,'8309576',DATE_SUB(curdate(),interval 47 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Ultricies OÜ','B10157',1,'5871156',DATE_SUB(curdate(),interval 9 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Eu FIE','B10158',1,'2020378',DATE_SUB(curdate(),interval 16 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Mauris FIE','B10159',1,'4207368',DATE_SUB(curdate(),interval 92 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Tristique FIE','B10160',1,'1489872',DATE_SUB(curdate(),interval 48 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Convallis FIE','B10161',1,'2314688',DATE_SUB(curdate(),interval 44 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa A OÜ','B10162',1,'3142374',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ornare OÜ','B10163',1,'5807965',DATE_SUB(curdate(),interval 11 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Diam AS','B10164',1,'4331666',DATE_SUB(curdate(),interval 82 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Montes FIE','B10165',1,'2338086',DATE_SUB(curdate(),interval 84 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Ornare FIE','B10166',1,'6213955',DATE_SUB(curdate(),interval 96 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Facilisis OÜ','B10167',1,'1889370',DATE_SUB(curdate(),interval 34 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Felis OÜ','B10168',1,'3597945',DATE_SUB(curdate(),interval 78 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Elit OÜ','B10169',1,'2403975',DATE_SUB(curdate(),interval 77 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Commodo OÜ','B10170',1,'7092833',DATE_SUB(curdate(),interval 22 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Condimentum FIE','B10171',1,'2524927',DATE_SUB(curdate(),interval 19 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Imperdiet AS','B10172',1,'5204973',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Volutpat FIE','B10173',1,'4978287',DATE_SUB(curdate(),interval 99 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Sollicitudin OÜ','B10174',1,'6715605',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Nulla FIE','B10175',1,'6866383',DATE_SUB(curdate(),interval 35 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Ut AS','B10176',1,'1149982',DATE_SUB(curdate(),interval 80 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Mi FIE','B10177',1,'2063611',DATE_SUB(curdate(),interval 47 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Ornare OÜ','B10178',1,'2302341',DATE_SUB(curdate(),interval 11 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Nisi AS','B10179',1,'7640474',DATE_SUB(curdate(),interval 65 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Tempus FIE','B10180',1,'5609358',DATE_SUB(curdate(),interval 46 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Neque OÜ','B10181',1,'3151196',DATE_SUB(curdate(),interval 46 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Eget OÜ','B10182',1,'2848554',DATE_SUB(curdate(),interval 81 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Magna AS','B10183',1,'3034950',DATE_SUB(curdate(),interval 75 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Et OÜ','B10184',1,'1063303',DATE_SUB(curdate(),interval 41 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Ullamcorper OÜ','B10185',1,'5654084',DATE_SUB(curdate(),interval 74 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Phasellus OÜ','B10186',1,'2554102',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Lectus FIE','B10187',1,'7153276',DATE_SUB(curdate(),interval 87 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Magna OÜ','B10188',1,'8903945',DATE_SUB(curdate(),interval 90 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Proin OÜ','B10189',1,'6080374',DATE_SUB(curdate(),interval 48 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Id FIE','B10190',1,'6921472',DATE_SUB(curdate(),interval 14 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Vitae AS','B10191',1,'8080277',DATE_SUB(curdate(),interval 69 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Nunc AS','B10192',1,'4913949',DATE_SUB(curdate(),interval 22 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Natoque FIE','B10193',1,'1381056',DATE_SUB(curdate(),interval 14 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Ultricies FIE','B10194',1,'4414736',DATE_SUB(curdate(),interval 21 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Ultricies OÜ','B10195',1,'3254763',DATE_SUB(curdate(),interval 41 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Id OÜ','B10196',1,'7413615',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Libero OÜ','B10197',1,'8347078',DATE_SUB(curdate(),interval 67 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Magna FIE','B10198',1,'3021912',DATE_SUB(curdate(),interval 12 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sed OÜ','B10199',1,'8183455',DATE_SUB(curdate(),interval 48 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Hendrerit FIE','B10200',1,'6087176',DATE_SUB(curdate(),interval 90 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ultricies FIE','B10201',1,'5539747',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Penatibus AS','B10202',1,'7183931',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Nec AS','B10203',1,'6173326',DATE_SUB(curdate(),interval 18 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Commodo FIE','B10204',1,'4987490',DATE_SUB(curdate(),interval 83 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Praesent AS','B10205',1,'6204669',DATE_SUB(curdate(),interval 18 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Eget FIE','B10206',1,'6054553',DATE_SUB(curdate(),interval 88 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Cras AS','B10207',1,'4128426',DATE_SUB(curdate(),interval 9 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Id OÜ','B10208',1,'7977977',DATE_SUB(curdate(),interval 18 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Dolor OÜ','B10209',1,'8123706',DATE_SUB(curdate(),interval 58 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Id AS','B10210',1,'6423943',DATE_SUB(curdate(),interval 96 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Leo OÜ','B10211',1,'3563529',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Quis OÜ','B10212',1,'3129627',DATE_SUB(curdate(),interval 59 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Leo AS','B10213',1,'5731719',DATE_SUB(curdate(),interval 19 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Id FIE','B10214',1,'8569985',DATE_SUB(curdate(),interval 1 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Ornare AS','B10215',1,'4754717',DATE_SUB(curdate(),interval 37 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Quisque FIE','B10216',1,'8142317',DATE_SUB(curdate(),interval 75 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Neque OÜ','B10217',1,'2680066',DATE_SUB(curdate(),interval 9 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Vestibulum AS','B10218',1,'1051050',DATE_SUB(curdate(),interval 96 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Quis FIE','B10219',1,'9136677',DATE_SUB(curdate(),interval 89 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Tellus AS','B10220',1,'7050706',DATE_SUB(curdate(),interval 2 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Dui OÜ','B10221',1,'2520999',DATE_SUB(curdate(),interval 96 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Suscipit AS','B10222',1,'8685404',DATE_SUB(curdate(),interval 57 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Laoreet OÜ','B10223',1,'2857955',DATE_SUB(curdate(),interval 89 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Vitae OÜ','B10224',1,'6431288',DATE_SUB(curdate(),interval 74 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Tempor AS','B10225',1,'4148605',DATE_SUB(curdate(),interval 22 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Ultricies OÜ','B10226',1,'2026565',DATE_SUB(curdate(),interval 0 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Sollicitudin OÜ','B10227',1,'1378205',DATE_SUB(curdate(),interval 43 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Amet AS','B10228',1,'6522799',DATE_SUB(curdate(),interval 87 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Dis OÜ','B10229',1,'2365060',DATE_SUB(curdate(),interval 68 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Vitae OÜ','B10230',1,'1389009',DATE_SUB(curdate(),interval 23 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Leo OÜ','B10231',1,'3155002',DATE_SUB(curdate(),interval 95 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Risus AS','B10232',1,'2744630',DATE_SUB(curdate(),interval 34 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Aliquet OÜ','B10233',1,'8569496',DATE_SUB(curdate(),interval 68 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Nec FIE','B10234',1,'3066153',DATE_SUB(curdate(),interval 97 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Lorem OÜ','B10235',1,'2050165',DATE_SUB(curdate(),interval 15 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Varius FIE','B10236',1,'5677933',DATE_SUB(curdate(),interval 60 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Velit AS','B10237',1,'6102448',DATE_SUB(curdate(),interval 91 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Nec AS','B10238',1,'4866662',DATE_SUB(curdate(),interval 54 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Penatibus Morbi AS','B10239',1,'1563746',DATE_SUB(curdate(),interval 56 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Lacus FIE','B10240',1,'5840333',DATE_SUB(curdate(),interval 32 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Eu AS','B10241',1,'3752076',DATE_SUB(curdate(),interval 21 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Magna FIE','B10242',1,'3283344',DATE_SUB(curdate(),interval 94 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Velit OÜ','B10243',1,'6165833',DATE_SUB(curdate(),interval 84 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Morbi AS','B10244',1,'6648469',DATE_SUB(curdate(),interval 15 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Eu FIE','B10245',1,'9088722',DATE_SUB(curdate(),interval 15 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Praesent AS','B10246',1,'4101341',DATE_SUB(curdate(),interval 28 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Interdum OÜ','B10247',1,'8940288',DATE_SUB(curdate(),interval 52 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Ipsum FIE','B10248',1,'4221281',DATE_SUB(curdate(),interval 61 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Urna FIE','B10249',1,'5302438',DATE_SUB(curdate(),interval 30 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Maecenas AS','B10250',1,'9005927',DATE_SUB(curdate(),interval 61 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Mauris FIE','B10251',1,'1434464',DATE_SUB(curdate(),interval 51 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Ridiculus AS','B10252',1,'1884515',DATE_SUB(curdate(),interval 83 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Velit AS','B10253',1,'9336606',DATE_SUB(curdate(),interval 54 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Id FIE','B10254',1,'5559508',DATE_SUB(curdate(),interval 88 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Turpis OÜ','B10255',1,'4433962',DATE_SUB(curdate(),interval 87 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Lacus FIE','B10256',1,'9420782',DATE_SUB(curdate(),interval 98 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Eleifend OÜ','B10257',1,'2340610',DATE_SUB(curdate(),interval 16 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Ipsum OÜ','B10258',1,'4285411',DATE_SUB(curdate(),interval 10 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Sapien FIE','B10259',1,'5622611',DATE_SUB(curdate(),interval 84 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Sit OÜ','B10260',1,'2829686',DATE_SUB(curdate(),interval 59 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Vitae FIE','B10261',1,'8463856',DATE_SUB(curdate(),interval 9 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Dignissim AS','B10262',1,'7087347',DATE_SUB(curdate(),interval 68 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Erat FIE','B10263',1,'7773761',DATE_SUB(curdate(),interval 27 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Molestie AS','B10264',1,'6309586',DATE_SUB(curdate(),interval 22 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Sed AS','B10265',1,'2279130',DATE_SUB(curdate(),interval 57 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Eget OÜ','B10266',1,'3934012',DATE_SUB(curdate(),interval 65 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Proin OÜ','B10267',1,'2898115',DATE_SUB(curdate(),interval 38 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Venenatis AS','B10268',1,'6699820',DATE_SUB(curdate(),interval 72 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Suspendisse FIE','B10269',1,'6223864',DATE_SUB(curdate(),interval 55 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Auctor OÜ','B10270',1,'4601646',DATE_SUB(curdate(),interval 11 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Tristique AS','B10271',1,'7836013',DATE_SUB(curdate(),interval 93 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Urna OÜ','B10272',1,'4636925',DATE_SUB(curdate(),interval 5 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Nulla OÜ','B10273',1,'4429073',DATE_SUB(curdate(),interval 86 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Nulla FIE','B10274',1,'1991187',DATE_SUB(curdate(),interval 47 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Euismod Ornare AS','B10275',1,'5212705',DATE_SUB(curdate(),interval 48 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Neque AS','B10276',1,'2885697',DATE_SUB(curdate(),interval 100 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Donec FIE','B10277',1,'3759776',DATE_SUB(curdate(),interval 60 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Arcu AS','B10278',1,'1556877',DATE_SUB(curdate(),interval 46 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Amet AS','B10279',1,'9957105',DATE_SUB(curdate(),interval 46 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Turpis AS','B10280',1,'8737419',DATE_SUB(curdate(),interval 9 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Nascetur AS','B10281',1,'1207266',DATE_SUB(curdate(),interval 95 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Id OÜ','B10282',1,'5466822',DATE_SUB(curdate(),interval 3 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Magna FIE','B10283',1,'3693692',DATE_SUB(curdate(),interval 94 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Purus FIE','B10284',1,'8152422',DATE_SUB(curdate(),interval 5 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Ipsum AS','B10285',1,'6009840',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Malesuada AS','B10286',1,'9057408',DATE_SUB(curdate(),interval 38 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin In FIE','B10287',1,'3314661',DATE_SUB(curdate(),interval 68 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Tortor OÜ','B10288',1,'4101070',DATE_SUB(curdate(),interval 24 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Sed FIE','B10289',1,'4807633',DATE_SUB(curdate(),interval 17 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Potenti Dictum AS','B10290',1,'8070268',DATE_SUB(curdate(),interval 69 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Dui FIE','B10291',1,'4183606',DATE_SUB(curdate(),interval 80 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Proin AS','B10292',1,'2819119',DATE_SUB(curdate(),interval 85 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Sociis OÜ','B10293',1,'5893909',DATE_SUB(curdate(),interval 72 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Nec OÜ','B10294',1,'7280734',DATE_SUB(curdate(),interval 70 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Et OÜ','B10295',1,'6036124',DATE_SUB(curdate(),interval 67 year));
21:04:16 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Ipsum OÜ','B10296',1,'9146853',DATE_SUB(curdate(),interval 14 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Tortor OÜ','B10297',1,'2015019',DATE_SUB(curdate(),interval 48 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Lobortis OÜ','B10298',1,'5334779',DATE_SUB(curdate(),interval 35 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Nibh FIE','B10299',1,'8051739',DATE_SUB(curdate(),interval 71 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Imperdiet AS','B10300',1,'9907787',DATE_SUB(curdate(),interval 67 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Ac FIE','B10301',1,'3911319',DATE_SUB(curdate(),interval 24 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Commodo OÜ','B10302',1,'2329588',DATE_SUB(curdate(),interval 97 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor A AS','B10303',1,'2076671',DATE_SUB(curdate(),interval 51 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Duis OÜ','B10304',1,'9992685',DATE_SUB(curdate(),interval 78 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Vulputate FIE','B10305',1,'8491470',DATE_SUB(curdate(),interval 6 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Risus AS','B10306',1,'7432814',DATE_SUB(curdate(),interval 35 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Magnis AS','B10307',1,'6540746',DATE_SUB(curdate(),interval 80 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At A FIE','B10308',1,'8970798',DATE_SUB(curdate(),interval 35 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Vitae FIE','B10309',1,'9280549',DATE_SUB(curdate(),interval 75 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At A AS','B10310',1,'9220893',DATE_SUB(curdate(),interval 49 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Sagittis FIE','B10311',1,'7765466',DATE_SUB(curdate(),interval 77 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ante AS','B10312',1,'8709931',DATE_SUB(curdate(),interval 12 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Eleifend OÜ','B10313',1,'5683993',DATE_SUB(curdate(),interval 17 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Condimentum OÜ','B10314',1,'3179822',DATE_SUB(curdate(),interval 69 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Ipsum AS','B10315',1,'5214023',DATE_SUB(curdate(),interval 99 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Morbi OÜ','B10316',1,'1931178',DATE_SUB(curdate(),interval 64 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Sapien OÜ','B10317',1,'7603394',DATE_SUB(curdate(),interval 67 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Varius AS','B10318',1,'5090494',DATE_SUB(curdate(),interval 42 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Elit FIE','B10319',1,'8023647',DATE_SUB(curdate(),interval 46 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Imperdiet AS','B10320',1,'5664406',DATE_SUB(curdate(),interval 41 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Id OÜ','B10321',1,'3434717',DATE_SUB(curdate(),interval 71 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Ultricies OÜ','B10322',1,'9509105',DATE_SUB(curdate(),interval 44 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Sapien OÜ','B10323',1,'6658102',DATE_SUB(curdate(),interval 65 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Mauris AS','B10324',1,'1811850',DATE_SUB(curdate(),interval 41 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Euismod Mattis OÜ','B10325',1,'6356457',DATE_SUB(curdate(),interval 6 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Dignissim AS','B10326',1,'1566660',DATE_SUB(curdate(),interval 26 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Consectetur OÜ','B10327',1,'1976043',DATE_SUB(curdate(),interval 28 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Mollis OÜ','B10328',1,'6763623',DATE_SUB(curdate(),interval 52 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Fermentum OÜ','B10329',1,'4730915',DATE_SUB(curdate(),interval 33 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Nisi AS','B10330',1,'3590271',DATE_SUB(curdate(),interval 52 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Non FIE','B10331',1,'1414383',DATE_SUB(curdate(),interval 51 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Commodo AS','B10332',1,'1819715',DATE_SUB(curdate(),interval 91 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Scelerisque FIE','B10333',1,'1024175',DATE_SUB(curdate(),interval 83 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 
 OÜ','B10334',1,'8497938',DATE_SUB(curdate(),interval 86 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Nulla OÜ','B10335',1,'4238139',DATE_SUB(curdate(),interval 31 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Massa FIE','B10336',1,'2624263',DATE_SUB(curdate(),interval 73 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Libero OÜ','B10337',1,'1644578',DATE_SUB(curdate(),interval 93 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Vel FIE','B10338',1,'4512527',DATE_SUB(curdate(),interval 2 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Nulla FIE','B10339',1,'6500277',DATE_SUB(curdate(),interval 90 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Accumsan AS','B10340',1,'9903923',DATE_SUB(curdate(),interval 66 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Sed OÜ','B10341',1,'5672406',DATE_SUB(curdate(),interval 27 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Tellus FIE','B10342',1,'6410011',DATE_SUB(curdate(),interval 59 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique 
 OÜ','B10343',1,'1755907',DATE_SUB(curdate(),interval 94 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Vestibulum FIE','B10344',1,'2549633',DATE_SUB(curdate(),interval 62 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Molestie OÜ','B10345',1,'6911305',DATE_SUB(curdate(),interval 47 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Placerat AS','B10346',1,'5653439',DATE_SUB(curdate(),interval 23 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Montes AS','B10347',1,'5471888',DATE_SUB(curdate(),interval 100 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Ipsum OÜ','B10348',1,'2225008',DATE_SUB(curdate(),interval 96 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Amet FIE','B10349',1,'5227279',DATE_SUB(curdate(),interval 67 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor 
 FIE','B10350',1,'6768483',DATE_SUB(curdate(),interval 4 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Massa FIE','B10351',1,'1231582',DATE_SUB(curdate(),interval 20 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Nisi OÜ','B10352',1,'6911550',DATE_SUB(curdate(),interval 96 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Odio OÜ','B10353',1,'8353727',DATE_SUB(curdate(),interval 10 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Dui OÜ','B10354',1,'8518907',DATE_SUB(curdate(),interval 37 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Nulla FIE','B10355',1,'3132896',DATE_SUB(curdate(),interval 30 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Lorem AS','B10356',1,'5614762',DATE_SUB(curdate(),interval 64 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Rhoncus AS','B10357',1,'1970129',DATE_SUB(curdate(),interval 5 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Parturient OÜ','B10358',1,'8507880',DATE_SUB(curdate(),interval 13 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Phasellus FIE','B10359',1,'8803493',DATE_SUB(curdate(),interval 32 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Ultricies OÜ','B10360',1,'3618234',DATE_SUB(curdate(),interval 13 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Fermentum FIE','B10361',1,'8991829',DATE_SUB(curdate(),interval 94 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Phasellus FIE','B10362',1,'4948803',DATE_SUB(curdate(),interval 1 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies At AS','B10363',1,'7944846',DATE_SUB(curdate(),interval 76 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Pellentesque AS','B10364',1,'6247729',DATE_SUB(curdate(),interval 100 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Elit OÜ','B10365',1,'1855135',DATE_SUB(curdate(),interval 89 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Luctus AS','B10366',1,'4491019',DATE_SUB(curdate(),interval 22 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Tempor FIE','B10367',1,'3483986',DATE_SUB(curdate(),interval 21 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Non FIE','B10368',1,'8255367',DATE_SUB(curdate(),interval 99 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Malesuada OÜ','B10369',1,'8036500',DATE_SUB(curdate(),interval 16 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada A AS','B10370',1,'6578926',DATE_SUB(curdate(),interval 46 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Maecenas OÜ','B10371',1,'8422920',DATE_SUB(curdate(),interval 7 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Ornare AS','B10372',1,'5965011',DATE_SUB(curdate(),interval 4 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lacinia OÜ','B10373',1,'2355782',DATE_SUB(curdate(),interval 14 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Consectetur FIE','B10374',1,'3593065',DATE_SUB(curdate(),interval 82 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Rhoncus AS','B10375',1,'3678591',DATE_SUB(curdate(),interval 81 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Ac FIE','B10376',1,'7268154',DATE_SUB(curdate(),interval 30 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Adipiscing AS','B10377',1,'6667646',DATE_SUB(curdate(),interval 85 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis  OÜ','B10378',1,'4320783',DATE_SUB(curdate(),interval 55 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Laoreet OÜ','B10379',1,'9062854',DATE_SUB(curdate(),interval 75 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Et FIE','B10380',1,'3139910',DATE_SUB(curdate(),interval 76 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Convallis FIE','B10381',1,'8145015',DATE_SUB(curdate(),interval 20 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nibh FIE','B10382',1,'3442260',DATE_SUB(curdate(),interval 87 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Magna FIE','B10383',1,'5339044',DATE_SUB(curdate(),interval 4 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Et AS','B10384',1,'2954107',DATE_SUB(curdate(),interval 21 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Lacinia FIE','B10385',1,'1124452',DATE_SUB(curdate(),interval 65 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Arcu AS','B10386',1,'3854770',DATE_SUB(curdate(),interval 81 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Risus FIE','B10387',1,'6848463',DATE_SUB(curdate(),interval 70 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Dui FIE','B10388',1,'8187091',DATE_SUB(curdate(),interval 51 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Vehicula FIE','B10389',1,'6428490',DATE_SUB(curdate(),interval 48 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Vitae AS','B10390',1,'1201487',DATE_SUB(curdate(),interval 54 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Euismod AS','B10391',1,'4104462',DATE_SUB(curdate(),interval 64 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Risus AS','B10392',1,'1505123',DATE_SUB(curdate(),interval 22 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Donec AS','B10393',1,'7472106',DATE_SUB(curdate(),interval 58 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Lectus FIE','B10394',1,'7048228',DATE_SUB(curdate(),interval 43 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius A OÜ','B10395',1,'3206465',DATE_SUB(curdate(),interval 100 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Malesuada AS','B10396',1,'2957914',DATE_SUB(curdate(),interval 24 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Lacinia FIE','B10397',1,'2452229',DATE_SUB(curdate(),interval 9 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Imperdiet FIE','B10398',1,'7320151',DATE_SUB(curdate(),interval 16 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Lorem AS','B10399',1,'4009438',DATE_SUB(curdate(),interval 43 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Sem AS','B10400',1,'5256657',DATE_SUB(curdate(),interval 82 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Suspendisse AS','B10401',1,'9195057',DATE_SUB(curdate(),interval 3 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Condimentum AS','B10402',1,'5815945',DATE_SUB(curdate(),interval 2 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Odio FIE','B10403',1,'4261432',DATE_SUB(curdate(),interval 56 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Sed OÜ','B10404',1,'8862718',DATE_SUB(curdate(),interval 56 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Lacus AS','B10405',1,'9195774',DATE_SUB(curdate(),interval 42 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Mattis OÜ','B10406',1,'7901307',DATE_SUB(curdate(),interval 4 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Massa FIE','B10407',1,'6419203',DATE_SUB(curdate(),interval 16 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Quam FIE','B10408',1,'2179030',DATE_SUB(curdate(),interval 35 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Lectus FIE','B10409',1,'7986943',DATE_SUB(curdate(),interval 100 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ornare FIE','B10410',1,'9822930',DATE_SUB(curdate(),interval 53 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Condimentum OÜ','B10411',1,'7226858',DATE_SUB(curdate(),interval 72 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Fringilla AS','B10412',1,'6492736',DATE_SUB(curdate(),interval 16 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi  OÜ','B10413',1,'2527341',DATE_SUB(curdate(),interval 60 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Venenatis OÜ','B10414',1,'6047720',DATE_SUB(curdate(),interval 17 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Varius FIE','B10415',1,'5622583',DATE_SUB(curdate(),interval 33 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Tempus FIE','B10416',1,'6854107',DATE_SUB(curdate(),interval 81 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Augue OÜ','B10417',1,'2150788',DATE_SUB(curdate(),interval 76 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nibh AS','B10418',1,'6564563',DATE_SUB(curdate(),interval 78 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Velit FIE','B10419',1,'7682022',DATE_SUB(curdate(),interval 12 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Ipsum AS','B10420',1,'8138975',DATE_SUB(curdate(),interval 89 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Eleifend OÜ','B10421',1,'2297910',DATE_SUB(curdate(),interval 7 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Aenean FIE','B10422',1,'7959795',DATE_SUB(curdate(),interval 59 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum At OÜ','B10423',1,'3871664',DATE_SUB(curdate(),interval 41 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna At OÜ','B10424',1,'6174839',DATE_SUB(curdate(),interval 27 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Id AS','B10425',1,'2225647',DATE_SUB(curdate(),interval 64 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Id FIE','B10426',1,'5537649',DATE_SUB(curdate(),interval 31 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Leo FIE','B10427',1,'3781461',DATE_SUB(curdate(),interval 99 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Diam FIE','B10428',1,'8485667',DATE_SUB(curdate(),interval 87 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Condimentum AS','B10429',1,'2617886',DATE_SUB(curdate(),interval 86 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Leo OÜ','B10430',1,'2343817',DATE_SUB(curdate(),interval 17 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Facilisis AS','B10431',1,'9923458',DATE_SUB(curdate(),interval 65 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Ipsum AS','B10432',1,'7097247',DATE_SUB(curdate(),interval 84 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Condimentum FIE','B10433',1,'3982872',DATE_SUB(curdate(),interval 85 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Velit FIE','B10434',1,'6362685',DATE_SUB(curdate(),interval 9 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Aliquam OÜ','B10435',1,'9666244',DATE_SUB(curdate(),interval 29 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Mauris FIE','B10436',1,'9965301',DATE_SUB(curdate(),interval 68 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Semper AS','B10437',1,'2227621',DATE_SUB(curdate(),interval 76 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Et AS','B10438',1,'9932773',DATE_SUB(curdate(),interval 52 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Sociis AS','B10439',1,'6449863',DATE_SUB(curdate(),interval 79 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Sollicitudin AS','B10440',1,'8608100',DATE_SUB(curdate(),interval 87 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis A FIE','B10441',1,'8098397',DATE_SUB(curdate(),interval 62 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Mattis AS','B10442',1,'2579579',DATE_SUB(curdate(),interval 27 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Id AS','B10443',1,'1151141',DATE_SUB(curdate(),interval 38 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Commodo AS','B10444',1,'9069527',DATE_SUB(curdate(),interval 85 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Accumsan AS','B10445',1,'8251637',DATE_SUB(curdate(),interval 43 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Vitae FIE','B10446',1,'2351949',DATE_SUB(curdate(),interval 56 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Convallis AS','B10447',1,'5986373',DATE_SUB(curdate(),interval 9 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Donec OÜ','B10448',1,'9774142',DATE_SUB(curdate(),interval 1 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Tempus AS','B10449',1,'7234998',DATE_SUB(curdate(),interval 82 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Ligula FIE','B10450',1,'8704395',DATE_SUB(curdate(),interval 39 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Odio AS','B10451',1,'8332689',DATE_SUB(curdate(),interval 41 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Sed AS','B10452',1,'4129853',DATE_SUB(curdate(),interval 5 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Sed OÜ','B10453',1,'8962872',DATE_SUB(curdate(),interval 47 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Lorem AS','B10454',1,'8456083',DATE_SUB(curdate(),interval 69 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Montes OÜ','B10455',1,'6134452',DATE_SUB(curdate(),interval 17 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget A FIE','B10456',1,'9814938',DATE_SUB(curdate(),interval 5 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo A OÜ','B10457',1,'3516354',DATE_SUB(curdate(),interval 30 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Donec AS','B10458',1,'2696068',DATE_SUB(curdate(),interval 27 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Sed AS','B10459',1,'6723792',DATE_SUB(curdate(),interval 75 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Eu OÜ','B10460',1,'9715370',DATE_SUB(curdate(),interval 92 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem At OÜ','B10461',1,'6724952',DATE_SUB(curdate(),interval 86 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis A AS','B10462',1,'3102652',DATE_SUB(curdate(),interval 93 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Ultricies OÜ','B10463',1,'8006849',DATE_SUB(curdate(),interval 58 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Commodo OÜ','B10464',1,'9445954',DATE_SUB(curdate(),interval 3 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit 
 FIE','B10465',1,'9696374',DATE_SUB(curdate(),interval 85 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Vitae FIE','B10466',1,'1967789',DATE_SUB(curdate(),interval 60 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh At FIE','B10467',1,'3310626',DATE_SUB(curdate(),interval 89 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Accumsan FIE','B10468',1,'8173103',DATE_SUB(curdate(),interval 5 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Sapien OÜ','B10469',1,'2600009',DATE_SUB(curdate(),interval 69 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Convallis OÜ','B10470',1,'4855522',DATE_SUB(curdate(),interval 84 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Nisi AS','B10471',1,'5295789',DATE_SUB(curdate(),interval 17 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Tortor FIE','B10472',1,'8547134',DATE_SUB(curdate(),interval 23 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Diam OÜ','B10473',1,'3493817',DATE_SUB(curdate(),interval 96 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Consectetur FIE','B10474',1,'2910635',DATE_SUB(curdate(),interval 82 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Imperdiet FIE','B10475',1,'2683055',DATE_SUB(curdate(),interval 15 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Nisl AS','B10476',1,'9645211',DATE_SUB(curdate(),interval 54 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Felis FIE','B10477',1,'9492402',DATE_SUB(curdate(),interval 1 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Leo AS','B10478',1,'7428908',DATE_SUB(curdate(),interval 68 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Quis OÜ','B10479',1,'8737242',DATE_SUB(curdate(),interval 39 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Dui OÜ','B10480',1,'2016201',DATE_SUB(curdate(),interval 45 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Fermentum OÜ','B10481',1,'9467900',DATE_SUB(curdate(),interval 13 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Aenean AS','B10482',1,'6623152',DATE_SUB(curdate(),interval 32 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Malesuada FIE','B10483',1,'5838944',DATE_SUB(curdate(),interval 46 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Est AS','B10484',1,'1135767',DATE_SUB(curdate(),interval 16 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Malesuada AS','B10485',1,'4276913',DATE_SUB(curdate(),interval 25 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Diam OÜ','B10486',1,'1587019',DATE_SUB(curdate(),interval 81 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Mattis FIE','B10487',1,'4190085',DATE_SUB(curdate(),interval 22 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Donec OÜ','B10488',1,'2289550',DATE_SUB(curdate(),interval 55 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Elit AS','B10489',1,'7848637',DATE_SUB(curdate(),interval 47 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Bibendum FIE','B10490',1,'8491645',DATE_SUB(curdate(),interval 65 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Hendrerit AS','B10491',1,'4344177',DATE_SUB(curdate(),interval 18 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Tincidunt FIE','B10492',1,'7938631',DATE_SUB(curdate(),interval 10 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Fermentum OÜ','B10493',1,'5059869',DATE_SUB(curdate(),interval 5 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Ultrices FIE','B10494',1,'2625619',DATE_SUB(curdate(),interval 49 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Amet OÜ','B10495',1,'6450771',DATE_SUB(curdate(),interval 85 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Blandit OÜ','B10496',1,'8398714',DATE_SUB(curdate(),interval 97 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Sed FIE','B10497',1,'2515430',DATE_SUB(curdate(),interval 29 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Cum AS','B10498',1,'8604188',DATE_SUB(curdate(),interval 22 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Condimentum FIE','B10499',1,'8227798',DATE_SUB(curdate(),interval 99 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Odio AS','B10500',1,'9759023',DATE_SUB(curdate(),interval 58 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Facilisis OÜ','B10501',1,'3206810',DATE_SUB(curdate(),interval 11 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Suscipit AS','B10502',1,'9894870',DATE_SUB(curdate(),interval 97 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Ut FIE','B10503',1,'1018235',DATE_SUB(curdate(),interval 28 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Malesuada FIE','B10504',1,'5415080',DATE_SUB(curdate(),interval 82 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Sapien OÜ','B10505',1,'9075813',DATE_SUB(curdate(),interval 72 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Volutpat AS','B10506',1,'7021575',DATE_SUB(curdate(),interval 86 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum A OÜ','B10507',1,'4327377',DATE_SUB(curdate(),interval 74 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus A FIE','B10508',1,'7617180',DATE_SUB(curdate(),interval 87 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Proin FIE','B10509',1,'7478102',DATE_SUB(curdate(),interval 96 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Volutpat FIE','B10510',1,'1116119',DATE_SUB(curdate(),interval 38 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Maecenas AS','B10511',1,'1745495',DATE_SUB(curdate(),interval 88 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Magna FIE','B10512',1,'2160389',DATE_SUB(curdate(),interval 8 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Euismod Nulla OÜ','B10513',1,'9913447',DATE_SUB(curdate(),interval 20 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Parturient AS','B10514',1,'2726364',DATE_SUB(curdate(),interval 21 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Quis AS','B10515',1,'9407394',DATE_SUB(curdate(),interval 75 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Nisi OÜ','B10516',1,'1367433',DATE_SUB(curdate(),interval 22 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Suscipit AS','B10517',1,'3779292',DATE_SUB(curdate(),interval 86 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Leo AS','B10518',1,'8557141',DATE_SUB(curdate(),interval 45 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Natoque AS','B10519',1,'9492336',DATE_SUB(curdate(),interval 45 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus Proin FIE','B10520',1,'6066763',DATE_SUB(curdate(),interval 45 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nunc OÜ','B10521',1,'3701916',DATE_SUB(curdate(),interval 45 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Magna OÜ','B10522',1,'8858843',DATE_SUB(curdate(),interval 46 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Praesent AS','B10523',1,'1622959',DATE_SUB(curdate(),interval 20 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Sem OÜ','B10524',1,'4326427',DATE_SUB(curdate(),interval 99 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Cursus OÜ','B10525',1,'3182869',DATE_SUB(curdate(),interval 68 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Scelerisque FIE','B10526',1,'8426668',DATE_SUB(curdate(),interval 28 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Tincidunt FIE','B10527',1,'8818640',DATE_SUB(curdate(),interval 26 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Imperdiet FIE','B10528',1,'9069082',DATE_SUB(curdate(),interval 98 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Eget FIE','B10529',1,'4377600',DATE_SUB(curdate(),interval 84 year));
21:04:17 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Magnis FIE','B10530',1,'6237109',DATE_SUB(curdate(),interval 84 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Non OÜ','B10531',1,'4728606',DATE_SUB(curdate(),interval 79 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Justo OÜ','B10532',1,'2678224',DATE_SUB(curdate(),interval 13 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Mollis AS','B10533',1,'6380140',DATE_SUB(curdate(),interval 44 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Leo OÜ','B10534',1,'1389756',DATE_SUB(curdate(),interval 74 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Ac OÜ','B10535',1,'4480714',DATE_SUB(curdate(),interval 56 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Est AS','B10536',1,'3916157',DATE_SUB(curdate(),interval 3 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Blandit OÜ','B10537',1,'4931472',DATE_SUB(curdate(),interval 71 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Ac AS','B10538',1,'8907981',DATE_SUB(curdate(),interval 88 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Volutpat OÜ','B10539',1,'3309705',DATE_SUB(curdate(),interval 27 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent In AS','B10540',1,'4893894',DATE_SUB(curdate(),interval 66 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Proin FIE','B10541',1,'4270206',DATE_SUB(curdate(),interval 34 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Fermentum FIE','B10542',1,'4891986',DATE_SUB(curdate(),interval 2 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Mi AS','B10543',1,'4643399',DATE_SUB(curdate(),interval 74 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Urna OÜ','B10544',1,'1407471',DATE_SUB(curdate(),interval 65 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies A AS','B10545',1,'7666834',DATE_SUB(curdate(),interval 46 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Lectus AS','B10546',1,'7491393',DATE_SUB(curdate(),interval 6 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Sit AS','B10547',1,'6272212',DATE_SUB(curdate(),interval 95 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Purus OÜ','B10548',1,'2319167',DATE_SUB(curdate(),interval 42 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Imperdiet FIE','B10549',1,'9980353',DATE_SUB(curdate(),interval 38 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Rhoncus AS','B10550',1,'8881840',DATE_SUB(curdate(),interval 7 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Vitae AS','B10551',1,'2142828',DATE_SUB(curdate(),interval 91 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Urna OÜ','B10552',1,'8268151',DATE_SUB(curdate(),interval 45 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Massa AS','B10553',1,'6544321',DATE_SUB(curdate(),interval 13 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Imperdiet AS','B10554',1,'6573781',DATE_SUB(curdate(),interval 11 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Ultricies AS','B10555',1,'3415571',DATE_SUB(curdate(),interval 29 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Scelerisque AS','B10556',1,'6540024',DATE_SUB(curdate(),interval 60 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Consectetur FIE','B10557',1,'6939571',DATE_SUB(curdate(),interval 54 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Malesuada AS','B10558',1,'2977579',DATE_SUB(curdate(),interval 19 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Accumsan FIE','B10559',1,'7780208',DATE_SUB(curdate(),interval 44 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Dui OÜ','B10560',1,'1018987',DATE_SUB(curdate(),interval 34 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui 
 OÜ','B10561',1,'6532130',DATE_SUB(curdate(),interval 82 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Amet OÜ','B10562',1,'3279482',DATE_SUB(curdate(),interval 70 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Lorem AS','B10563',1,'9184267',DATE_SUB(curdate(),interval 30 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Neque FIE','B10564',1,'9326530',DATE_SUB(curdate(),interval 81 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent At OÜ','B10565',1,'6707847',DATE_SUB(curdate(),interval 40 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Nunc AS','B10566',1,'5274481',DATE_SUB(curdate(),interval 51 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Lorem AS','B10567',1,'2012630',DATE_SUB(curdate(),interval 62 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Accumsan FIE','B10568',1,'4812113',DATE_SUB(curdate(),interval 30 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Praesent FIE','B10569',1,'5543230',DATE_SUB(curdate(),interval 47 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Vestibulum AS','B10570',1,'9417601',DATE_SUB(curdate(),interval 8 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Id FIE','B10571',1,'5515234',DATE_SUB(curdate(),interval 46 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Arcu FIE','B10572',1,'3347124',DATE_SUB(curdate(),interval 4 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Urna AS','B10573',1,'5943760',DATE_SUB(curdate(),interval 85 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Quis FIE','B10574',1,'4191686',DATE_SUB(curdate(),interval 86 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla 
 OÜ','B10575',1,'2215159',DATE_SUB(curdate(),interval 25 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Vitae OÜ','B10576',1,'9592491',DATE_SUB(curdate(),interval 31 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Tempus AS','B10577',1,'3031877',DATE_SUB(curdate(),interval 33 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Aenean FIE','B10578',1,'6114609',DATE_SUB(curdate(),interval 62 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Pellentesque OÜ','B10579',1,'9860233',DATE_SUB(curdate(),interval 60 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Nulla AS','B10580',1,'1811001',DATE_SUB(curdate(),interval 100 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Leo FIE','B10581',1,'3775815',DATE_SUB(curdate(),interval 42 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' A FIE','B10582',1,'4677639',DATE_SUB(curdate(),interval 15 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Convallis FIE','B10583',1,'3242953',DATE_SUB(curdate(),interval 12 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Et OÜ','B10584',1,'2858758',DATE_SUB(curdate(),interval 41 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Quisque OÜ','B10585',1,'5146426',DATE_SUB(curdate(),interval 13 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum In FIE','B10586',1,'1950371',DATE_SUB(curdate(),interval 75 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Ullamcorper AS','B10587',1,'5658376',DATE_SUB(curdate(),interval 30 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Id OÜ','B10588',1,'3216801',DATE_SUB(curdate(),interval 93 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Ornare FIE','B10589',1,'6769477',DATE_SUB(curdate(),interval 61 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Velit OÜ','B10590',1,'4986167',DATE_SUB(curdate(),interval 15 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Proin AS','B10591',1,'4023600',DATE_SUB(curdate(),interval 1 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Bibendum FIE','B10592',1,'2896564',DATE_SUB(curdate(),interval 51 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Ac OÜ','B10593',1,'5052787',DATE_SUB(curdate(),interval 50 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Risus AS','B10594',1,'3838798',DATE_SUB(curdate(),interval 14 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum A OÜ','B10595',1,'7903172',DATE_SUB(curdate(),interval 62 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Scelerisque OÜ','B10596',1,'6059407',DATE_SUB(curdate(),interval 16 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Scelerisque Praesent FIE','B10597',1,'1254456',DATE_SUB(curdate(),interval 77 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Penatibus AS','B10598',1,'4578769',DATE_SUB(curdate(),interval 68 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Hendrerit OÜ','B10599',1,'2741377',DATE_SUB(curdate(),interval 26 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Ipsum AS','B10600',1,'2572385',DATE_SUB(curdate(),interval 32 year));
21:04:18 (engine) [SQL]->Exec [Done]:1
21:04:18 (engine) [RESPONSE (Admin.CreateWorld)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  NULL
  ["total"]=>
  int(1)
}

21:04:20 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(48) "{\"action\":\"Admin.CreateTestData\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

21:04:20 (engine) [JSON (Admin.CreateTestData)]->int(1)

21:04:20 (engine) [SQL]->Creating test data
21:04:20 (engine) [SQL]->Connecting to database:
21:04:20 (engine) [SQL]->Connection OK!
21:04:20 (engine) test 
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1921','1921-04-26','1921-04-21','1921-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1922','1922-04-26','1922-04-21','1922-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1923','1923-04-26','1923-04-21','1923-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1924','1924-04-26','1924-04-21','1924-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1925','1925-04-26','1925-04-21','1925-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1926','1926-04-26','1926-04-21','1926-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1927','1927-04-26','1927-04-21','1927-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1928','1928-04-26','1928-04-21','1928-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1929','1929-04-26','1929-04-21','1929-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1930','1930-04-26','1930-04-21','1930-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1931','1931-04-26','1931-04-21','1931-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1932','1932-04-26','1932-04-21','1932-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1933','1933-04-26','1933-04-21','1933-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1934','1934-04-26','1934-04-21','1934-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1935','1935-04-26','1935-04-21','1935-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1936','1936-04-26','1936-04-21','1936-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1937','1937-04-26','1937-04-21','1937-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1938','1938-04-26','1938-04-21','1938-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1939','1939-04-26','1939-04-21','1939-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1940','1940-04-26','1940-04-21','1940-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1941','1941-04-26','1941-04-21','1941-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1942','1942-04-26','1942-04-21','1942-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1943','1943-04-26','1943-04-21','1943-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1944','1944-04-26','1944-04-21','1944-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1945','1945-04-26','1945-04-21','1945-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1946','1946-04-26','1946-04-21','1946-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1947','1947-04-26','1947-04-21','1947-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1948','1948-04-26','1948-04-21','1948-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1949','1949-04-26','1949-04-21','1949-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1950','1950-04-26','1950-04-21','1950-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1951','1951-04-26','1951-04-21','1951-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1952','1952-04-26','1952-04-21','1952-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1953','1953-04-26','1953-04-21','1953-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1954','1954-04-26','1954-04-21','1954-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1955','1955-04-26','1955-04-21','1955-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1956','1956-04-26','1956-04-21','1956-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1957','1957-04-26','1957-04-21','1957-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1958','1958-04-26','1958-04-21','1958-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1959','1959-04-26','1959-04-21','1959-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1960','1960-04-26','1960-04-21','1960-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1961','1961-04-26','1961-04-21','1961-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1962','1962-04-26','1962-04-21','1962-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1963','1963-04-26','1963-04-21','1963-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1964','1964-04-26','1964-04-21','1964-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1965','1965-04-26','1965-04-21','1965-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1966','1966-04-26','1966-04-21','1966-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1967','1967-04-26','1967-04-21','1967-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1968','1968-04-26','1968-04-21','1968-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1969','1969-04-26','1969-04-21','1969-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1970','1970-04-26','1970-04-21','1970-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1971','1971-04-26','1971-04-21','1971-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1972','1972-04-26','1972-04-21','1972-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1973','1973-04-26','1973-04-21','1973-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1974','1974-04-26','1974-04-21','1974-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1975','1975-04-26','1975-04-21','1975-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1976','1976-04-26','1976-04-21','1976-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1977','1977-04-26','1977-04-21','1977-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1978','1978-04-26','1978-04-21','1978-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1979','1979-04-26','1979-04-21','1979-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1980','1980-04-26','1980-04-21','1980-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1981','1981-04-26','1981-04-21','1981-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1982','1982-04-26','1982-04-21','1982-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1983','1983-04-26','1983-04-21','1983-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1984','1984-04-26','1984-04-21','1984-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1985','1985-04-26','1985-04-21','1985-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1986','1986-04-26','1986-04-21','1986-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1987','1987-04-26','1987-04-21','1987-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1988','1988-04-26','1988-04-21','1988-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1989','1989-04-26','1989-04-21','1989-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1990','1990-04-26','1990-04-21','1990-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1991','1991-04-26','1991-04-21','1991-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1992','1992-04-26','1992-04-21','1992-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1993','1993-04-26','1993-04-21','1993-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1994','1994-04-26','1994-04-21','1994-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1995','1995-04-26','1995-04-21','1995-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1996','1996-04-26','1996-04-21','1996-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1997','1997-04-26','1997-04-21','1997-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1998','1998-04-26','1998-04-21','1998-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1999','1999-04-26','1999-04-21','1999-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2000','2000-04-26','2000-04-21','2000-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2001','2001-04-26','2001-04-21','2001-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2002','2002-04-26','2002-04-21','2002-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2003','2003-04-26','2003-04-21','2003-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2004','2004-04-26','2004-04-21','2004-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2005','2005-04-26','2005-04-21','2005-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2006','2006-04-26','2006-04-21','2006-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2007','2007-04-26','2007-04-21','2007-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2008','2008-04-26','2008-04-21','2008-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2009','2009-04-26','2009-04-21','2009-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2010','2010-04-26','2010-04-21','2010-02-21','3');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2011','2011-04-26','2011-04-21','2011-02-21','1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2012','2012-04-26','2012-04-21','2012-02-21','2');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,1,'2011-01-21');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,2,'2011-01-21');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,3,'2011-01-21');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,4,'2011-01-21');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (92,4,'2012-01-21');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES  (NULL, 'Free Stuff 1', '800000', '15000', '1', NULL, '5', '5', '0');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Stuff 2', '400000', '15000', '1', NULL, '15', '15', '0');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Stuff 3', '600000', '15000', '1', NULL, '2', '3', '1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 1', '1400000', '15000', '2', NULL, '5', '5', '0');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 2', '1200000', '15000', '2', NULL, '15', '15', '0');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 3', '700000', '15000', '2', NULL, '2', '3', '1');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Moonwalk 1', '800000', '15000', '5', NULL, '5', '5', '0');
21:04:20 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 2', '500000', '15000', '5', '5', '15', '15', '0');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Nothing', '10000', '1500000', '5', NULL, '1', '1', '1');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '1', '10', '12', '0', '2012-05-03');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '2', '10', '1', '0', '2012-05-03');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '3', '10', '4', '0', '2012-05-03');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '4', '10', '11', '0', '2012-06-03');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '5', '10', '7', '0', '2012-02-02');
21:04:21 (engine) [SQL]->Exec [Done]:1
21:04:21 (engine) [RESPONSE (Admin.CreateTestData)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

21:04:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

21:04:27 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

21:04:27 (engine) [SQL]->Connecting to database:
21:04:27 (engine) [SQL]->Connection OK!
21:04:27 (engine) test 
21:04:27 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
21:04:27 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:27 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

21:04:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:04:27 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:04:27 (engine) [SQL]->Connecting to database:
21:04:27 (engine) [SQL]->Connection OK!
21:04:27 (engine) test 
21:04:27 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:04:27 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:27 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:04:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

21:04:27 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:04:27 (engine) [SQL]->Connecting to database:
21:04:27 (engine) [SQL]->Connection OK!
21:04:27 (engine) test 
21:04:27 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
21:04:27 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:27 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "2"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

21:04:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:04:29 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:04:29 (engine) [SQL]->Connecting to database:
21:04:29 (engine) [SQL]->Connection OK!
21:04:29 (engine) test 
21:04:29 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:04:29 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:29 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:04:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

21:04:30 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:04:30 (engine) [SQL]->Connecting to database:
21:04:30 (engine) [SQL]->Connection OK!
21:04:30 (engine) test 
21:04:30 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 92

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
21:04:30 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:30 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(1)
}

21:04:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:04:34 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:04:34 (engine) [SQL]->Connecting to database:
21:04:34 (engine) [SQL]->Connection OK!
21:04:34 (engine) test 
21:04:34 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:04:34 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:34 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:04:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

21:04:34 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:04:34 (engine) [SQL]->Connecting to database:
21:04:34 (engine) [SQL]->Connection OK!
21:04:34 (engine) test 
21:04:34 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 91
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 91
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
21:04:34 (engine) [SQL]->Exec [Done]:Resource id #16
21:04:34 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(6) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "1"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "1"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "1"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "1"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "1"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "6"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 3"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:05:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

21:05:54 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

21:05:54 (engine) [SQL]->Connecting to database:
21:05:54 (engine) [SQL]->Connection OK!
21:05:54 (engine) test 
21:05:54 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
21:05:54 (engine) [SQL]->Exec [Done]:Resource id #16
21:05:54 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

21:05:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:05:55 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:05:55 (engine) [SQL]->Connecting to database:
21:05:55 (engine) [SQL]->Connection OK!
21:05:55 (engine) test 
21:05:55 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:05:55 (engine) [SQL]->Exec [Done]:Resource id #16
21:05:55 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:05:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

21:05:55 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:05:55 (engine) [SQL]->Connecting to database:
21:05:55 (engine) [SQL]->Connection OK!
21:05:55 (engine) test 
21:05:55 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
21:05:55 (engine) [SQL]->Exec [Done]:Resource id #16
21:05:55 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "2"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

21:06:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

21:06:12 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

21:06:12 (engine) [SQL]->Connecting to database:
21:06:12 (engine) [SQL]->Connection OK!
21:06:12 (engine) test 
21:06:12 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
21:06:12 (engine) [SQL]->Exec [Done]:Resource id #16
21:06:12 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

21:06:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:06:13 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:06:13 (engine) [SQL]->Connecting to database:
21:06:13 (engine) [SQL]->Connection OK!
21:06:13 (engine) test 
21:06:13 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:06:13 (engine) [SQL]->Exec [Done]:Resource id #16
21:06:13 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:06:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

21:06:13 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:06:13 (engine) [SQL]->Connecting to database:
21:06:13 (engine) [SQL]->Connection OK!
21:06:13 (engine) test 
21:06:13 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
21:06:13 (engine) [SQL]->Exec [Done]:Resource id #16
21:06:13 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

21:06:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

21:06:14 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

21:06:14 (engine) [SQL]->Connecting to database:
21:06:14 (engine) [SQL]->Connection OK!
21:06:14 (engine) test 
21:06:14 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
21:06:14 (engine) [SQL]->Exec [Done]:Resource id #16
21:06:14 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

21:06:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

21:06:14 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

21:06:14 (engine) [SQL]->Connecting to database:
21:06:14 (engine) [SQL]->Connection OK!
21:06:14 (engine) test 
21:06:14 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
21:06:14 (engine) [SQL]->Exec [Done]:Resource id #16
21:06:14 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

21:06:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

21:06:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 1
21:06:23 (engine) [SQL]->Connecting to database:
21:06:23 (engine) [SQL]->Connection OK!
21:06:23 (engine) test 
21:06:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
21:06:23 (engine) [SQL]->Exec [Done]:Resource id #17
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 1146.66666667
21:06:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(1146.66666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

21:06:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

21:06:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 2
21:06:23 (engine) [SQL]->Connecting to database:
21:06:23 (engine) [SQL]->Connection OK!
21:06:23 (engine) test 
21:06:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
21:06:23 (engine) [SQL]->Exec [Done]:Resource id #17
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
21:06:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 573.333333333
21:06:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(573.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

21:06:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

21:06:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

21:06:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 3
21:06:24 (engine) [SQL]->Connecting to database:
21:06:24 (engine) [SQL]->Connection OK!
21:06:24 (engine) test 
21:06:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
21:06:24 (engine) [SQL]->Exec [Done]:Resource id #17
21:06:24 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 860
21:06:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(860)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

21:06:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

21:06:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving program details. ID = 4
21:06:25 (engine) [SQL]->Connecting to database:
21:06:25 (engine) [SQL]->Connection OK!
21:06:25 (engine) test 
21:06:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
21:06:25 (engine) [SQL]->Exec [Done]:Resource id #17
21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - Retrieving last year program details. ID = 
21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
21:06:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 2006.66666667
21:06:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(2006.66666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:26:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:26:45 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:26:45 (engine) [SQL]->Connecting to database:
22:26:45 (engine) [SQL]->Connection OK!
22:26:45 (engine) test 
22:26:45 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:26:45 (engine) [SQL]->Exec [Done]:Resource id #16
22:26:45 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:26:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:26:45 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:26:45 (engine) [SQL]->Connecting to database:
22:26:45 (engine) [SQL]->Connection OK!
22:26:45 (engine) test 
22:26:45 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:26:45 (engine) [SQL]->Exec [Done]:Resource id #16
22:26:45 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:26:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:26:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:26:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:26:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:26:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:26:48 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:28:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:28:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:28:22 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:28:22 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:29:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:29:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:29:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:29:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:29:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:29:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:30:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:30:56 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:30:56 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:30:56 (engine) [SQL]->Connecting to database:
22:30:56 (engine) [SQL]->Connection OK!
22:30:56 (engine) test 
22:30:56 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:30:56 (engine) [SQL]->Exec [Done]:Resource id #17
22:30:56 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:30:56 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:30:56 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:30:56 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:30:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:30:56 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:30:56 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:30:56 (engine) [SQL]->Connecting to database:
22:30:56 (engine) [SQL]->Connection OK!
22:30:56 (engine) test 
22:30:56 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:30:56 (engine) [SQL]->Exec [Done]:Resource id #17
22:30:56 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:30:56 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:30:56 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:30:56 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:30:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:30:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:30:57 (engine) [SQL]->Connecting to database:
22:30:57 (engine) [SQL]->Connection OK!
22:30:57 (engine) test 
22:30:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:30:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:30:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:30:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:30:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:30:57 (engine) [SQL]->Connecting to database:
22:30:57 (engine) [SQL]->Connection OK!
22:30:57 (engine) test 
22:30:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:30:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:30:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:30:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

22:30:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
22:30:57 (engine) [SQL]->Connecting to database:
22:30:57 (engine) [SQL]->Connection OK!
22:30:57 (engine) test 
22:30:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
22:30:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:30:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
22:30:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Rate = 200
22:30:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(200)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:31:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:31:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:31:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:31:59 (engine) [SQL]->Connecting to database:
22:31:59 (engine) [SQL]->Connection OK!
22:31:59 (engine) test 
22:31:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:31:59 (engine) [SQL]->Exec [Done]:Resource id #17
22:31:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:31:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:31:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:31:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:32:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:32:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:32:00 (engine) [SQL]->Connecting to database:
22:32:00 (engine) [SQL]->Connection OK!
22:32:00 (engine) test 
22:32:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:32:00 (engine) [SQL]->Exec [Done]:Resource id #17
22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:32:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:32:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:32:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:32:00 (engine) [SQL]->Connecting to database:
22:32:00 (engine) [SQL]->Connection OK!
22:32:00 (engine) test 
22:32:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:32:00 (engine) [SQL]->Exec [Done]:Resource id #17
22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:32:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:32:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:32:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:32:00 (engine) [SQL]->Connecting to database:
22:32:00 (engine) [SQL]->Connection OK!
22:32:00 (engine) test 
22:32:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:32:00 (engine) [SQL]->Exec [Done]:Resource id #17
22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:32:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:32:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

22:32:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
22:32:00 (engine) [SQL]->Connecting to database:
22:32:00 (engine) [SQL]->Connection OK!
22:32:00 (engine) test 
22:32:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
22:32:00 (engine) [SQL]->Exec [Done]:Resource id #17
22:32:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
22:32:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Rate = 200
22:32:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(200)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:40:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

22:40:45 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

22:40:45 (engine) [SQL]->Connecting to database:
22:40:45 (engine) [SQL]->Connection OK!
22:40:45 (engine) test 
22:40:45 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
22:40:45 (engine) [SQL]->Exec [Done]:Resource id #16
22:40:45 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

22:40:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:40:46 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:40:46 (engine) [SQL]->Connecting to database:
22:40:46 (engine) [SQL]->Connection OK!
22:40:46 (engine) test 
22:40:46 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:40:46 (engine) [SQL]->Exec [Done]:Resource id #16
22:40:46 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:40:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

22:40:46 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:40:46 (engine) [SQL]->Connecting to database:
22:40:46 (engine) [SQL]->Connection OK!
22:40:46 (engine) test 
22:40:46 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
22:40:46 (engine) [SQL]->Exec [Done]:Resource id #16
22:40:46 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

22:40:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:40:48 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:40:48 (engine) [SQL]->Connecting to database:
22:40:48 (engine) [SQL]->Connection OK!
22:40:48 (engine) test 
22:40:48 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:40:48 (engine) [SQL]->Exec [Done]:Resource id #16
22:40:48 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(6) "109605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:40:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:40:48 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:40:48 (engine) [SQL]->Connecting to database:
22:40:48 (engine) [SQL]->Connection OK!
22:40:48 (engine) test 
22:40:48 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:40:48 (engine) [SQL]->Exec [Done]:Resource id #16
22:40:48 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:40:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:40:50 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:40:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:40:50 (engine) [SQL]->Connecting to database:
22:40:50 (engine) [SQL]->Connection OK!
22:40:50 (engine) test 
22:40:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:40:50 (engine) [SQL]->Exec [Done]:Resource id #17
22:40:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:40:50 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:40:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:40:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:40:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:40:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:40:51 (engine) [SQL]->Connecting to database:
22:40:51 (engine) [SQL]->Connection OK!
22:40:51 (engine) test 
22:40:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:40:51 (engine) [SQL]->Exec [Done]:Resource id #17
22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:40:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:40:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:40:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:40:51 (engine) [SQL]->Connecting to database:
22:40:51 (engine) [SQL]->Connection OK!
22:40:51 (engine) test 
22:40:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:40:51 (engine) [SQL]->Exec [Done]:Resource id #17
22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:40:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:40:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:40:51 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:40:51 (engine) [SQL]->Connecting to database:
22:40:51 (engine) [SQL]->Connection OK!
22:40:51 (engine) test 
22:40:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:40:51 (engine) [SQL]->Exec [Done]:Resource id #17
22:40:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:40:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:40:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:43:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:43:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:43:30 (engine) [SQL]->Connecting to database:
22:43:30 (engine) [SQL]->Connection OK!
22:43:30 (engine) test 
22:43:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:43:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:30 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:43:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:43:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:43:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:43:31 (engine) [SQL]->Connecting to database:
22:43:31 (engine) [SQL]->Connection OK!
22:43:31 (engine) test 
22:43:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:43:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:43:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:43:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:43:31 (engine) [SQL]->Connecting to database:
22:43:31 (engine) [SQL]->Connection OK!
22:43:31 (engine) test 
22:43:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:43:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:43:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:43:31 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:43:31 (engine) [SQL]->Connecting to database:
22:43:31 (engine) [SQL]->Connection OK!
22:43:31 (engine) test 
22:43:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:43:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:43:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:43:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

22:43:49 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

22:43:49 (engine) [SQL]->Connecting to database:
22:43:49 (engine) [SQL]->Connection OK!
22:43:49 (engine) test 
22:43:49 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
22:43:49 (engine) [SQL]->Exec [Done]:Resource id #16
22:43:49 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

22:43:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:43:49 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:43:49 (engine) [SQL]->Connecting to database:
22:43:49 (engine) [SQL]->Connection OK!
22:43:49 (engine) test 
22:43:49 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:43:49 (engine) [SQL]->Exec [Done]:Resource id #16
22:43:49 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:43:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

22:43:49 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:43:49 (engine) [SQL]->Connecting to database:
22:43:49 (engine) [SQL]->Connection OK!
22:43:49 (engine) test 
22:43:49 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
22:43:49 (engine) [SQL]->Exec [Done]:Resource id #16
22:43:49 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

22:43:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:43:51 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:43:51 (engine) [SQL]->Connecting to database:
22:43:51 (engine) [SQL]->Connection OK!
22:43:51 (engine) test 
22:43:51 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:43:51 (engine) [SQL]->Exec [Done]:Resource id #16
22:43:51 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:43:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:43:52 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:43:52 (engine) [SQL]->Connecting to database:
22:43:52 (engine) [SQL]->Connection OK!
22:43:52 (engine) test 
22:43:52 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:43:52 (engine) [SQL]->Exec [Done]:Resource id #16
22:43:52 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:43:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:43:55 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:43:55 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:43:55 (engine) [SQL]->Connecting to database:
22:43:55 (engine) [SQL]->Connection OK!
22:43:55 (engine) test 
22:43:55 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:43:55 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:55 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:55 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:43:55 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:43:55 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:43:56 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:43:56 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:43:56 (engine) [SQL]->Connecting to database:
22:43:56 (engine) [SQL]->Connection OK!
22:43:56 (engine) test 
22:43:56 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:43:56 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:56 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:56 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:43:56 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:43:56 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:43:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:43:57 (engine) [SQL]->Connecting to database:
22:43:57 (engine) [SQL]->Connection OK!
22:43:57 (engine) test 
22:43:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:43:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:43:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:43:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:43:57 (engine) [SQL]->Connecting to database:
22:43:57 (engine) [SQL]->Connection OK!
22:43:57 (engine) test 
22:43:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:43:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:43:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":27.53333333350001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:43:57 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(27.5333333335)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:43:57 (engine) [SQL]->Connecting to database:
22:43:57 (engine) [SQL]->Connection OK!
22:43:57 (engine) test 
22:43:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:43:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:57 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 27.5333333335 ID = 4
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:43:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    NULL
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

22:43:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
22:43:57 (engine) [SQL]->Connecting to database:
22:43:57 (engine) [SQL]->Connection OK!
22:43:57 (engine) test 
22:43:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
22:43:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
22:43:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Rate = 200
22:43:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(200)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:43:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":44.20000000000002,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

22:43:58 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(44.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

22:43:58 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
22:43:58 (engine) [SQL]->Connecting to database:
22:43:58 (engine) [SQL]->Connection OK!
22:43:58 (engine) test 
22:43:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
22:43:58 (engine) [SQL]->Exec [Done]:Resource id #17
22:43:58 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:43:58 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 44.2 ID = 5
22:43:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
22:43:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    NULL
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:46:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:46:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:46:53 (engine) [SQL]->Connecting to database:
22:46:53 (engine) [SQL]->Connection OK!
22:46:53 (engine) test 
22:46:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:46:53 (engine) [SQL]->Exec [Done]:Resource id #16
22:46:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:46:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:46:54 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:46:54 (engine) [SQL]->Connecting to database:
22:46:54 (engine) [SQL]->Connection OK!
22:46:54 (engine) test 
22:46:54 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:46:54 (engine) [SQL]->Exec [Done]:Resource id #16
22:46:54 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:46:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:46:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:46:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:46:59 (engine) [SQL]->Connecting to database:
22:46:59 (engine) [SQL]->Connection OK!
22:46:59 (engine) test 
22:46:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:46:59 (engine) [SQL]->Exec [Done]:Resource id #17
22:46:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:46:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:46:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:46:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:47:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:47:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:47:00 (engine) [SQL]->Connecting to database:
22:47:00 (engine) [SQL]->Connection OK!
22:47:00 (engine) test 
22:47:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:47:00 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:47:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:47:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":27.53333333350001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(27.5333333335)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 27.5333333335 ID = 4
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(188.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":49.81666666650001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(49.8166666665)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 49.8166666665 ID = 4
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.908333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":44.245833333500016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(44.2458333335)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 44.2458333335 ID = 4
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.122916667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.63854166650002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.6385416665)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:01 (engine) [SQL]->Connecting to database:
22:47:01 (engine) [SQL]->Connection OK!
22:47:01 (engine) test 
22:47:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:01 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.6385416665 ID = 4
22:47:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.819270833)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.29036458350002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.2903645835)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:02 (engine) [SQL]->Connecting to database:
22:47:02 (engine) [SQL]->Connection OK!
22:47:02 (engine) test 
22:47:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:02 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.2903645835 ID = 4
22:47:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.645182292)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.37740885400002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.377408854)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:02 (engine) [SQL]->Connecting to database:
22:47:02 (engine) [SQL]->Connection OK!
22:47:02 (engine) test 
22:47:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:02 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.377408854 ID = 4
22:47:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.688704427)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.355647786500015,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3556477865)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:02 (engine) [SQL]->Connecting to database:
22:47:02 (engine) [SQL]->Connection OK!
22:47:02 (engine) test 
22:47:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:02 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3556477865 ID = 4
22:47:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.677823893)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.36108805350001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3610880535)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:02 (engine) [SQL]->Connecting to database:
22:47:02 (engine) [SQL]->Connection OK!
22:47:03 (engine) test 
22:47:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:03 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3610880535 ID = 4
22:47:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680544027)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35972798650002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3597279865)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:03 (engine) [SQL]->Connecting to database:
22:47:03 (engine) [SQL]->Connection OK!
22:47:03 (engine) test 
22:47:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:03 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3597279865 ID = 4
22:47:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.679863993)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.36006800350002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3600680035)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:03 (engine) [SQL]->Connecting to database:
22:47:03 (engine) [SQL]->Connection OK!
22:47:03 (engine) test 
22:47:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:03 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3600680035 ID = 4
22:47:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680034002)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35998299900001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.359982999)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.359982999 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.679991499)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.36000425050001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3600042505)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3600042505 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680002125)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35999893750002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3599989375)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3599989375 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.679999469)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.36000026550002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3600002655)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3600002655 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680000133)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35999993350002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3599999335)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3599999335 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.679999967)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000016500024,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3600000165)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:04 (engine) [SQL]->Connecting to database:
22:47:04 (engine) [SQL]->Connection OK!
22:47:04 (engine) test 
22:47:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:04 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3600000165 ID = 4
22:47:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680000008)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35999999600001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.359999996)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.359999996 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.679999998)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.36000000100002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.360000001)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.360000001 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.680000001)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35999999950002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3599999995)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3599999995 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:05 (engine) [SQL]->Connecting to database:
22:47:05 (engine) [SQL]->Connection OK!
22:47:05 (engine) test 
22:47:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:05 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:06 (engine) [SQL]->Connecting to database:
22:47:06 (engine) [SQL]->Connection OK!
22:47:06 (engine) test 
22:47:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:06 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:07 (engine) [SQL]->Connecting to database:
22:47:07 (engine) [SQL]->Connection OK!
22:47:07 (engine) test 
22:47:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:07 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:08 (engine) [SQL]->Connecting to database:
22:47:08 (engine) [SQL]->Connection OK!
22:47:08 (engine) test 
22:47:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:08 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:09 (engine) [SQL]->Connecting to database:
22:47:09 (engine) [SQL]->Connection OK!
22:47:09 (engine) test 
22:47:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:09 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:09 (engine) [SQL]->Connecting to database:
22:47:09 (engine) [SQL]->Connection OK!
22:47:09 (engine) test 
22:47:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:09 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:09 (engine) [SQL]->Connecting to database:
22:47:09 (engine) [SQL]->Connection OK!
22:47:09 (engine) test 
22:47:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:09 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:09 (engine) [SQL]->Connecting to database:
22:47:09 (engine) [SQL]->Connection OK!
22:47:09 (engine) test 
22:47:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:09 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:47:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.360000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:47:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:47:09 (engine) [SQL]->Connecting to database:
22:47:09 (engine) [SQL]->Connection OK!
22:47:09 (engine) test 
22:47:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:47:09 (engine) [SQL]->Exec [Done]:Resource id #17
22:47:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:47:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.36 ID = 4
22:47:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:47:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

22:51:11 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

22:51:11 (engine) [SQL]->Connecting to database:
22:51:11 (engine) [SQL]->Connection OK!
22:51:11 (engine) test 
22:51:11 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
22:51:11 (engine) [SQL]->Exec [Done]:Resource id #16
22:51:11 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

22:51:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:51:11 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:51:11 (engine) [SQL]->Connecting to database:
22:51:11 (engine) [SQL]->Connection OK!
22:51:11 (engine) test 
22:51:11 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:51:11 (engine) [SQL]->Exec [Done]:Resource id #16
22:51:11 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:51:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

22:51:11 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:51:11 (engine) [SQL]->Connecting to database:
22:51:11 (engine) [SQL]->Connection OK!
22:51:11 (engine) test 
22:51:11 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
22:51:11 (engine) [SQL]->Exec [Done]:Resource id #16
22:51:11 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

22:51:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:51:13 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:51:13 (engine) [SQL]->Connecting to database:
22:51:13 (engine) [SQL]->Connection OK!
22:51:13 (engine) test 
22:51:13 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:51:13 (engine) [SQL]->Exec [Done]:Resource id #16
22:51:13 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:51:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:51:13 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:51:13 (engine) [SQL]->Connecting to database:
22:51:13 (engine) [SQL]->Connection OK!
22:51:13 (engine) test 
22:51:13 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:51:13 (engine) [SQL]->Exec [Done]:Resource id #16
22:51:13 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:51:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:51:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:51:23 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:51:23 (engine) [SQL]->Connecting to database:
22:51:23 (engine) [SQL]->Connection OK!
22:51:23 (engine) test 
22:51:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:51:23 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:23 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:51:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:51:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:23 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:51:23 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:51:23 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:51:23 (engine) [SQL]->Connecting to database:
22:51:23 (engine) [SQL]->Connection OK!
22:51:23 (engine) test 
22:51:23 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:51:23 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:23 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:23 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:51:23 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:51:23 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:51:24 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:51:24 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:51:24 (engine) [SQL]->Connecting to database:
22:51:24 (engine) [SQL]->Connection OK!
22:51:24 (engine) test 
22:51:24 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:51:24 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:24 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:24 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:51:24 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:51:24 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:51:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":27.53333333350001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(27.5333333335)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:25 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 27.5333333335 ID = 4
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(188.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":45.35999999980001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(45.3599999998)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:25 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 45.3599999998 ID = 4
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":34.664000000000016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(34.664)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:25 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 34.664 ID = 4
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(192.332)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":33.59440000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(33.5944)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:25 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 33.5944 ID = 4
22:51:25 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:25 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.7972)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":29.262520000000023,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:25 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(29.26252)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:25 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:25 (engine) [SQL]->Connecting to database:
22:51:25 (engine) [SQL]->Connection OK!
22:51:25 (engine) test 
22:51:25 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:25 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 29.26252 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(189.63126)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":26.668740000000035,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(26.66874)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 26.66874 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(188.33437)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":23.552193000000024,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(23.552193)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 23.552193 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(186.7760965)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":21.00868420000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(21.0086842)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 21.0086842 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(185.5043421)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":18.404355270000025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(18.40435527)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 18.40435527 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(184.202177635)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":16.096951311000026,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(16.096951311)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 16.096951311 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(183.048475655)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:26 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":13.82728651750002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:26 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(13.8272865175)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:26 (engine) [SQL]->Connecting to database:
22:51:26 (engine) [SQL]->Connection OK!
22:51:26 (engine) test 
22:51:26 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:26 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:26 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:26 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 13.8272865175 ID = 4
22:51:26 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:26 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(181.913643259)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":11.75817078560003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(11.7581707856)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 11.7581707856 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(180.879085393)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(146) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":9.74555483190003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(9.7455548319)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 9.7455548319 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(179.872777416)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":7.8890006512000355,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(7.8890006512)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 7.8890006512 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(178.944500326)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":6.085449380600025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(6.0854493806)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 6.0854493806 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(178.04272469)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":4.414550620000028,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(4.41455062)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 4.41455062 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.20727531)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:27 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":2.7847218490000216,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:27 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(2.784721849)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:27 (engine) [SQL]->Connecting to database:
22:51:27 (engine) [SQL]->Connection OK!
22:51:27 (engine) test 
22:51:27 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:27 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:27 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:27 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 2.784721849 ID = 4
22:51:27 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:27 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(176.392360924)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":1.2768059672000192,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(1.2768059672)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 1.2768059672 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(175.638402984)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(150) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-0.20832686319999993,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-0.2083268632)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -0.2083268632 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(174.895836568)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-1.5700077631999534,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-1.5700077632)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -1.5700077632 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(174.214996118)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-2.9374902949999466,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-2.937490295)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -2.937490295 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.531254853)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-4.161262617799991,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-4.1612626178)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -4.1612626178 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(172.919368691)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-5.442295465699942,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-5.4422954657)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:28 (engine) [SQL]->Connecting to database:
22:51:28 (engine) [SQL]->Connection OK!
22:51:28 (engine) test 
22:51:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:28 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -5.4422954657 ID = 4
22:51:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(172.278852267)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-6.520786347599952,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:29 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-6.5207863476)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:29 (engine) [SQL]->Connecting to database:
22:51:29 (engine) [SQL]->Connection OK!
22:51:29 (engine) test 
22:51:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:29 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:29 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -6.5207863476 ID = 4
22:51:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(171.739606826)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-7.764859795399971,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:29 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-7.7648597954)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:29 (engine) [SQL]->Connecting to database:
22:51:29 (engine) [SQL]->Connection OK!
22:51:29 (engine) test 
22:51:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:29 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:29 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -7.7648597954 ID = 4
22:51:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(171.117570102)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-8.652710305999989,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:29 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-8.652710306)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:29 (engine) [SQL]->Connecting to database:
22:51:29 (engine) [SQL]->Connection OK!
22:51:29 (engine) test 
22:51:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:29 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:29 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -8.652710306 ID = 4
22:51:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(170.673644847)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-9.968299025699949,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-9.9682990257)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -9.9682990257 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(170.015850487)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-10.510721558399965,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-10.5107215584)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -10.5107215584 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(169.744639221)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-12.197309429299978,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-12.1973094293)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -12.1973094293 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(168.901345285)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-11.884573968999945,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-11.884573969)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -11.884573969 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(169.057713016)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-14.901995556000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-14.901995556)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -14.901995556 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(167.549002222)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(149) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-11.956407999200025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-11.9564079992)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -11.9564079992 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(169.021796)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-19.74064519999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-19.7406452)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:30 (engine) [SQL]->Connecting to database:
22:51:30 (engine) [SQL]->Connection OK!
22:51:30 (engine) test 
22:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -19.7406452 ID = 4
22:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(165.1296774)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-7.432774119999934,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-7.43277412)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:31 (engine) [SQL]->Connecting to database:
22:51:31 (engine) [SQL]->Connection OK!
22:51:31 (engine) test 
22:51:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -7.43277412 ID = 4
22:51:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(171.28361294)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-33.52609046600003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-33.526090466)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:31 (engine) [SQL]->Connecting to database:
22:51:31 (engine) [SQL]->Connection OK!
22:51:31 (engine) test 
22:51:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -33.526090466 ID = 4
22:51:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(158.236954767)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":15.952180932000104,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(15.952180932)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:31 (engine) [SQL]->Connecting to database:
22:51:31 (engine) [SQL]->Connection OK!
22:51:31 (engine) test 
22:51:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 15.952180932 ID = 4
22:51:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.976090466)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:51:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":-86.88197091059992,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:51:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(-86.8819709106)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:51:31 (engine) [SQL]->Connecting to database:
22:51:31 (engine) [SQL]->Connection OK!
22:51:31 (engine) test 
22:51:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:51:31 (engine) [SQL]->Exec [Done]:Resource id #17
22:51:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:51:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price -86.8819709106 ID = 4
22:51:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:51:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(131.559014545)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:54:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

22:54:39 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

22:54:39 (engine) [SQL]->Connecting to database:
22:54:39 (engine) [SQL]->Connection OK!
22:54:39 (engine) test 
22:54:39 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
22:54:39 (engine) [SQL]->Exec [Done]:Resource id #16
22:54:39 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

22:54:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:54:40 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:54:40 (engine) [SQL]->Connecting to database:
22:54:40 (engine) [SQL]->Connection OK!
22:54:40 (engine) test 
22:54:40 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:54:40 (engine) [SQL]->Exec [Done]:Resource id #16
22:54:40 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:54:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

22:54:40 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:54:40 (engine) [SQL]->Connecting to database:
22:54:40 (engine) [SQL]->Connection OK!
22:54:40 (engine) test 
22:54:40 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
22:54:40 (engine) [SQL]->Exec [Done]:Resource id #16
22:54:40 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

22:54:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:54:42 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:54:42 (engine) [SQL]->Connecting to database:
22:54:42 (engine) [SQL]->Connection OK!
22:54:42 (engine) test 
22:54:42 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:54:42 (engine) [SQL]->Exec [Done]:Resource id #16
22:54:42 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "3605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:54:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:54:42 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:54:42 (engine) [SQL]->Connecting to database:
22:54:42 (engine) [SQL]->Connection OK!
22:54:42 (engine) test 
22:54:42 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:54:42 (engine) [SQL]->Exec [Done]:Resource id #16
22:54:42 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:54:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:54:57 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:54:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:54:57 (engine) [SQL]->Connecting to database:
22:54:57 (engine) [SQL]->Connection OK!
22:54:57 (engine) test 
22:54:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:54:57 (engine) [SQL]->Exec [Done]:Resource id #17
22:54:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:54:57 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:54:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:54:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:54:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:54:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:54:58 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:54:58 (engine) [SQL]->Connecting to database:
22:54:58 (engine) [SQL]->Connection OK!
22:54:58 (engine) test 
22:54:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:54:58 (engine) [SQL]->Exec [Done]:Resource id #17
22:54:58 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:54:58 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:54:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:54:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:54:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:54:58 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:54:58 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:54:58 (engine) [SQL]->Connecting to database:
22:54:58 (engine) [SQL]->Connection OK!
22:54:58 (engine) test 
22:54:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:54:58 (engine) [SQL]->Exec [Done]:Resource id #17
22:54:58 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:54:58 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:54:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:54:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:54:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:54:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:54:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:54:59 (engine) [SQL]->Connecting to database:
22:54:59 (engine) [SQL]->Connection OK!
22:54:59 (engine) test 
22:54:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:54:59 (engine) [SQL]->Exec [Done]:Resource id #17
22:54:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:54:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:54:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:54:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:54:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":144.20000000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:54:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(144.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:54:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:54:59 (engine) [SQL]->Connecting to database:
22:54:59 (engine) [SQL]->Connection OK!
22:54:59 (engine) test 
22:54:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:54:59 (engine) [SQL]->Exec [Done]:Resource id #17
22:54:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:54:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 144.2 ID = 4
22:54:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:54:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(144.2)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

22:57:33 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

22:57:33 (engine) [SQL]->Connecting to database:
22:57:33 (engine) [SQL]->Connection OK!
22:57:33 (engine) test 
22:57:33 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
22:57:33 (engine) [SQL]->Exec [Done]:Resource id #16
22:57:33 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

22:57:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:57:33 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:57:33 (engine) [SQL]->Connecting to database:
22:57:33 (engine) [SQL]->Connection OK!
22:57:33 (engine) test 
22:57:33 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:57:33 (engine) [SQL]->Exec [Done]:Resource id #16
22:57:33 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:57:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

22:57:33 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:57:33 (engine) [SQL]->Connecting to database:
22:57:33 (engine) [SQL]->Connection OK!
22:57:33 (engine) test 
22:57:33 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
22:57:33 (engine) [SQL]->Exec [Done]:Resource id #16
22:57:33 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

22:57:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

22:57:35 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

22:57:35 (engine) [SQL]->Connecting to database:
22:57:35 (engine) [SQL]->Connection OK!
22:57:35 (engine) test 
22:57:35 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
22:57:35 (engine) [SQL]->Exec [Done]:Resource id #16
22:57:35 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

22:57:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

22:57:35 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

22:57:35 (engine) [SQL]->Connecting to database:
22:57:35 (engine) [SQL]->Connection OK!
22:57:35 (engine) test 
22:57:35 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
22:57:35 (engine) [SQL]->Exec [Done]:Resource id #16
22:57:35 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

22:57:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:57:37 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:57:37 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:57:37 (engine) [SQL]->Connecting to database:
22:57:37 (engine) [SQL]->Connection OK!
22:57:37 (engine) test 
22:57:37 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:57:37 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:37 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:37 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
22:57:37 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
22:57:37 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

22:57:38 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

22:57:38 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
22:57:38 (engine) [SQL]->Connecting to database:
22:57:38 (engine) [SQL]->Connection OK!
22:57:38 (engine) test 
22:57:38 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
22:57:38 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:38 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:38 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 1
22:57:38 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
22:57:38 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(104.2)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

22:57:38 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

22:57:38 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
22:57:38 (engine) [SQL]->Connecting to database:
22:57:38 (engine) [SQL]->Connection OK!
22:57:38 (engine) test 
22:57:38 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
22:57:38 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:38 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:38 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
22:57:38 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
22:57:38 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

22:57:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

22:57:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
22:57:39 (engine) [SQL]->Connecting to database:
22:57:39 (engine) [SQL]->Connection OK!
22:57:39 (engine) test 
22:57:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
22:57:39 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
22:57:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
22:57:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:39 (engine) [SQL]->Connecting to database:
22:57:39 (engine) [SQL]->Connection OK!
22:57:39 (engine) test 
22:57:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:39 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
22:57:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
22:57:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.62,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.46,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.29999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:40 (engine) [SQL]->Connecting to database:
22:57:40 (engine) [SQL]->Connection OK!
22:57:40 (engine) test 
22:57:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:40 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
22:57:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.40000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":250.08000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(250.08)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:41 (engine) [SQL]->Connecting to database:
22:57:41 (engine) [SQL]->Connection OK!
22:57:41 (engine) test 
22:57:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:41 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 250.08 ID = 4
22:57:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(250.08)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":260.50000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(260.5)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 260.5 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(260.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":270.9200000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(270.92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 270.92 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(270.92)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":281.3400000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(281.34)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 281.34 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(281.34)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":291.7600000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(291.76)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 291.76 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(291.76)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":302.1800000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(302.18)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 302.18 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(302.18)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":312.60000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(312.6)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 312.6 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(312.6)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":323.02000000000015,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(323.02)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:42 (engine) [SQL]->Connecting to database:
22:57:42 (engine) [SQL]->Connection OK!
22:57:42 (engine) test 
22:57:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:42 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 323.02 ID = 4
22:57:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(323.02)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":333.44000000000017,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(333.44)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 333.44 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(333.44)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":343.8600000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(343.86)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 343.86 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(343.86)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":354.28000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(354.28)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 354.28 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(354.28)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":364.70000000000016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(364.7)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 364.7 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(364.7)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":375.1200000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(375.12)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 375.12 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(375.12)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":385.5400000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(385.54)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 385.54 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(385.54)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":395.9600000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(395.96)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:43 (engine) [SQL]->Connection OK!
22:57:43 (engine) test 
22:57:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:43 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 395.96 ID = 4
22:57:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(395.96)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":406.3800000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(406.38)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:43 (engine) [SQL]->Connecting to database:
22:57:44 (engine) [SQL]->Connection OK!
22:57:44 (engine) test 
22:57:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:44 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 406.38 ID = 4
22:57:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(406.38)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":416.80000000000024,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(416.8)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:44 (engine) [SQL]->Connecting to database:
22:57:44 (engine) [SQL]->Connection OK!
22:57:44 (engine) test 
22:57:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:44 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 416.8 ID = 4
22:57:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(416.8)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":427.22000000000025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(427.22)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:44 (engine) [SQL]->Connecting to database:
22:57:44 (engine) [SQL]->Connection OK!
22:57:44 (engine) test 
22:57:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:44 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 427.22 ID = 4
22:57:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(427.22)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":437.6400000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(437.64)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:44 (engine) [SQL]->Connecting to database:
22:57:44 (engine) [SQL]->Connection OK!
22:57:44 (engine) test 
22:57:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:44 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 437.64 ID = 4
22:57:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(437.64)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":448.06000000000023,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(448.06)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 448.06 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(448.06)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":458.48000000000025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(458.48)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 458.48 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(458.48)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":468.9000000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(468.9)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 468.9 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(468.9)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":479.32000000000016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(479.32)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 479.32 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(479.32)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":489.7400000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(489.74)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 489.74 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(489.74)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":500.1600000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(500.16)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 500.16 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(500.16)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":510.5800000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(510.58)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:45 (engine) [SQL]->Connecting to database:
22:57:45 (engine) [SQL]->Connection OK!
22:57:45 (engine) test 
22:57:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:45 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 510.58 ID = 4
22:57:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(510.58)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(133) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":521,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  int(521)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 521 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    int(521)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":531.42,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(531.42)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 531.42 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(531.42)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":541.8399999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(541.84)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 541.84 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(541.84)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":552.2599999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(552.26)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 552.26 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(552.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":562.6799999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(562.68)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 562.68 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(562.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":573.0999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(573.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 573.1 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(573.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":583.5199999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(583.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 583.52 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(583.52)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":593.9399999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(593.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:46 (engine) [SQL]->Connecting to database:
22:57:46 (engine) [SQL]->Connection OK!
22:57:46 (engine) test 
22:57:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:46 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 593.94 ID = 4
22:57:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(593.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":604.3599999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(604.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:47 (engine) [SQL]->Connecting to database:
22:57:47 (engine) [SQL]->Connection OK!
22:57:47 (engine) test 
22:57:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:47 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 604.36 ID = 4
22:57:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(604.36)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":614.7799999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(614.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:47 (engine) [SQL]->Connecting to database:
22:57:47 (engine) [SQL]->Connection OK!
22:57:47 (engine) test 
22:57:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:47 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 614.78 ID = 4
22:57:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(614.78)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":625.1999999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(625.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:47 (engine) [SQL]->Connecting to database:
22:57:47 (engine) [SQL]->Connection OK!
22:57:47 (engine) test 
22:57:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:47 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 625.2 ID = 4
22:57:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(625.2)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":635.6199999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(635.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:48 (engine) [SQL]->Connecting to database:
22:57:48 (engine) [SQL]->Connection OK!
22:57:48 (engine) test 
22:57:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:48 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 635.62 ID = 4
22:57:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(635.62)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":646.0399999999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(646.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:49 (engine) [SQL]->Connecting to database:
22:57:49 (engine) [SQL]->Connection OK!
22:57:49 (engine) test 
22:57:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:49 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 646.04 ID = 4
22:57:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(646.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":656.4599999999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:50 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(656.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:50 (engine) [SQL]->Connecting to database:
22:57:50 (engine) [SQL]->Connection OK!
22:57:50 (engine) test 
22:57:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:50 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:50 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 656.46 ID = 4
22:57:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(656.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

22:57:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":666.8799999999995,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

22:57:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(666.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

22:57:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
22:57:51 (engine) [SQL]->Connecting to database:
22:57:51 (engine) [SQL]->Connection OK!
22:57:51 (engine) test 
22:57:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
22:57:51 (engine) [SQL]->Exec [Done]:Resource id #17
22:57:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
22:57:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 666.88 ID = 4
22:57:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
22:57:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(666.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:02:33 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:02:33 (engine) [SQL]->Connecting to database:
23:02:33 (engine) [SQL]->Connection OK!
23:02:33 (engine) test 
23:02:33 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:02:33 (engine) [SQL]->Exec [Done]:Resource id #16
23:02:33 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:02:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:02:33 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:02:33 (engine) [SQL]->Connecting to database:
23:02:33 (engine) [SQL]->Connection OK!
23:02:33 (engine) test 
23:02:33 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:02:33 (engine) [SQL]->Exec [Done]:Resource id #16
23:02:33 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:02:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:02:33 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:02:33 (engine) [SQL]->Connecting to database:
23:02:33 (engine) [SQL]->Connection OK!
23:02:33 (engine) test 
23:02:33 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:02:33 (engine) [SQL]->Exec [Done]:Resource id #16
23:02:33 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:02:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:02:40 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:02:40 (engine) [SQL]->Connecting to database:
23:02:40 (engine) [SQL]->Connection OK!
23:02:40 (engine) test 
23:02:40 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:02:40 (engine) [SQL]->Exec [Done]:Resource id #16
23:02:40 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:02:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:02:40 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:02:40 (engine) [SQL]->Connecting to database:
23:02:40 (engine) [SQL]->Connection OK!
23:02:40 (engine) test 
23:02:40 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:02:40 (engine) [SQL]->Exec [Done]:Resource id #16
23:02:40 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:02:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:02:43 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:02:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:02:43 (engine) [SQL]->Connecting to database:
23:02:43 (engine) [SQL]->Connection OK!
23:02:43 (engine) test 
23:02:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:02:43 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:43 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:02:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:02:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:02:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:02:44 (engine) [SQL]->Connecting to database:
23:02:44 (engine) [SQL]->Connection OK!
23:02:44 (engine) test 
23:02:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:02:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:02:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:02:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:02:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:02:44 (engine) [SQL]->Connecting to database:
23:02:44 (engine) [SQL]->Connection OK!
23:02:44 (engine) test 
23:02:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:02:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:02:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:02:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:02:44 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:02:44 (engine) [SQL]->Connecting to database:
23:02:44 (engine) [SQL]->Connection OK!
23:02:44 (engine) test 
23:02:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:02:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:44 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:02:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:02:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:45 (engine) [SQL]->Connecting to database:
23:02:45 (engine) [SQL]->Connection OK!
23:02:45 (engine) test 
23:02:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:02:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:46 (engine) [SQL]->Connecting to database:
23:02:46 (engine) [SQL]->Connection OK!
23:02:46 (engine) test 
23:02:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:02:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":250.0800000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(250.08)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:47 (engine) [SQL]->Connecting to database:
23:02:47 (engine) [SQL]->Connection OK!
23:02:47 (engine) test 
23:02:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 250.08 ID = 4
23:02:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(250.08)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":260.5000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(260.5)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 260.5 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(260.5)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":270.92000000000013,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(270.92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 270.92 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(270.92)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":281.34000000000015,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(281.34)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 281.34 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(281.34)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":291.76000000000016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(291.76)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 291.76 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(291.76)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":302.1800000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(302.18)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 302.18 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(302.18)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":312.60000000000014,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(312.6)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 312.6 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(312.6)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":323.02000000000015,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(323.02)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:48 (engine) [SQL]->Connecting to database:
23:02:48 (engine) [SQL]->Connection OK!
23:02:48 (engine) test 
23:02:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 323.02 ID = 4
23:02:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(323.02)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":333.44000000000017,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(333.44)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 333.44 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(333.44)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":343.8600000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(343.86)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 343.86 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(343.86)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":354.2800000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(354.28)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 354.28 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(354.28)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":364.7000000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(364.7)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 364.7 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(364.7)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":375.12000000000023,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(375.12)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 375.12 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(375.12)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":385.54000000000025,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(385.54)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 385.54 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(385.54)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":395.9600000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(395.96)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 395.96 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(395.96)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":406.3800000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(406.38)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:49 (engine) [SQL]->Connecting to database:
23:02:49 (engine) [SQL]->Connection OK!
23:02:49 (engine) test 
23:02:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 406.38 ID = 4
23:02:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(406.38)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":416.80000000000024,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:50 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(416.8)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:50 (engine) [SQL]->Connecting to database:
23:02:50 (engine) [SQL]->Connection OK!
23:02:50 (engine) test 
23:02:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:50 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:50 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 416.8 ID = 4
23:02:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(416.8)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":427.2200000000002,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:50 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(427.22)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:50 (engine) [SQL]->Connecting to database:
23:02:50 (engine) [SQL]->Connection OK!
23:02:50 (engine) test 
23:02:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:50 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:50 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 427.22 ID = 4
23:02:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(427.22)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":437.64000000000016,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:50 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(437.64)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:50 (engine) [SQL]->Connecting to database:
23:02:50 (engine) [SQL]->Connection OK!
23:02:50 (engine) test 
23:02:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:50 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:50 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 437.64 ID = 4
23:02:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(437.64)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":448.0600000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(448.06)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 448.06 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(448.06)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":458.4800000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(458.48)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 458.48 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(458.48)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":468.9000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(468.9)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 468.9 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(468.9)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":479.32000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(479.32)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 479.32 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(479.32)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":489.74,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(489.74)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 489.74 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(489.74)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":500.15999999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(500.16)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 500.16 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(500.16)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":510.5799999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(510.58)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:51 (engine) [SQL]->Connecting to database:
23:02:51 (engine) [SQL]->Connection OK!
23:02:51 (engine) test 
23:02:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 510.58 ID = 4
23:02:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(510.58)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":520.9999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(521)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 521 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(521)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":531.4199999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(531.42)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 531.42 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(531.42)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":541.8399999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(541.84)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 541.84 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(541.84)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":552.2599999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(552.26)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 552.26 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(552.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":562.6799999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(562.68)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 562.68 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(562.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":573.0999999999997,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(573.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:52 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:52 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:52 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 573.1 ID = 4
23:02:52 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:52 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(573.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:52 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":583.5199999999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:52 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(583.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:52 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:52 (engine) [SQL]->Connecting to database:
23:02:52 (engine) [SQL]->Connection OK!
23:02:52 (engine) test 
23:02:53 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:53 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:53 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:53 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 583.52 ID = 4
23:02:53 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:53 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(583.52)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":593.9399999999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:53 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(593.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:53 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:53 (engine) [SQL]->Connecting to database:
23:02:53 (engine) [SQL]->Connection OK!
23:02:53 (engine) test 
23:02:53 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:53 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:53 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:53 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 593.94 ID = 4
23:02:53 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:53 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(593.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":604.3599999999996,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:54 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(604.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:54 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:54 (engine) [SQL]->Connecting to database:
23:02:54 (engine) [SQL]->Connection OK!
23:02:54 (engine) test 
23:02:54 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:54 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:54 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:54 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 604.36 ID = 4
23:02:54 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:54 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(604.36)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":614.7799999999995,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:55 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(614.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:55 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:55 (engine) [SQL]->Connecting to database:
23:02:55 (engine) [SQL]->Connection OK!
23:02:55 (engine) test 
23:02:55 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:55 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:55 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:55 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 614.78 ID = 4
23:02:55 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:55 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(614.78)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:56 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":625.1999999999995,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:56 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(625.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:56 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:56 (engine) [SQL]->Connecting to database:
23:02:56 (engine) [SQL]->Connection OK!
23:02:56 (engine) test 
23:02:56 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:56 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:56 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:56 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 625.2 ID = 4
23:02:56 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:56 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(625.2)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":635.6199999999994,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:57 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(635.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:57 (engine) [SQL]->Connecting to database:
23:02:57 (engine) [SQL]->Connection OK!
23:02:57 (engine) test 
23:02:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:57 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:57 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 635.62 ID = 4
23:02:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(635.62)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:02:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":646.0399999999994,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:02:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(646.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:02:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:02:59 (engine) [SQL]->Connecting to database:
23:02:59 (engine) [SQL]->Connection OK!
23:02:59 (engine) test 
23:02:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:02:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:02:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:02:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 646.04 ID = 4
23:02:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:02:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(646.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:03:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":656.4599999999994,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:03:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(656.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:03:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:03:01 (engine) [SQL]->Connecting to database:
23:03:01 (engine) [SQL]->Connection OK!
23:03:01 (engine) test 
23:03:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:03:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:03:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:03:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 656.46 ID = 4
23:03:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:03:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(656.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:03:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":666.8799999999993,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:03:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(666.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:03:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:03:02 (engine) [SQL]->Connecting to database:
23:03:02 (engine) [SQL]->Connection OK!
23:03:02 (engine) test 
23:03:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:03:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:03:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:03:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 666.88 ID = 4
23:03:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:03:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(666.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:03:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":677.2999999999993,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:03:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(677.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:03:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:03:03 (engine) [SQL]->Connecting to database:
23:03:03 (engine) [SQL]->Connection OK!
23:03:03 (engine) test 
23:03:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:03:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:03:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:03:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 677.3 ID = 4
23:03:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:03:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(677.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:03:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":687.7199999999992,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:03:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(687.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:03:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:03:04 (engine) [SQL]->Connecting to database:
23:03:04 (engine) [SQL]->Connection OK!
23:03:04 (engine) test 
23:03:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:03:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:03:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:03:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 687.72 ID = 4
23:03:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:03:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(687.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:16:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:16:54 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:16:54 (engine) [SQL]->Connecting to database:
23:16:54 (engine) [SQL]->Connection OK!
23:16:54 (engine) test 
23:16:54 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:16:54 (engine) [SQL]->Exec [Done]:Resource id #16
23:16:54 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:16:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:16:54 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:16:54 (engine) [SQL]->Connecting to database:
23:16:54 (engine) [SQL]->Connection OK!
23:16:54 (engine) test 
23:16:54 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:16:54 (engine) [SQL]->Exec [Done]:Resource id #16
23:16:54 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:16:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:16:54 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:16:54 (engine) [SQL]->Connecting to database:
23:16:54 (engine) [SQL]->Connection OK!
23:16:54 (engine) test 
23:16:54 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:16:54 (engine) [SQL]->Exec [Done]:Resource id #16
23:16:54 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:16:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:16:57 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:16:57 (engine) [SQL]->Connecting to database:
23:16:57 (engine) [SQL]->Connection OK!
23:16:57 (engine) test 
23:16:57 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:16:57 (engine) [SQL]->Exec [Done]:Resource id #16
23:16:57 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:16:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:16:57 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:16:57 (engine) [SQL]->Connecting to database:
23:16:57 (engine) [SQL]->Connection OK!
23:16:57 (engine) test 
23:16:57 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:16:57 (engine) [SQL]->Exec [Done]:Resource id #16
23:16:57 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:17:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:17:01 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:17:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:17:01 (engine) [SQL]->Connecting to database:
23:17:01 (engine) [SQL]->Connection OK!
23:17:01 (engine) test 
23:17:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:17:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:01 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:17:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:17:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:17:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:17:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:17:02 (engine) [SQL]->Connecting to database:
23:17:02 (engine) [SQL]->Connection OK!
23:17:02 (engine) test 
23:17:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:17:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:17:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:17:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:17:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:17:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:17:02 (engine) [SQL]->Connecting to database:
23:17:02 (engine) [SQL]->Connection OK!
23:17:02 (engine) test 
23:17:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:17:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:17:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:17:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:17:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:17:03 (engine) [SQL]->Connecting to database:
23:17:03 (engine) [SQL]->Connection OK!
23:17:03 (engine) test 
23:17:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:17:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:17:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:17:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:17:03 (engine) [SQL]->Connecting to database:
23:17:03 (engine) [SQL]->Connection OK!
23:17:03 (engine) test 
23:17:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:17:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:17:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:03 (engine) [SQL]->Connecting to database:
23:17:03 (engine) [SQL]->Connection OK!
23:17:03 (engine) test 
23:17:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:17:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:03 (engine) [SQL]->Connecting to database:
23:17:03 (engine) [SQL]->Connection OK!
23:17:03 (engine) test 
23:17:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:03 (engine) [SQL]->Connecting to database:
23:17:03 (engine) [SQL]->Connection OK!
23:17:03 (engine) test 
23:17:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:17:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:04 (engine) [SQL]->Connecting to database:
23:17:04 (engine) [SQL]->Connection OK!
23:17:04 (engine) test 
23:17:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:17:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:05 (engine) [SQL]->Connecting to database:
23:17:05 (engine) [SQL]->Connection OK!
23:17:05 (engine) test 
23:17:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:17:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:17:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:17:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:17:06 (engine) [SQL]->Connecting to database:
23:17:06 (engine) [SQL]->Connection OK!
23:17:06 (engine) test 
23:17:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:17:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:17:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:17:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:17:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:17:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:17:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:17:50 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:17:50 (engine) [SQL]->Connecting to database:
23:17:50 (engine) [SQL]->Connection OK!
23:17:50 (engine) test 
23:17:50 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:17:50 (engine) [SQL]->Exec [Done]:Resource id #16
23:17:50 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:17:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:17:51 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:17:51 (engine) [SQL]->Connecting to database:
23:17:51 (engine) [SQL]->Connection OK!
23:17:51 (engine) test 
23:17:51 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:17:51 (engine) [SQL]->Exec [Done]:Resource id #16
23:17:51 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:17:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:17:51 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:17:51 (engine) [SQL]->Connecting to database:
23:17:51 (engine) [SQL]->Connection OK!
23:17:51 (engine) test 
23:17:51 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:17:51 (engine) [SQL]->Exec [Done]:Resource id #16
23:17:51 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:17:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:17:55 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:17:55 (engine) [SQL]->Connecting to database:
23:17:55 (engine) [SQL]->Connection OK!
23:17:55 (engine) test 
23:17:55 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:17:55 (engine) [SQL]->Exec [Done]:Resource id #16
23:17:55 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:17:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:17:55 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:17:55 (engine) [SQL]->Connecting to database:
23:17:55 (engine) [SQL]->Connection OK!
23:17:55 (engine) test 
23:17:55 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:17:55 (engine) [SQL]->Exec [Done]:Resource id #16
23:17:55 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:18:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:18:01 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:18:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:18:01 (engine) [SQL]->Connecting to database:
23:18:01 (engine) [SQL]->Connection OK!
23:18:01 (engine) test 
23:18:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:18:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:01 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:18:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:18:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:18:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:18:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:18:01 (engine) [SQL]->Connecting to database:
23:18:01 (engine) [SQL]->Connection OK!
23:18:01 (engine) test 
23:18:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:18:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:18:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:18:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:18:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:18:02 (engine) [SQL]->Connecting to database:
23:18:02 (engine) [SQL]->Connection OK!
23:18:02 (engine) test 
23:18:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:18:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:18:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:18:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:18:02 (engine) [SQL]->Connecting to database:
23:18:02 (engine) [SQL]->Connection OK!
23:18:02 (engine) test 
23:18:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:18:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:18:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:18:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:18:02 (engine) [SQL]->Connecting to database:
23:18:02 (engine) [SQL]->Connection OK!
23:18:02 (engine) test 
23:18:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:18:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:18:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:02 (engine) [SQL]->Connecting to database:
23:18:02 (engine) [SQL]->Connection OK!
23:18:02 (engine) test 
23:18:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:18:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:18:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:18:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:03 (engine) [SQL]->Connecting to database:
23:18:03 (engine) [SQL]->Connection OK!
23:18:03 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:04 (engine) [SQL]->Connecting to database:
23:18:04 (engine) [SQL]->Connection OK!
23:18:04 (engine) test 
23:18:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:18:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:05 (engine) [SQL]->Connecting to database:
23:18:05 (engine) [SQL]->Connection OK!
23:18:05 (engine) test 
23:18:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:18:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:05 (engine) [SQL]->Connecting to database:
23:18:05 (engine) [SQL]->Connection OK!
23:18:05 (engine) test 
23:18:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:18:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:05 (engine) [SQL]->Connecting to database:
23:18:05 (engine) [SQL]->Connection OK!
23:18:05 (engine) test 
23:18:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:18:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:18:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:18:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:18:05 (engine) [SQL]->Connecting to database:
23:18:05 (engine) [SQL]->Connection OK!
23:18:05 (engine) test 
23:18:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:18:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:18:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:18:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:18:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:18:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:21:30 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:21:30 (engine) [SQL]->Connecting to database:
23:21:30 (engine) [SQL]->Connection OK!
23:21:30 (engine) test 
23:21:30 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:21:30 (engine) [SQL]->Exec [Done]:Resource id #16
23:21:30 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:21:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:21:30 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:21:30 (engine) [SQL]->Connecting to database:
23:21:30 (engine) [SQL]->Connection OK!
23:21:30 (engine) test 
23:21:30 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:21:30 (engine) [SQL]->Exec [Done]:Resource id #16
23:21:30 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:21:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:21:31 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:21:31 (engine) [SQL]->Connecting to database:
23:21:31 (engine) [SQL]->Connection OK!
23:21:31 (engine) test 
23:21:31 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:21:31 (engine) [SQL]->Exec [Done]:Resource id #16
23:21:31 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:21:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:21:32 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:21:32 (engine) [SQL]->Connecting to database:
23:21:32 (engine) [SQL]->Connection OK!
23:21:32 (engine) test 
23:21:32 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:21:32 (engine) [SQL]->Exec [Done]:Resource id #16
23:21:32 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:21:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:21:32 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:21:32 (engine) [SQL]->Connecting to database:
23:21:32 (engine) [SQL]->Connection OK!
23:21:32 (engine) test 
23:21:32 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:21:32 (engine) [SQL]->Exec [Done]:Resource id #16
23:21:32 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:21:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:21:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:21:39 (engine) [SQL]->Connecting to database:
23:21:39 (engine) [SQL]->Connection OK!
23:21:39 (engine) test 
23:21:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:21:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:21:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:21:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:21:39 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:21:39 (engine) [SQL]->Connecting to database:
23:21:39 (engine) [SQL]->Connection OK!
23:21:39 (engine) test 
23:21:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:21:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:39 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:21:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:21:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:21:39 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:21:39 (engine) [SQL]->Connecting to database:
23:21:39 (engine) [SQL]->Connection OK!
23:21:39 (engine) test 
23:21:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:21:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:39 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:21:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:21:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:21:40 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:21:40 (engine) [SQL]->Connecting to database:
23:21:40 (engine) [SQL]->Connection OK!
23:21:40 (engine) test 
23:21:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:21:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:21:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:21:40 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:21:40 (engine) [SQL]->Connecting to database:
23:21:40 (engine) [SQL]->Connection OK!
23:21:40 (engine) test 
23:21:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:21:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:21:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:40 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:40 (engine) [SQL]->Connecting to database:
23:21:40 (engine) [SQL]->Connection OK!
23:21:40 (engine) test 
23:21:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:21:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:21:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:41 (engine) [SQL]->Connecting to database:
23:21:41 (engine) [SQL]->Connection OK!
23:21:41 (engine) test 
23:21:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:21:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:42 (engine) [SQL]->Connecting to database:
23:21:42 (engine) [SQL]->Connection OK!
23:21:42 (engine) test 
23:21:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:21:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:43 (engine) [SQL]->Connecting to database:
23:21:43 (engine) [SQL]->Connection OK!
23:21:43 (engine) test 
23:21:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:43 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:21:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:43 (engine) [SQL]->Connecting to database:
23:21:43 (engine) [SQL]->Connection OK!
23:21:43 (engine) test 
23:21:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:43 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:21:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:43 (engine) [SQL]->Connecting to database:
23:21:43 (engine) [SQL]->Connection OK!
23:21:43 (engine) test 
23:21:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:43 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:21:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:21:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:21:43 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:21:43 (engine) [SQL]->Connecting to database:
23:21:43 (engine) [SQL]->Connection OK!
23:21:43 (engine) test 
23:21:43 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:21:43 (engine) [SQL]->Exec [Done]:Resource id #17
23:21:43 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:21:43 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:21:43 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:21:43 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:22:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:22:02 (engine) [SQL]->Connecting to database:
23:22:02 (engine) [SQL]->Connection OK!
23:22:02 (engine) test 
23:22:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:22:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:02 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:22:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:22:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:22:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:22:02 (engine) [SQL]->Connecting to database:
23:22:02 (engine) [SQL]->Connection OK!
23:22:02 (engine) test 
23:22:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:22:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:22:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:22:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:22:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:22:02 (engine) [SQL]->Connecting to database:
23:22:02 (engine) [SQL]->Connection OK!
23:22:02 (engine) test 
23:22:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:22:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:22:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:22:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:22:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:22:03 (engine) [SQL]->Connecting to database:
23:22:03 (engine) [SQL]->Connection OK!
23:22:03 (engine) test 
23:22:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:22:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:22:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:22:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:22:03 (engine) [SQL]->Connecting to database:
23:22:03 (engine) [SQL]->Connection OK!
23:22:03 (engine) test 
23:22:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:22:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:22:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:03 (engine) [SQL]->Connecting to database:
23:22:03 (engine) [SQL]->Connection OK!
23:22:03 (engine) test 
23:22:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:22:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:03 (engine) [SQL]->Connecting to database:
23:22:03 (engine) [SQL]->Connection OK!
23:22:03 (engine) test 
23:22:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:22:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:03 (engine) [SQL]->Connecting to database:
23:22:03 (engine) [SQL]->Connection OK!
23:22:03 (engine) test 
23:22:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:04 (engine) [SQL]->Connecting to database:
23:22:04 (engine) [SQL]->Connection OK!
23:22:04 (engine) test 
23:22:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:22:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:05 (engine) [SQL]->Connecting to database:
23:22:05 (engine) [SQL]->Connection OK!
23:22:05 (engine) test 
23:22:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:22:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:22:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:22:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:22:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:22:06 (engine) [SQL]->Connecting to database:
23:22:06 (engine) [SQL]->Connection OK!
23:22:06 (engine) test 
23:22:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:22:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:22:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:22:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:22:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:22:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:23:10 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:23:10 (engine) [SQL]->Connecting to database:
23:23:10 (engine) [SQL]->Connection OK!
23:23:10 (engine) test 
23:23:10 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:23:10 (engine) [SQL]->Exec [Done]:Resource id #16
23:23:10 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:23:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:23:11 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:23:11 (engine) [SQL]->Connecting to database:
23:23:11 (engine) [SQL]->Connection OK!
23:23:11 (engine) test 
23:23:11 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:23:11 (engine) [SQL]->Exec [Done]:Resource id #16
23:23:11 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:23:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:23:12 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:23:12 (engine) [SQL]->Connecting to database:
23:23:12 (engine) [SQL]->Connection OK!
23:23:12 (engine) test 
23:23:12 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:23:12 (engine) [SQL]->Exec [Done]:Resource id #16
23:23:12 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:23:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:23:19 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:23:19 (engine) [SQL]->Connecting to database:
23:23:19 (engine) [SQL]->Connection OK!
23:23:19 (engine) test 
23:23:19 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:23:19 (engine) [SQL]->Exec [Done]:Resource id #16
23:23:19 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:23:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:23:19 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:23:19 (engine) [SQL]->Connecting to database:
23:23:19 (engine) [SQL]->Connection OK!
23:23:19 (engine) test 
23:23:19 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:23:19 (engine) [SQL]->Exec [Done]:Resource id #16
23:23:19 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:23:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:23:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:23:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:23:33 (engine) [SQL]->Connecting to database:
23:23:33 (engine) [SQL]->Connection OK!
23:23:33 (engine) test 
23:23:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:23:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:23:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:23:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:23:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:23:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:23:34 (engine) [SQL]->Connecting to database:
23:23:34 (engine) [SQL]->Connection OK!
23:23:34 (engine) test 
23:23:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:23:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:23:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:23:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:23:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:23:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:23:42 (engine) [SQL]->Connecting to database:
23:23:42 (engine) [SQL]->Connection OK!
23:23:42 (engine) test 
23:23:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:23:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:23:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:23:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:23:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:23:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:23:49 (engine) [SQL]->Connecting to database:
23:23:49 (engine) [SQL]->Connection OK!
23:23:49 (engine) test 
23:23:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:23:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:23:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:23:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:23:49 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:23:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:23:49 (engine) [SQL]->Connecting to database:
23:23:49 (engine) [SQL]->Connection OK!
23:23:49 (engine) test 
23:23:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:23:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:49 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:23:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:23:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:50 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:50 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:50 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:50 (engine) [SQL]->Connecting to database:
23:23:50 (engine) [SQL]->Connection OK!
23:23:50 (engine) test 
23:23:50 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:50 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:50 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:50 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:23:50 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:23:50 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:51 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:51 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:51 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:51 (engine) [SQL]->Connecting to database:
23:23:51 (engine) [SQL]->Connection OK!
23:23:51 (engine) test 
23:23:51 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:51 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:51 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:51 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:23:51 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:51 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:57 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:57 (engine) [SQL]->Connecting to database:
23:23:57 (engine) [SQL]->Connection OK!
23:23:57 (engine) test 
23:23:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:57 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:57 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:23:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:57 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:57 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:57 (engine) [SQL]->Connecting to database:
23:23:57 (engine) [SQL]->Connection OK!
23:23:57 (engine) test 
23:23:57 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:57 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:57 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:57 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:23:57 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:57 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:58 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:58 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:58 (engine) [SQL]->Connecting to database:
23:23:58 (engine) [SQL]->Connection OK!
23:23:58 (engine) test 
23:23:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:58 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:58 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:58 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:23:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:58 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:58 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:58 (engine) [SQL]->Connecting to database:
23:23:58 (engine) [SQL]->Connection OK!
23:23:58 (engine) test 
23:23:58 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:58 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:58 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:58 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:23:58 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:58 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:59 (engine) [SQL]->Connecting to database:
23:23:59 (engine) [SQL]->Connection OK!
23:23:59 (engine) test 
23:23:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:23:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:23:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:23:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:23:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:23:59 (engine) [SQL]->Connecting to database:
23:23:59 (engine) [SQL]->Connection OK!
23:23:59 (engine) test 
23:23:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:23:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:23:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:23:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:23:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:23:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:06 (engine) [SQL]->Connecting to database:
23:24:06 (engine) [SQL]->Connection OK!
23:24:06 (engine) test 
23:24:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:24:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:06 (engine) [SQL]->Connecting to database:
23:24:06 (engine) [SQL]->Connection OK!
23:24:06 (engine) test 
23:24:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:24:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:07 (engine) [SQL]->Connecting to database:
23:24:07 (engine) [SQL]->Connection OK!
23:24:07 (engine) test 
23:24:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:24:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:08 (engine) [SQL]->Connecting to database:
23:24:08 (engine) [SQL]->Connection OK!
23:24:08 (engine) test 
23:24:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:08 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:24:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:08 (engine) [SQL]->Connecting to database:
23:24:08 (engine) [SQL]->Connection OK!
23:24:08 (engine) test 
23:24:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:08 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:24:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:09 (engine) [SQL]->Connecting to database:
23:24:09 (engine) [SQL]->Connection OK!
23:24:09 (engine) test 
23:24:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:24:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:10 (engine) [SQL]->Connecting to database:
23:24:10 (engine) [SQL]->Connection OK!
23:24:10 (engine) test 
23:24:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:24:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:10 (engine) [SQL]->Connecting to database:
23:24:10 (engine) [SQL]->Connection OK!
23:24:10 (engine) test 
23:24:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:24:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:11 (engine) [SQL]->Connecting to database:
23:24:11 (engine) [SQL]->Connection OK!
23:24:11 (engine) test 
23:24:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:24:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:11 (engine) [SQL]->Connecting to database:
23:24:11 (engine) [SQL]->Connection OK!
23:24:11 (engine) test 
23:24:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:24:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:24:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:24:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:24:12 (engine) [SQL]->Connecting to database:
23:24:12 (engine) [SQL]->Connection OK!
23:24:12 (engine) test 
23:24:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:24:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:24:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:24:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:13 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:13 (engine) [SQL]->Connecting to database:
23:24:13 (engine) [SQL]->Connection OK!
23:24:13 (engine) test 
23:24:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:13 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 5
23:24:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Rate = 200
23:24:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(200)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:14 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:14 (engine) [SQL]->Connecting to database:
23:24:14 (engine) [SQL]->Connection OK!
23:24:14 (engine) test 
23:24:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:14 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 5
23:24:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
23:24:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(181.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:19 (engine) [SQL]->Connecting to database:
23:24:19 (engine) [SQL]->Connection OK!
23:24:19 (engine) test 
23:24:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 5
23:24:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
23:24:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(186.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:20 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:20 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:20 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:20 (engine) [SQL]->Connecting to database:
23:24:20 (engine) [SQL]->Connection OK!
23:24:20 (engine) test 
23:24:20 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:20 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:20 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:20 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 5
23:24:20 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
23:24:20 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(191.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:21 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:21 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:21 (engine) [SQL]->Connecting to database:
23:24:21 (engine) [SQL]->Connection OK!
23:24:21 (engine) test 
23:24:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:21 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:21 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:21 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 5
23:24:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
23:24:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(196.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:24:21 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":5}}"
}

23:24:21 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(5)
}

23:24:21 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 5
23:24:21 (engine) [SQL]->Connecting to database:
23:24:21 (engine) [SQL]->Connection OK!
23:24:21 (engine) test 
23:24:21 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 5
23:24:21 (engine) [SQL]->Exec [Done]:Resource id #17
23:24:21 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:24:21 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 5
23:24:21 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1200000 Minimum Rate = 100 AvrgRate = 200
23:24:21 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(5)
    ["Price"]=>
    float(104.2)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:25:37 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:25:37 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:25:37 (engine) [SQL]->Connecting to database:
23:25:37 (engine) [SQL]->Connection OK!
23:25:37 (engine) test 
23:25:37 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:25:37 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:37 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:37 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:25:37 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:25:37 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:25:38 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:25:38 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:25:38 (engine) [SQL]->Connecting to database:
23:25:38 (engine) [SQL]->Connection OK!
23:25:38 (engine) test 
23:25:38 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:25:38 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:38 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:38 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:25:38 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:25:38 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:25:38 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:25:38 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:25:38 (engine) [SQL]->Connecting to database:
23:25:38 (engine) [SQL]->Connection OK!
23:25:38 (engine) test 
23:25:38 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:25:38 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:38 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:38 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:25:38 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:25:38 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:39 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:39 (engine) [SQL]->Connecting to database:
23:25:39 (engine) [SQL]->Connection OK!
23:25:39 (engine) test 
23:25:39 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:39 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:39 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:39 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:25:39 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:39 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:40 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:40 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:40 (engine) [SQL]->Connecting to database:
23:25:40 (engine) [SQL]->Connection OK!
23:25:40 (engine) test 
23:25:40 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:40 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:40 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:40 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:25:40 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:40 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:41 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:41 (engine) [SQL]->Connecting to database:
23:25:41 (engine) [SQL]->Connection OK!
23:25:41 (engine) test 
23:25:41 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:41 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:41 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:41 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:25:41 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:41 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:42 (engine) [SQL]->Connecting to database:
23:25:42 (engine) [SQL]->Connection OK!
23:25:42 (engine) test 
23:25:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:25:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:25:42 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:25:42 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:25:42 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:25:42 (engine) [SQL]->Connecting to database:
23:25:42 (engine) [SQL]->Connection OK!
23:25:42 (engine) test 
23:25:42 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:25:42 (engine) [SQL]->Exec [Done]:Resource id #17
23:25:42 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:25:42 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:25:42 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:25:42 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:30:17 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:30:17 (engine) [SQL]->Connecting to database:
23:30:17 (engine) [SQL]->Connection OK!
23:30:17 (engine) test 
23:30:17 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:30:17 (engine) [SQL]->Exec [Done]:Resource id #16
23:30:17 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:30:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:30:17 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:30:17 (engine) [SQL]->Connecting to database:
23:30:17 (engine) [SQL]->Connection OK!
23:30:17 (engine) test 
23:30:17 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:30:17 (engine) [SQL]->Exec [Done]:Resource id #16
23:30:17 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:30:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:30:17 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:30:17 (engine) [SQL]->Connecting to database:
23:30:17 (engine) [SQL]->Connection OK!
23:30:17 (engine) test 
23:30:17 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:30:17 (engine) [SQL]->Exec [Done]:Resource id #16
23:30:17 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:30:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:30:19 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:30:19 (engine) [SQL]->Connecting to database:
23:30:19 (engine) [SQL]->Connection OK!
23:30:19 (engine) test 
23:30:19 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:30:19 (engine) [SQL]->Exec [Done]:Resource id #16
23:30:19 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:30:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:30:19 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:30:19 (engine) [SQL]->Connecting to database:
23:30:19 (engine) [SQL]->Connection OK!
23:30:19 (engine) test 
23:30:19 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:30:19 (engine) [SQL]->Exec [Done]:Resource id #16
23:30:19 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:30:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:30:28 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:30:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:30:28 (engine) [SQL]->Connecting to database:
23:30:28 (engine) [SQL]->Connection OK!
23:30:28 (engine) test 
23:30:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:30:28 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:28 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:30:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:30:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:30:28 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:30:28 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:30:28 (engine) [SQL]->Connecting to database:
23:30:28 (engine) [SQL]->Connection OK!
23:30:28 (engine) test 
23:30:28 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:30:28 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:28 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:28 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:30:28 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:30:28 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:30:29 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:30:29 (engine) [SQL]->Connecting to database:
23:30:29 (engine) [SQL]->Connection OK!
23:30:29 (engine) test 
23:30:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:30:29 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:29 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:30:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:30:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:30:29 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:30:29 (engine) [SQL]->Connecting to database:
23:30:29 (engine) [SQL]->Connection OK!
23:30:29 (engine) test 
23:30:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:30:29 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:29 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:30:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:30:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:30:29 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:30:29 (engine) [SQL]->Connecting to database:
23:30:29 (engine) [SQL]->Connection OK!
23:30:29 (engine) test 
23:30:29 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:30:29 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:29 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:29 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:30:29 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:30:29 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:30 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:30 (engine) [SQL]->Connecting to database:
23:30:30 (engine) [SQL]->Connection OK!
23:30:30 (engine) test 
23:30:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:30 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:30:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:31 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:31 (engine) [SQL]->Connecting to database:
23:30:31 (engine) [SQL]->Connection OK!
23:30:31 (engine) test 
23:30:31 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:31 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:31 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:31 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:30:31 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:31 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:32 (engine) [SQL]->Connecting to database:
23:30:32 (engine) [SQL]->Connection OK!
23:30:32 (engine) test 
23:30:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:30:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:32 (engine) [SQL]->Connecting to database:
23:30:32 (engine) [SQL]->Connection OK!
23:30:32 (engine) test 
23:30:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:30:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:32 (engine) [SQL]->Connecting to database:
23:30:32 (engine) [SQL]->Connection OK!
23:30:32 (engine) test 
23:30:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:30:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:30:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:30:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:30:32 (engine) [SQL]->Connecting to database:
23:30:32 (engine) [SQL]->Connection OK!
23:30:32 (engine) test 
23:30:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:30:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:30:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:30:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:30:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:30:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":9}}"
}

23:31:07 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(9)
}

23:31:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 9
23:31:07 (engine) [SQL]->Connecting to database:
23:31:07 (engine) [SQL]->Connection OK!
23:31:07 (engine) test 
23:31:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 9
23:31:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:07 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 9
23:31:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 1500000 Budget = 10000 Rate = 0.0166666666667
23:31:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(9)
    ["Price"]=>
    float(0.0166666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:31:08 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:31:08 (engine) [SQL]->Connecting to database:
23:31:08 (engine) [SQL]->Connection OK!
23:31:08 (engine) test 
23:31:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:31:08 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:08 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:31:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:31:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:31:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:31:08 (engine) [SQL]->Connecting to database:
23:31:08 (engine) [SQL]->Connection OK!
23:31:08 (engine) test 
23:31:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:31:08 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 1
23:31:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:31:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(126.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:08 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:31:08 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:31:08 (engine) [SQL]->Connecting to database:
23:31:08 (engine) [SQL]->Connection OK!
23:31:08 (engine) test 
23:31:08 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:31:08 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:08 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:08 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 1
23:31:08 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:31:08 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(130.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:31:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:31:09 (engine) [SQL]->Connecting to database:
23:31:09 (engine) [SQL]->Connection OK!
23:31:09 (engine) test 
23:31:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:31:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 1
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:31:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(69.4666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:31:09 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:31:09 (engine) [SQL]->Connecting to database:
23:31:09 (engine) [SQL]->Connection OK!
23:31:09 (engine) test 
23:31:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:31:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:31:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:31:09 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:31:09 (engine) [SQL]->Connecting to database:
23:31:09 (engine) [SQL]->Connection OK!
23:31:09 (engine) test 
23:31:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:31:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:31:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:31:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:31:09 (engine) [SQL]->Connecting to database:
23:31:09 (engine) [SQL]->Connection OK!
23:31:09 (engine) test 
23:31:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:31:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 3
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Minimum Rate = 50 AvrgRate = 100
23:31:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(52.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:09 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:09 (engine) [SQL]->Connecting to database:
23:31:09 (engine) [SQL]->Connection OK!
23:31:09 (engine) test 
23:31:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:31:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:31:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(201.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(205.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(209.733333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":78.15,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(78.15)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 78.15 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(214.075)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":86.83333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(86.8333333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 86.8333333333 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.416666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":95.51666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(95.5166666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:10 (engine) [SQL]->Connecting to database:
23:31:10 (engine) [SQL]->Connection OK!
23:31:10 (engine) test 
23:31:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 95.5166666667 ID = 4
23:31:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(222.758333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":112.88333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(112.883333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 112.883333333 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(231.441666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":121.56666666666669,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(121.566666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 121.566666667 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(121.566666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":130.25000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(130.25)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 130.25 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(130.25)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":138.93333333333337,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(138.933333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 138.933333333 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(138.933333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":147.6166666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(147.616666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 147.616666667 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(147.616666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.30000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":164.9833333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(164.983333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:11 (engine) [SQL]->Connecting to database:
23:31:11 (engine) [SQL]->Connection OK!
23:31:11 (engine) test 
23:31:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 164.983333333 ID = 4
23:31:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(164.983333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":173.66666666666674,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(173.666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 173.666666667 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":182.35000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(182.35)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 182.35 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.35)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":191.03333333333342,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(191.033333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 191.033333333 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.033333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":199.71666666666675,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(199.716666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 199.716666667 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.716666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":217.08333333333343,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(217.083333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 217.083333333 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(217.083333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":225.76666666666677,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(225.766666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 225.766666667 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(225.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:31:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":234.4500000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:31:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(234.45)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:31:12 (engine) [SQL]->Connecting to database:
23:31:12 (engine) [SQL]->Connection OK!
23:31:12 (engine) test 
23:31:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:31:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:31:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:31:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 234.45 ID = 4
23:31:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:31:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(234.45)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

23:32:02 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

23:32:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 8
23:32:02 (engine) [SQL]->Connecting to database:
23:32:02 (engine) [SQL]->Connection OK!
23:32:02 (engine) test 
23:32:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
23:32:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 8
23:32:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 500000 Rate = 83.3333333333
23:32:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    float(83.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:32:03 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:32:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:32:03 (engine) [SQL]->Connecting to database:
23:32:03 (engine) [SQL]->Connection OK!
23:32:03 (engine) test 
23:32:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:32:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:03 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:32:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:32:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:03 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:32:03 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:32:03 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:32:03 (engine) [SQL]->Connecting to database:
23:32:03 (engine) [SQL]->Connection OK!
23:32:03 (engine) test 
23:32:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:32:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 1
23:32:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:32:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(126.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:32:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:32:04 (engine) [SQL]->Connecting to database:
23:32:04 (engine) [SQL]->Connection OK!
23:32:04 (engine) test 
23:32:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:32:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 1
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:32:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(130.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:32:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:32:04 (engine) [SQL]->Connecting to database:
23:32:04 (engine) [SQL]->Connection OK!
23:32:04 (engine) test 
23:32:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:32:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 1
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:32:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(69.4666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:32:04 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:32:04 (engine) [SQL]->Connecting to database:
23:32:04 (engine) [SQL]->Connection OK!
23:32:04 (engine) test 
23:32:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:32:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:32:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:32:04 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:32:04 (engine) [SQL]->Connecting to database:
23:32:04 (engine) [SQL]->Connection OK!
23:32:04 (engine) test 
23:32:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:32:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:32:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:32:04 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:32:04 (engine) [SQL]->Connecting to database:
23:32:04 (engine) [SQL]->Connection OK!
23:32:04 (engine) test 
23:32:04 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:32:04 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:04 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:04 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 3
23:32:04 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Minimum Rate = 50 AvrgRate = 100
23:32:04 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(52.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(201.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(205.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(209.733333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":78.15,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(78.15)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 78.15 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(214.075)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":86.83333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(86.8333333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 86.8333333333 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.416666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":95.51666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(95.5166666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 95.5166666667 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(222.758333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:32:05 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:05 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":112.88333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:05 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(112.883333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:05 (engine) [SQL]->Connecting to database:
23:32:05 (engine) [SQL]->Connection OK!
23:32:05 (engine) test 
23:32:05 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:05 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:05 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:05 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 112.883333333 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(231.441666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":121.56666666666669,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(121.566666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 121.566666667 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(121.566666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":130.25000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(130.25)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 130.25 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(130.25)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":138.93333333333337,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(138.933333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 138.933333333 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(138.933333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":147.6166666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(147.616666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 147.616666667 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(147.616666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.30000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":164.9833333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(164.983333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 164.983333333 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(164.983333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":173.66666666666674,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(173.666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:06 (engine) [SQL]->Connecting to database:
23:32:06 (engine) [SQL]->Connection OK!
23:32:06 (engine) test 
23:32:06 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:06 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:06 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:06 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 173.666666667 ID = 4
23:32:06 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:06 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:06 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":182.35000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:06 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(182.35)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 182.35 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.35)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":191.03333333333342,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(191.033333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 191.033333333 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.033333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":199.71666666666675,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(199.716666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 199.716666667 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.716666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":217.08333333333343,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(217.083333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 217.083333333 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(217.083333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":225.76666666666677,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(225.766666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 225.766666667 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(225.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:32:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":234.4500000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:32:07 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(234.45)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:32:07 (engine) [SQL]->Connecting to database:
23:32:07 (engine) [SQL]->Connection OK!
23:32:07 (engine) test 
23:32:07 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:32:07 (engine) [SQL]->Exec [Done]:Resource id #17
23:32:07 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:32:07 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 234.45 ID = 4
23:32:07 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:32:07 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(234.45)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:34:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:34:53 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:34:53 (engine) [SQL]->Connecting to database:
23:34:53 (engine) [SQL]->Connection OK!
23:34:53 (engine) test 
23:34:53 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:34:53 (engine) [SQL]->Exec [Done]:Resource id #16
23:34:53 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:34:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:34:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:34:53 (engine) [SQL]->Connecting to database:
23:34:53 (engine) [SQL]->Connection OK!
23:34:53 (engine) test 
23:34:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:34:53 (engine) [SQL]->Exec [Done]:Resource id #16
23:34:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:34:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:34:53 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:34:53 (engine) [SQL]->Connecting to database:
23:34:53 (engine) [SQL]->Connection OK!
23:34:53 (engine) test 
23:34:53 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:34:53 (engine) [SQL]->Exec [Done]:Resource id #16
23:34:53 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:34:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:34:57 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:34:57 (engine) [SQL]->Connecting to database:
23:34:57 (engine) [SQL]->Connection OK!
23:34:57 (engine) test 
23:34:57 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:34:57 (engine) [SQL]->Exec [Done]:Resource id #16
23:34:57 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:34:57 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:34:57 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:34:57 (engine) [SQL]->Connecting to database:
23:34:57 (engine) [SQL]->Connection OK!
23:34:57 (engine) test 
23:34:57 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 91

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
23:34:57 (engine) [SQL]->Exec [Done]:Resource id #16
23:34:57 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "12"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "1"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["CalculatedTaxAmount"]=>
      string(1) "4"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "11"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "7"
    }
  }
  ["total"]=>
  int(1)
}

23:35:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:35:04 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:35:04 (engine) [SQL]->Connecting to database:
23:35:04 (engine) [SQL]->Connection OK!
23:35:04 (engine) test 
23:35:04 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:35:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:35:04 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:35:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:35:04 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:35:04 (engine) [SQL]->Connecting to database:
23:35:04 (engine) [SQL]->Connection OK!
23:35:04 (engine) test 
23:35:04 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:35:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:35:04 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:36:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:36:53 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:36:53 (engine) [SQL]->Connecting to database:
23:36:53 (engine) [SQL]->Connection OK!
23:36:53 (engine) test 
23:36:53 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:36:53 (engine) [SQL]->Exec [Done]:Resource id #16
23:36:53 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:36:53 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:36:53 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:36:53 (engine) [SQL]->Connecting to database:
23:36:53 (engine) [SQL]->Connection OK!
23:36:53 (engine) test 
23:36:53 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:36:53 (engine) [SQL]->Exec [Done]:Resource id #16
23:36:53 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:36:54 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:36:54 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:36:54 (engine) [SQL]->Connecting to database:
23:36:54 (engine) [SQL]->Connection OK!
23:36:54 (engine) test 
23:36:54 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:36:54 (engine) [SQL]->Exec [Done]:Resource id #16
23:36:54 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:36:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:36:55 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:36:55 (engine) [SQL]->Connecting to database:
23:36:55 (engine) [SQL]->Connection OK!
23:36:55 (engine) test 
23:36:55 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:36:55 (engine) [SQL]->Exec [Done]:Resource id #16
23:36:55 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:36:55 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:36:55 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:36:55 (engine) [SQL]->Connecting to database:
23:36:55 (engine) [SQL]->Connection OK!
23:36:55 (engine) test 
23:36:55 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:36:55 (engine) [SQL]->Exec [Done]:Resource id #16
23:36:55 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "12"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "1"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(1) "4"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(2) "11"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "7"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:37:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:37:09 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:37:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:37:09 (engine) [SQL]->Connecting to database:
23:37:09 (engine) [SQL]->Connection OK!
23:37:09 (engine) test 
23:37:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:37:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:09 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:37:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:37:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:09 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:37:09 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:37:09 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:37:09 (engine) [SQL]->Connecting to database:
23:37:09 (engine) [SQL]->Connection OK!
23:37:09 (engine) test 
23:37:09 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:37:09 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:09 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:09 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:37:09 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:37:09 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:37:10 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:37:10 (engine) [SQL]->Connecting to database:
23:37:10 (engine) [SQL]->Connection OK!
23:37:10 (engine) test 
23:37:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:37:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:10 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:37:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:37:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:37:10 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:37:10 (engine) [SQL]->Connecting to database:
23:37:10 (engine) [SQL]->Connection OK!
23:37:10 (engine) test 
23:37:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:37:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:10 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:37:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:37:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:10 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:37:10 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:37:10 (engine) [SQL]->Connecting to database:
23:37:10 (engine) [SQL]->Connection OK!
23:37:10 (engine) test 
23:37:10 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:37:10 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:10 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:10 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:37:10 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:37:10 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:11 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:11 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:11 (engine) [SQL]->Connecting to database:
23:37:11 (engine) [SQL]->Connection OK!
23:37:11 (engine) test 
23:37:11 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:11 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:11 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:11 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:37:11 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:11 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:12 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:12 (engine) [SQL]->Connecting to database:
23:37:12 (engine) [SQL]->Connection OK!
23:37:12 (engine) test 
23:37:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:12 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:37:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:13 (engine) [SQL]->Connecting to database:
23:37:13 (engine) [SQL]->Connection OK!
23:37:13 (engine) test 
23:37:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:37:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:13 (engine) [SQL]->Connecting to database:
23:37:13 (engine) [SQL]->Connection OK!
23:37:13 (engine) test 
23:37:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:37:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:13 (engine) [SQL]->Connecting to database:
23:37:13 (engine) [SQL]->Connection OK!
23:37:13 (engine) test 
23:37:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:37:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:13 (engine) [SQL]->Connecting to database:
23:37:13 (engine) [SQL]->Connection OK!
23:37:13 (engine) test 
23:37:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:37:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:37:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:37:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:37:13 (engine) [SQL]->Connecting to database:
23:37:13 (engine) [SQL]->Connection OK!
23:37:13 (engine) test 
23:37:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:37:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:37:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:37:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:37:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:37:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:40:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:40:43 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:40:43 (engine) [SQL]->Connecting to database:
23:40:43 (engine) [SQL]->Connection OK!
23:40:43 (engine) test 
23:40:43 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:40:43 (engine) [SQL]->Exec [Done]:Resource id #16
23:40:43 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:40:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:40:43 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:40:43 (engine) [SQL]->Connecting to database:
23:40:43 (engine) [SQL]->Connection OK!
23:40:43 (engine) test 
23:40:43 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:40:43 (engine) [SQL]->Exec [Done]:Resource id #16
23:40:43 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:40:43 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:40:43 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:40:43 (engine) [SQL]->Connecting to database:
23:40:43 (engine) [SQL]->Connection OK!
23:40:43 (engine) test 
23:40:43 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:40:43 (engine) [SQL]->Exec [Done]:Resource id #16
23:40:43 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:40:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:40:48 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:40:48 (engine) [SQL]->Connecting to database:
23:40:48 (engine) [SQL]->Connection OK!
23:40:48 (engine) test 
23:40:48 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:40:48 (engine) [SQL]->Exec [Done]:Resource id #16
23:40:48 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(17) "Ultricies Commodo"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1946-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:40:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:40:48 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:40:48 (engine) [SQL]->Connecting to database:
23:40:48 (engine) [SQL]->Connection OK!
23:40:48 (engine) test 
23:40:48 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 91

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
23:40:48 (engine) [SQL]->Exec [Done]:Resource id #16
23:40:48 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "12"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "1"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["CalculatedTaxAmount"]=>
      string(1) "4"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(2) "11"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(1) "7"
    }
  }
  ["total"]=>
  int(1)
}

23:43:04 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(47) "{\"action\":\"Admin.ClearDatabase\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:43:04 (engine) [JSON (Admin.ClearDatabase)]->int(1)

23:43:04 (engine) [SQL]->Connecting to database:
23:43:04 (engine) [SQL]->Connection OK!
23:43:04 (engine) test 
23:43:04 (engine) [SQL]->Exec:DROP TABLE IF EXISTS `InstitutionBudgetTable` ,
			`InstitutionTable` ,
			`SystemTable` ,
			`TaxPayerProgramTable` ,
			`TaxPayerTable` ,
			`TaxProgramTable` ,
			`TaxYearTable` ;
23:43:05 (engine) [SQL]->Exec [Done]:
23:43:05 (engine) [SQL]->Exec:DROP TABLE IF EXISTS `InstitutionBudgetTable` ,
			`InstitutionTable` ,
			`SystemTable` ,
			`TaxPayerProgramTable` ,
			`TaxPayerTable` ,
			`TaxProgramTable` ,
			`TaxYearTable` ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:
		CREATE TABLE IF NOT EXISTS `InstitutionBudgetTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `TaxYearID` int(11) NOT NULL,
		  `InstitutionID` int(11) NOT NULL,
		  `ConfirmedDate` date,
		  PRIMARY KEY (`ID`),
		  KEY `TaxYearID` (`TaxYearID`),
		  KEY `InstitutionID` (`InstitutionID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `InstitutionTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `Code` text NOT NULL,
		  PRIMARY KEY (`ID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `SystemTable` (
		  `ID` int(11) NOT NULL,
		  `Date` datetime NOT NULL,
		  PRIMARY KEY (`ID`)
		) ENGINE=MyISAM DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxPayerProgramTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `TaxPayerID` int(11) NOT NULL,
		  `TaxProgramID` int(11) NOT NULL,
		  `YearsRequired` int(11) NOT NULL,
		  `CalculatedTaxAmount` int(11) NOT NULL,
		  `BenefitsAccumulated` int(11) NOT NULL,
		  `ConfirmedDate` date NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `TaxPayerID` (`TaxPayerID`),
		  KEY `TaxProgramID` (`TaxProgramID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxPayerTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `Code` text NOT NULL,
		  `Income` int(11) NOT NULL,
		  `ParentID` int(11),
		  `DateOfCreation` date NOT NULL,
		  `Type` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `ParentID` (`ParentID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxProgramTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Name` text NOT NULL,
		  `PredictedBudget` int(11) NOT NULL,
		  `PredictedUsers` int(11) NOT NULL,
		  `InstitutionBudgetID` int(11) NOT NULL,
		  `ExtendsProgramID` int(11),
		  `MinimumYears` int(11) NOT NULL,
		  `BenefitsExpireInYears` int(11) NOT NULL,
		  `BenefitsApplyTo` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  KEY `InstitutionBudgetID` (`InstitutionBudgetID`),
		  KEY `ExtendsProgramID` (`ExtendsProgramID`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:CREATE TABLE IF NOT EXISTS `TaxYearTable` (
		  `ID` int(11) NOT NULL AUTO_INCREMENT,
		  `Year` year(4) NOT NULL,
		  `SubmitDate` date NOT NULL,
		  `StartDate` date NOT NULL,
		  `EndDate` date NOT NULL,
		  `State` int(1) NOT NULL,
		  PRIMARY KEY (`ID`),
		  UNIQUE KEY `Year` (`Year`)
		) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:ALTER TABLE `InstitutionBudgetTable`
		  ADD CONSTRAINT `InstitutionBudgetTable_ibfk_2` FOREIGN KEY (`InstitutionID`) REFERENCES `InstitutionTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `InstitutionBudgetTable_ibfk_1` FOREIGN KEY (`TaxYearID`) REFERENCES `TaxYearTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:ALTER TABLE `TaxPayerProgramTable`
		  ADD CONSTRAINT `TaxPayerProgramTable_ibfk_2` FOREIGN KEY (`TaxProgramID`) REFERENCES `TaxProgramTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `TaxPayerProgramTable_ibfk_1` FOREIGN KEY (`TaxPayerID`) REFERENCES `TaxPayerTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:ALTER TABLE `TaxPayerTable`
		  ADD CONSTRAINT `TaxPayerTable_ibfk_1` FOREIGN KEY (`ParentID`) REFERENCES `TaxPayerTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [SQL]->Exec:ALTER TABLE `TaxProgramTable`
		  ADD CONSTRAINT `TaxProgramTable_ibfk_2` FOREIGN KEY (`ExtendsProgramID`) REFERENCES `TaxProgramTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE,
		  ADD CONSTRAINT `TaxProgramTable_ibfk_1` FOREIGN KEY (`InstitutionBudgetID`) REFERENCES `InstitutionBudgetTable` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE;
			
23:43:05 (engine) [SQL]->Exec [Done]:1
23:43:05 (engine) [RESPONSE (Admin.ClearDatabase)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  NULL
  ["total"]=>
  int(1)
}

23:43:09 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(45) "{\"action\":\"Admin.CreateWorld\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:43:09 (engine) [JSON (Admin.CreateWorld)]->int(1)

23:43:09 (engine) [SQL]->Connecting to database:
23:43:09 (engine) [SQL]->Connection OK!
23:43:09 (engine) test 
23:43:09 (engine) [SQL]->Exec:insert into SystemTable (ID, Date) Values
			(1, STR_TO_DATE('Jan/01/2012', '%M/%d/%Y'));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of education', 'I00001');
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Social Ministry', 'I00002');
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of the defence', 'I00003');
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into InstitutionTable (Name, Code) VALUES ('Ministry of the interior', 'I00004');
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Nascetur','T10001',0,'80804',DATE_SUB(curdate(),interval 97 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Convallis','T10002',0,'40944',DATE_SUB(curdate(),interval 96 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Fringilla','T10003',0,'16112',DATE_SUB(curdate(),interval 87 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Congue','T10004',0,'117625',DATE_SUB(curdate(),interval 89 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ipsum','T10005',0,'45659',DATE_SUB(curdate(),interval 39 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Volutpat','T10006',0,'24631',DATE_SUB(curdate(),interval 20 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Sodales','T10007',0,'162973',DATE_SUB(curdate(),interval 92 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Praesent','T10008',0,'107814',DATE_SUB(curdate(),interval 77 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Aenean','T10009',0,'145347',DATE_SUB(curdate(),interval 49 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Sagittis','T10010',0,'90003',DATE_SUB(curdate(),interval 48 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Mauris','T10011',0,'68773',DATE_SUB(curdate(),interval 86 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Sagittis','T10012',0,'148010',DATE_SUB(curdate(),interval 81 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Non','T10013',0,'39607',DATE_SUB(curdate(),interval 46 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Tempor','T10014',0,'132673',DATE_SUB(curdate(),interval 49 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Montes','T10015',0,'81828',DATE_SUB(curdate(),interval 71 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Fermentum','T10016',0,'94174',DATE_SUB(curdate(),interval 73 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Facilisis','T10017',0,'43964',DATE_SUB(curdate(),interval 13 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Eros','T10018',0,'123772',DATE_SUB(curdate(),interval 32 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Eget','T10019',0,'36490',DATE_SUB(curdate(),interval 77 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Aliquam','T10020',0,'116356',DATE_SUB(curdate(),interval 90 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Tristique','T10021',0,'71299',DATE_SUB(curdate(),interval 36 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Elit','T10022',0,'171000',DATE_SUB(curdate(),interval 9 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Fringilla','T10023',0,'159380',DATE_SUB(curdate(),interval 36 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Et','T10024',0,'18265',DATE_SUB(curdate(),interval 10 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Justo','T10025',0,'48143',DATE_SUB(curdate(),interval 60 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Nibh','T10026',0,'183837',DATE_SUB(curdate(),interval 18 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Imperdiet','T10027',0,'190396',DATE_SUB(curdate(),interval 72 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Venenatis','T10028',0,'122686',DATE_SUB(curdate(),interval 92 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Non','T10029',0,'55546',DATE_SUB(curdate(),interval 41 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Id','T10030',0,'100740',DATE_SUB(curdate(),interval 49 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Eget','T10031',0,'169920',DATE_SUB(curdate(),interval 61 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Rutrum','T10032',0,'142574',DATE_SUB(curdate(),interval 3 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Proin','T10033',0,'125632',DATE_SUB(curdate(),interval 23 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quam Massa','T10034',0,'82893',DATE_SUB(curdate(),interval 64 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Nec','T10035',0,'70499',DATE_SUB(curdate(),interval 67 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Malesuada','T10036',0,'117618',DATE_SUB(curdate(),interval 21 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Lacinia','T10037',0,'125673',DATE_SUB(curdate(),interval 93 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Id','T10038',0,'82697',DATE_SUB(curdate(),interval 39 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Fringilla','T10039',0,'928',DATE_SUB(curdate(),interval 0 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Vestibulum','T10040',0,'6953',DATE_SUB(curdate(),interval 46 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eros Velit','T10041',0,'137830',DATE_SUB(curdate(),interval 48 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Imperdiet','T10042',0,'23949',DATE_SUB(curdate(),interval 86 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Dis','T10043',0,'106473',DATE_SUB(curdate(),interval 37 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Mauris','T10044',0,'116808',DATE_SUB(curdate(),interval 37 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis 
','T10045',0,'59927',DATE_SUB(curdate(),interval 99 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Lorem','T10046',0,'76052',DATE_SUB(curdate(),interval 78 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Turpis','T10047',0,'155632',DATE_SUB(curdate(),interval 18 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Quam','T10048',0,'127260',DATE_SUB(curdate(),interval 78 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Vitae','T10049',0,'51558',DATE_SUB(curdate(),interval 69 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Vitae','T10050',0,'109076',DATE_SUB(curdate(),interval 90 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sit','T10051',0,'53877',DATE_SUB(curdate(),interval 29 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Ultrices','T10052',0,'132392',DATE_SUB(curdate(),interval 18 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Tincidunt','T10053',0,'33864',DATE_SUB(curdate(),interval 41 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus 
','T10054',0,'37484',DATE_SUB(curdate(),interval 65 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Malesuada','T10055',0,'166227',DATE_SUB(curdate(),interval 3 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Et','T10056',0,'162084',DATE_SUB(curdate(),interval 25 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Augue','T10057',0,'188098',DATE_SUB(curdate(),interval 22 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Mus','T10058',0,'24213',DATE_SUB(curdate(),interval 29 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Enim','T10059',0,'116694',DATE_SUB(curdate(),interval 76 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Aliquet','T10060',0,'189262',DATE_SUB(curdate(),interval 31 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Aliquam','T10061',0,'144000',DATE_SUB(curdate(),interval 89 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Sed','T10062',0,'106530',DATE_SUB(curdate(),interval 60 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Risus','T10063',0,'127318',DATE_SUB(curdate(),interval 65 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Eget','T10064',0,'181176',DATE_SUB(curdate(),interval 63 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Et','T10065',0,'169209',DATE_SUB(curdate(),interval 97 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Malesuada','T10066',0,'51297',DATE_SUB(curdate(),interval 90 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Ultricies','T10067',0,'131536',DATE_SUB(curdate(),interval 60 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Odio','T10068',0,'182231',DATE_SUB(curdate(),interval 29 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Aliquet','T10069',0,'34826',DATE_SUB(curdate(),interval 38 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Lectus','T10070',0,'196905',DATE_SUB(curdate(),interval 41 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Euismod','T10071',0,'12620',DATE_SUB(curdate(),interval 91 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Non','T10072',0,'105176',DATE_SUB(curdate(),interval 58 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quam Commodo','T10073',0,'108859',DATE_SUB(curdate(),interval 14 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Vulputate','T10074',0,'8688',DATE_SUB(curdate(),interval 70 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Vivamus','T10075',0,'59609',DATE_SUB(curdate(),interval 73 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Varius','T10076',0,'3702',DATE_SUB(curdate(),interval 2 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Nulla','T10077',0,'81912',DATE_SUB(curdate(),interval 38 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus A','T10078',0,'158102',DATE_SUB(curdate(),interval 97 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Ultrices','T10079',0,'174353',DATE_SUB(curdate(),interval 8 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Fringilla','T10080',0,'133331',DATE_SUB(curdate(),interval 64 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Varius','T10081',0,'157106',DATE_SUB(curdate(),interval 10 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Id','T10082',0,'161040',DATE_SUB(curdate(),interval 65 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Imperdiet','T10083',0,'75716',DATE_SUB(curdate(),interval 84 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Fringilla','T10084',0,'171986',DATE_SUB(curdate(),interval 15 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Et','T10085',0,'106343',DATE_SUB(curdate(),interval 49 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Tempor','T10086',0,'91827',DATE_SUB(curdate(),interval 68 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Ipsum','T10087',0,'152416',DATE_SUB(curdate(),interval 100 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Praesent','T10088',0,'127273',DATE_SUB(curdate(),interval 50 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Massa','T10089',0,'121342',DATE_SUB(curdate(),interval 65 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Ut','T10090',0,'60775',DATE_SUB(curdate(),interval 78 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ut','T10091',0,'123231',DATE_SUB(curdate(),interval 83 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Montes','T10092',0,'196074',DATE_SUB(curdate(),interval 67 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Nunc','T10093',0,'31685',DATE_SUB(curdate(),interval 41 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Gravida','T10094',0,'17579',DATE_SUB(curdate(),interval 1 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Commodo','T10095',0,'1712',DATE_SUB(curdate(),interval 68 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Dictum','T10096',0,'35024',DATE_SUB(curdate(),interval 92 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Convallis','T10097',0,'113959',DATE_SUB(curdate(),interval 32 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Sed','T10098',0,'19728',DATE_SUB(curdate(),interval 71 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Condimentum','T10099',0,'107292',DATE_SUB(curdate(),interval 64 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Malesuada','T10100',0,'60989',DATE_SUB(curdate(),interval 94 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Penatibus','T10101',0,'69116',DATE_SUB(curdate(),interval 87 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Nisi','T10102',0,'174670',DATE_SUB(curdate(),interval 2 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Libero','T10103',0,'141284',DATE_SUB(curdate(),interval 56 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Libero','T10104',0,'96111',DATE_SUB(curdate(),interval 59 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Condimentum','T10105',0,'182271',DATE_SUB(curdate(),interval 86 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sit','T10106',0,'113197',DATE_SUB(curdate(),interval 48 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Imperdiet','T10107',0,'23163',DATE_SUB(curdate(),interval 92 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Massa','T10108',0,'170423',DATE_SUB(curdate(),interval 65 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Facilisis','T10109',0,'102276',DATE_SUB(curdate(),interval 97 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Turpis','T10110',0,'198898',DATE_SUB(curdate(),interval 92 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Vivamus','T10111',0,'95361',DATE_SUB(curdate(),interval 80 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Arcu','T10112',0,'77430',DATE_SUB(curdate(),interval 24 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Mi','T10113',0,'20586',DATE_SUB(curdate(),interval 94 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Eros','T10114',0,'82376',DATE_SUB(curdate(),interval 3 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Auctor','T10115',0,'189791',DATE_SUB(curdate(),interval 39 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Vulputate','T10116',0,'7759',DATE_SUB(curdate(),interval 84 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' 
','T10117',0,'159535',DATE_SUB(curdate(),interval 63 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Suspendisse','T10118',0,'108916',DATE_SUB(curdate(),interval 20 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Elit','T10119',0,'199006',DATE_SUB(curdate(),interval 7 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Sed','T10120',0,'64268',DATE_SUB(curdate(),interval 99 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Convallis','T10121',0,'183638',DATE_SUB(curdate(),interval 99 year));
23:43:09 (engine) [SQL]->Exec [Done]:1
23:43:09 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Ipsum','T10122',0,'4492',DATE_SUB(curdate(),interval 87 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Imperdiet','T10123',0,'51033',DATE_SUB(curdate(),interval 81 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Blandit','T10124',0,'127764',DATE_SUB(curdate(),interval 77 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Sed','T10125',0,'80238',DATE_SUB(curdate(),interval 78 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum A','T10126',0,'196118',DATE_SUB(curdate(),interval 72 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada A','T10127',0,'159448',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Ut','T10128',0,'186471',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Nulla','T10129',0,'5528',DATE_SUB(curdate(),interval 64 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Condimentum','T10130',0,'100115',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Nulla','T10131',0,'168919',DATE_SUB(curdate(),interval 80 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Ridiculus','T10132',0,'113051',DATE_SUB(curdate(),interval 90 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Malesuada','T10133',0,'134576',DATE_SUB(curdate(),interval 15 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien A','T10134',0,'174056',DATE_SUB(curdate(),interval 88 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Sodales','T10135',0,'165054',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Quis','T10136',0,'5065',DATE_SUB(curdate(),interval 33 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Nunc','T10137',0,'192997',DATE_SUB(curdate(),interval 79 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Et','T10138',0,'165429',DATE_SUB(curdate(),interval 12 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ut','T10139',0,'183720',DATE_SUB(curdate(),interval 27 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Ridiculus','T10140',0,'32966',DATE_SUB(curdate(),interval 7 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Ullamcorper','T10141',0,'44722',DATE_SUB(curdate(),interval 36 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Diam','T10142',0,'48375',DATE_SUB(curdate(),interval 12 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Augue','T10143',0,'21421',DATE_SUB(curdate(),interval 55 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Id','T10144',0,'175292',DATE_SUB(curdate(),interval 43 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Ultricies','T10145',0,'44340',DATE_SUB(curdate(),interval 29 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Condimentum','T10146',0,'82614',DATE_SUB(curdate(),interval 53 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Morbi','T10147',0,'159858',DATE_SUB(curdate(),interval 88 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Eget','T10148',0,'190156',DATE_SUB(curdate(),interval 26 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Donec','T10149',0,'125663',DATE_SUB(curdate(),interval 29 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nulla','T10150',0,'82650',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Hendrerit','T10151',0,'115440',DATE_SUB(curdate(),interval 76 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Est','T10152',0,'39007',DATE_SUB(curdate(),interval 84 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Consectetur','T10153',0,'25335',DATE_SUB(curdate(),interval 60 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Felis','T10154',0,'26077',DATE_SUB(curdate(),interval 18 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Luctus','T10155',0,'12378',DATE_SUB(curdate(),interval 69 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Amet','T10156',0,'190548',DATE_SUB(curdate(),interval 70 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Amet','T10157',0,'197726',DATE_SUB(curdate(),interval 45 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Odio','T10158',0,'97006',DATE_SUB(curdate(),interval 39 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Commodo','T10159',0,'30138',DATE_SUB(curdate(),interval 58 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Ultrices','T10160',0,'82646',DATE_SUB(curdate(),interval 81 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Felis','T10161',0,'82613',DATE_SUB(curdate(),interval 23 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Non','T10162',0,'82846',DATE_SUB(curdate(),interval 96 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Montes','T10163',0,'127600',DATE_SUB(curdate(),interval 37 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Neque','T10164',0,'12510',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nunc','T10165',0,'26239',DATE_SUB(curdate(),interval 62 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Gravida','T10166',0,'2325',DATE_SUB(curdate(),interval 37 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Pellentesque','T10167',0,'190064',DATE_SUB(curdate(),interval 19 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Quis','T10168',0,'1062',DATE_SUB(curdate(),interval 27 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Magna','T10169',0,'99718',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Sapien','T10170',0,'186836',DATE_SUB(curdate(),interval 43 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Mattis','T10171',0,'160378',DATE_SUB(curdate(),interval 88 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Lacinia','T10172',0,'110718',DATE_SUB(curdate(),interval 33 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Ac','T10173',0,'191549',DATE_SUB(curdate(),interval 37 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Non','T10174',0,'148793',DATE_SUB(curdate(),interval 98 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Nec','T10175',0,'34761',DATE_SUB(curdate(),interval 64 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Placerat','T10176',0,'182056',DATE_SUB(curdate(),interval 97 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Bibendum','T10177',0,'188879',DATE_SUB(curdate(),interval 56 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor A','T10178',0,'198859',DATE_SUB(curdate(),interval 71 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Potenti','T10179',0,'117671',DATE_SUB(curdate(),interval 61 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Pellentesque','T10180',0,'189671',DATE_SUB(curdate(),interval 58 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Ornare','T10181',0,'188983',DATE_SUB(curdate(),interval 12 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Magna','T10182',0,'21444',DATE_SUB(curdate(),interval 0 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Leo','T10183',0,'129384',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Eleifend','T10184',0,'80454',DATE_SUB(curdate(),interval 5 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ultrices','T10185',0,'123394',DATE_SUB(curdate(),interval 29 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Imperdiet','T10186',0,'199671',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Condimentum','T10187',0,'57925',DATE_SUB(curdate(),interval 6 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Placerat','T10188',0,'128859',DATE_SUB(curdate(),interval 56 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Neque','T10189',0,'136628',DATE_SUB(curdate(),interval 1 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Fringilla','T10190',0,'5344',DATE_SUB(curdate(),interval 66 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Ut','T10191',0,'20446',DATE_SUB(curdate(),interval 53 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Volutpat','T10192',0,'117835',DATE_SUB(curdate(),interval 19 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Mattis','T10193',0,'96925',DATE_SUB(curdate(),interval 7 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Ridiculus','T10194',0,'150475',DATE_SUB(curdate(),interval 22 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nulla','T10195',0,'58580',DATE_SUB(curdate(),interval 80 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Vel','T10196',0,'70745',DATE_SUB(curdate(),interval 42 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Tincidunt','T10197',0,'88721',DATE_SUB(curdate(),interval 81 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Magnis','T10198',0,'93146',DATE_SUB(curdate(),interval 90 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Arcu','T10199',0,'86029',DATE_SUB(curdate(),interval 37 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Elit','T10200',0,'114337',DATE_SUB(curdate(),interval 93 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Arcu','T10201',0,'6',DATE_SUB(curdate(),interval 4 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Lacinia','T10202',0,'53542',DATE_SUB(curdate(),interval 61 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Potenti Varius','T10203',0,'81462',DATE_SUB(curdate(),interval 7 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Diam','T10204',0,'99687',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Aenean','T10205',0,'165740',DATE_SUB(curdate(),interval 63 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Ultricies','T10206',0,'104746',DATE_SUB(curdate(),interval 56 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Proin','T10207',0,'186226',DATE_SUB(curdate(),interval 94 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Volutpat','T10208',0,'171697',DATE_SUB(curdate(),interval 20 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Nibh','T10209',0,'48306',DATE_SUB(curdate(),interval 9 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Facilisis','T10210',0,'141478',DATE_SUB(curdate(),interval 40 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nisl','T10211',0,'95940',DATE_SUB(curdate(),interval 57 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Sapien','T10212',0,'118375',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Massa','T10213',0,'59751',DATE_SUB(curdate(),interval 33 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Accumsan','T10214',0,'177774',DATE_SUB(curdate(),interval 58 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Sed','T10215',0,'102448',DATE_SUB(curdate(),interval 75 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Metus','T10216',0,'189645',DATE_SUB(curdate(),interval 89 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Placerat','T10217',0,'196071',DATE_SUB(curdate(),interval 84 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Magna','T10218',0,'49095',DATE_SUB(curdate(),interval 77 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Dui','T10219',0,'67304',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Luctus','T10220',0,'70362',DATE_SUB(curdate(),interval 62 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Ornare','T10221',0,'191203',DATE_SUB(curdate(),interval 6 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis Leo','T10222',0,'128272',DATE_SUB(curdate(),interval 25 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Lobortis','T10223',0,'199797',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Fermentum','T10224',0,'173927',DATE_SUB(curdate(),interval 76 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Commodo','T10225',0,'118743',DATE_SUB(curdate(),interval 84 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Ullamcorper','T10226',0,'120963',DATE_SUB(curdate(),interval 34 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Aenean','T10227',0,'3666',DATE_SUB(curdate(),interval 27 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Metus','T10228',0,'178229',DATE_SUB(curdate(),interval 22 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Et','T10229',0,'56536',DATE_SUB(curdate(),interval 49 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Aliquam','T10230',0,'148640',DATE_SUB(curdate(),interval 36 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Tortor','T10231',0,'68922',DATE_SUB(curdate(),interval 60 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna In','T10232',0,'71105',DATE_SUB(curdate(),interval 83 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Velit','T10233',0,'132461',DATE_SUB(curdate(),interval 60 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Velit','T10234',0,'188421',DATE_SUB(curdate(),interval 35 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Tincidunt','T10235',0,'124094',DATE_SUB(curdate(),interval 7 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nunc','T10236',0,'59381',DATE_SUB(curdate(),interval 35 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Sit','T10237',0,'169013',DATE_SUB(curdate(),interval 5 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Neque','T10238',0,'81546',DATE_SUB(curdate(),interval 58 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Lacinia','T10239',0,'36647',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Felis','T10240',0,'169235',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Facilisis','T10241',0,'126551',DATE_SUB(curdate(),interval 27 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Mollis','T10242',0,'125849',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Tincidunt','T10243',0,'12450',DATE_SUB(curdate(),interval 87 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Aenean','T10244',0,'43432',DATE_SUB(curdate(),interval 12 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Commodo','T10245',0,'34182',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Sit','T10246',0,'4729',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Mattis','T10247',0,'150',DATE_SUB(curdate(),interval 30 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Et','T10248',0,'65675',DATE_SUB(curdate(),interval 23 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Tincidunt','T10249',0,'102019',DATE_SUB(curdate(),interval 13 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Suscipit','T10250',0,'23013',DATE_SUB(curdate(),interval 7 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Placerat','T10251',0,'187431',DATE_SUB(curdate(),interval 15 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Lobortis','T10252',0,'54096',DATE_SUB(curdate(),interval 47 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Sodales','T10253',0,'183521',DATE_SUB(curdate(),interval 87 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Aenean','T10254',0,'169589',DATE_SUB(curdate(),interval 35 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Commodo','T10255',0,'129716',DATE_SUB(curdate(),interval 90 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Sapien','T10256',0,'25487',DATE_SUB(curdate(),interval 5 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel In','T10257',0,'36408',DATE_SUB(curdate(),interval 47 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Mi','T10258',0,'109070',DATE_SUB(curdate(),interval 16 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Ridiculus','T10259',0,'63260',DATE_SUB(curdate(),interval 1 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Condimentum','T10260',0,'97229',DATE_SUB(curdate(),interval 86 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Ante','T10261',0,'144074',DATE_SUB(curdate(),interval 4 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Arcu','T10262',0,'79846',DATE_SUB(curdate(),interval 49 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Accumsan','T10263',0,'77382',DATE_SUB(curdate(),interval 11 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Id','T10264',0,'32732',DATE_SUB(curdate(),interval 97 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Ultrices','T10265',0,'87382',DATE_SUB(curdate(),interval 93 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Ac','T10266',0,'18933',DATE_SUB(curdate(),interval 11 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Penatibus Tellus','T10267',0,'25632',DATE_SUB(curdate(),interval 10 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Mauris','T10268',0,'190985',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Lacus','T10269',0,'14829',DATE_SUB(curdate(),interval 36 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Parturient','T10270',0,'171236',DATE_SUB(curdate(),interval 66 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Id','T10271',0,'154650',DATE_SUB(curdate(),interval 55 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Vel','T10272',0,'101757',DATE_SUB(curdate(),interval 91 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo A','T10273',0,'167610',DATE_SUB(curdate(),interval 93 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Sagittis','T10274',0,'8534',DATE_SUB(curdate(),interval 39 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Vitae','T10275',0,'98857',DATE_SUB(curdate(),interval 34 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Faucibus','T10276',0,'73474',DATE_SUB(curdate(),interval 81 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Sodales','T10277',0,'33250',DATE_SUB(curdate(),interval 37 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nullam','T10278',0,'5744',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Vulputate','T10279',0,'196405',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim A','T10280',0,'186450',DATE_SUB(curdate(),interval 2 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Urna','T10281',0,'189385',DATE_SUB(curdate(),interval 36 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Purus','T10282',0,'151433',DATE_SUB(curdate(),interval 4 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque At','T10283',0,'77627',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Nulla','T10284',0,'149756',DATE_SUB(curdate(),interval 83 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Sed','T10285',0,'38652',DATE_SUB(curdate(),interval 11 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Risus','T10286',0,'109600',DATE_SUB(curdate(),interval 20 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Mauris','T10287',0,'45182',DATE_SUB(curdate(),interval 77 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Vestibulum','T10288',0,'156867',DATE_SUB(curdate(),interval 46 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Urna','T10289',0,'164355',DATE_SUB(curdate(),interval 63 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sit','T10290',0,'135632',DATE_SUB(curdate(),interval 89 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Interdum','T10291',0,'165373',DATE_SUB(curdate(),interval 53 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Ornare','T10292',0,'71239',DATE_SUB(curdate(),interval 1 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A 
','T10293',0,'26148',DATE_SUB(curdate(),interval 43 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Volutpat','T10294',0,'126220',DATE_SUB(curdate(),interval 80 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Molestie','T10295',0,'111648',DATE_SUB(curdate(),interval 23 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Nisl','T10296',0,'137383',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Facilisis','T10297',0,'115017',DATE_SUB(curdate(),interval 80 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat At','T10298',0,'135192',DATE_SUB(curdate(),interval 92 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Volutpat','T10299',0,'89808',DATE_SUB(curdate(),interval 14 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Condimentum','T10300',0,'32031',DATE_SUB(curdate(),interval 57 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Duis','T10301',0,'199453',DATE_SUB(curdate(),interval 12 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Lectus','T10302',0,'184309',DATE_SUB(curdate(),interval 18 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Nascetur','T10303',0,'81600',DATE_SUB(curdate(),interval 50 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Diam','T10304',0,'88833',DATE_SUB(curdate(),interval 90 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Elit','T10305',0,'138171',DATE_SUB(curdate(),interval 69 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Nec','T10306',0,'121844',DATE_SUB(curdate(),interval 59 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Arcu','T10307',0,'146674',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nulla','T10308',0,'103446',DATE_SUB(curdate(),interval 22 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Id','T10309',0,'68865',DATE_SUB(curdate(),interval 15 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Velit','T10310',0,'66497',DATE_SUB(curdate(),interval 63 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Dignissim','T10311',0,'25753',DATE_SUB(curdate(),interval 57 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Mollis','T10312',0,'92835',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Lobortis','T10313',0,'26042',DATE_SUB(curdate(),interval 87 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Dignissim','T10314',0,'91342',DATE_SUB(curdate(),interval 39 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Cursus','T10315',0,'67914',DATE_SUB(curdate(),interval 66 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Molestie','T10316',0,'175873',DATE_SUB(curdate(),interval 27 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Risus','T10317',0,'84421',DATE_SUB(curdate(),interval 51 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nulla','T10318',0,'28475',DATE_SUB(curdate(),interval 23 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Sollicitudin','T10319',0,'160641',DATE_SUB(curdate(),interval 33 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Et','T10320',0,'153894',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Risus','T10321',0,'60186',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Quis','T10322',0,'67145',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Lacus','T10323',0,'19594',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Sapien','T10324',0,'59871',DATE_SUB(curdate(),interval 91 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Morbi','T10325',0,'83507',DATE_SUB(curdate(),interval 69 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Varius','T10326',0,'185159',DATE_SUB(curdate(),interval 98 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Vitae','T10327',0,'60320',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Ipsum','T10328',0,'22275',DATE_SUB(curdate(),interval 42 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Ut','T10329',0,'72608',DATE_SUB(curdate(),interval 61 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Diam','T10330',0,'9329',DATE_SUB(curdate(),interval 11 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sem','T10331',0,'29798',DATE_SUB(curdate(),interval 91 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Eget','T10332',0,'161908',DATE_SUB(curdate(),interval 32 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae A','T10333',0,'2715',DATE_SUB(curdate(),interval 65 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Rutrum','T10334',0,'123400',DATE_SUB(curdate(),interval 62 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Ligula','T10335',0,'58631',DATE_SUB(curdate(),interval 67 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Ante','T10336',0,'16707',DATE_SUB(curdate(),interval 97 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Eget','T10337',0,'114053',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Gravida','T10338',0,'20890',DATE_SUB(curdate(),interval 52 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam At','T10339',0,'85109',DATE_SUB(curdate(),interval 89 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Elit','T10340',0,'41298',DATE_SUB(curdate(),interval 88 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Malesuada','T10341',0,'103495',DATE_SUB(curdate(),interval 25 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Blandit','T10342',0,'173433',DATE_SUB(curdate(),interval 83 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Vestibulum','T10343',0,'98512',DATE_SUB(curdate(),interval 4 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Ornare','T10344',0,'629',DATE_SUB(curdate(),interval 38 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Mollis','T10345',0,'73695',DATE_SUB(curdate(),interval 16 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Dis','T10346',0,'137481',DATE_SUB(curdate(),interval 96 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Nisl','T10347',0,'167074',DATE_SUB(curdate(),interval 43 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Nulla','T10348',0,'59954',DATE_SUB(curdate(),interval 81 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Hendrerit','T10349',0,'11863',DATE_SUB(curdate(),interval 42 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Donec','T10350',0,'49838',DATE_SUB(curdate(),interval 0 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Tortor','T10351',0,'9504',DATE_SUB(curdate(),interval 65 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Condimentum','T10352',0,'6668',DATE_SUB(curdate(),interval 34 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Odio','T10353',0,'101706',DATE_SUB(curdate(),interval 82 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Facilisis','T10354',0,'153257',DATE_SUB(curdate(),interval 60 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Odio','T10355',0,'5855',DATE_SUB(curdate(),interval 66 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Ipsum','T10356',0,'93420',DATE_SUB(curdate(),interval 91 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Dui','T10357',0,'65365',DATE_SUB(curdate(),interval 9 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Ornare','T10358',0,'20558',DATE_SUB(curdate(),interval 54 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Auctor','T10359',0,'38271',DATE_SUB(curdate(),interval 64 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A A','T10360',0,'195227',DATE_SUB(curdate(),interval 83 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Mus','T10361',0,'127900',DATE_SUB(curdate(),interval 50 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Ante','T10362',0,'20475',DATE_SUB(curdate(),interval 99 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Id','T10363',0,'129279',DATE_SUB(curdate(),interval 65 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Nisl','T10364',0,'111280',DATE_SUB(curdate(),interval 61 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Vehicula','T10365',0,'140998',DATE_SUB(curdate(),interval 9 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Etiam','T10366',0,'126504',DATE_SUB(curdate(),interval 78 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Id','T10367',0,'82525',DATE_SUB(curdate(),interval 16 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Malesuada','T10368',0,'196834',DATE_SUB(curdate(),interval 68 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Magna','T10369',0,'35272',DATE_SUB(curdate(),interval 55 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Mattis','T10370',0,'108698',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Cursus','T10371',0,'137568',DATE_SUB(curdate(),interval 87 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Aliquet','T10372',0,'95614',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Ac','T10373',0,'7222',DATE_SUB(curdate(),interval 59 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Eros','T10374',0,'72744',DATE_SUB(curdate(),interval 95 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Nunc','T10375',0,'21606',DATE_SUB(curdate(),interval 54 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Eu','T10376',0,'43235',DATE_SUB(curdate(),interval 3 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Enim','T10377',0,'118508',DATE_SUB(curdate(),interval 75 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Blandit','T10378',0,'156440',DATE_SUB(curdate(),interval 8 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Magnis','T10379',0,'190551',DATE_SUB(curdate(),interval 63 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Quis','T10380',0,'114519',DATE_SUB(curdate(),interval 85 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Non','T10381',0,'85690',DATE_SUB(curdate(),interval 61 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Suspendisse','T10382',0,'110733',DATE_SUB(curdate(),interval 77 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Velit','T10383',0,'62183',DATE_SUB(curdate(),interval 74 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Auctor','T10384',0,'154431',DATE_SUB(curdate(),interval 47 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Risus','T10385',0,'43014',DATE_SUB(curdate(),interval 59 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Ullamcorper','T10386',0,'134514',DATE_SUB(curdate(),interval 83 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Magna','T10387',0,'91189',DATE_SUB(curdate(),interval 18 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Dui','T10388',0,'4665',DATE_SUB(curdate(),interval 67 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Faucibus','T10389',0,'54950',DATE_SUB(curdate(),interval 92 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Tempus','T10390',0,'136883',DATE_SUB(curdate(),interval 82 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Ullamcorper','T10391',0,'109220',DATE_SUB(curdate(),interval 24 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Varius','T10392',0,'142753',DATE_SUB(curdate(),interval 44 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Luctus','T10393',0,'6593',DATE_SUB(curdate(),interval 18 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Fermentum','T10394',0,'2065',DATE_SUB(curdate(),interval 39 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Et','T10395',0,'115000',DATE_SUB(curdate(),interval 39 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Leo','T10396',0,'11406',DATE_SUB(curdate(),interval 13 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Morbi','T10397',0,'9328',DATE_SUB(curdate(),interval 29 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Urna','T10398',0,'21304',DATE_SUB(curdate(),interval 65 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui A','T10399',0,'178864',DATE_SUB(curdate(),interval 25 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Non','T10400',0,'138176',DATE_SUB(curdate(),interval 66 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Scelerisque','T10401',0,'167503',DATE_SUB(curdate(),interval 46 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Commodo','T10402',0,'171288',DATE_SUB(curdate(),interval 76 year));
23:43:10 (engine) [SQL]->Exec [Done]:1
23:43:10 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Quis','T10403',0,'29450',DATE_SUB(curdate(),interval 81 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Nisi','T10404',0,'188200',DATE_SUB(curdate(),interval 8 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum In','T10405',0,'74783',DATE_SUB(curdate(),interval 70 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Nascetur','T10406',0,'69314',DATE_SUB(curdate(),interval 44 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Id','T10407',0,'138782',DATE_SUB(curdate(),interval 10 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Turpis','T10408',0,'151556',DATE_SUB(curdate(),interval 38 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Laoreet','T10409',0,'169782',DATE_SUB(curdate(),interval 54 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Fermentum','T10410',0,'59654',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Tristique','T10411',0,'113238',DATE_SUB(curdate(),interval 16 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Phasellus','T10412',0,'49283',DATE_SUB(curdate(),interval 18 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Euismod','T10413',0,'176426',DATE_SUB(curdate(),interval 21 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Vestibulum','T10414',0,'131723',DATE_SUB(curdate(),interval 23 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Blandit','T10415',0,'67556',DATE_SUB(curdate(),interval 32 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Diam','T10416',0,'140887',DATE_SUB(curdate(),interval 85 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Proin','T10417',0,'76795',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Ut','T10418',0,'178248',DATE_SUB(curdate(),interval 39 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Sociis','T10419',0,'112406',DATE_SUB(curdate(),interval 78 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Etiam','T10420',0,'192688',DATE_SUB(curdate(),interval 46 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Et','T10421',0,'134592',DATE_SUB(curdate(),interval 53 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Morbi','T10422',0,'152678',DATE_SUB(curdate(),interval 54 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Tristique','T10423',0,'172479',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Turpis','T10424',0,'53472',DATE_SUB(curdate(),interval 89 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Ornare','T10425',0,'4312',DATE_SUB(curdate(),interval 38 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sapien','T10426',0,'154870',DATE_SUB(curdate(),interval 46 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Ultricies','T10427',0,'47786',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem A','T10428',0,'158854',DATE_SUB(curdate(),interval 57 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Et','T10429',0,'20631',DATE_SUB(curdate(),interval 12 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas 
','T10430',0,'133208',DATE_SUB(curdate(),interval 48 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Auctor','T10431',0,'180860',DATE_SUB(curdate(),interval 16 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Condimentum','T10432',0,'10404',DATE_SUB(curdate(),interval 21 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Mollis','T10433',0,'118860',DATE_SUB(curdate(),interval 15 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Nec','T10434',0,'123589',DATE_SUB(curdate(),interval 36 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Molestie','T10435',0,'138288',DATE_SUB(curdate(),interval 85 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Mus','T10436',0,'84690',DATE_SUB(curdate(),interval 10 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Dui','T10437',0,'45874',DATE_SUB(curdate(),interval 75 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nulla','T10438',0,'46923',DATE_SUB(curdate(),interval 36 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Et','T10439',0,'105062',DATE_SUB(curdate(),interval 52 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Ornare','T10440',0,'146908',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare In','T10441',0,'58032',DATE_SUB(curdate(),interval 64 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Sed','T10442',0,'198782',DATE_SUB(curdate(),interval 40 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Ac','T10443',0,'50470',DATE_SUB(curdate(),interval 83 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Lacus','T10444',0,'186279',DATE_SUB(curdate(),interval 12 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Pellentesque','T10445',0,'175141',DATE_SUB(curdate(),interval 60 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Eleifend','T10446',0,'191286',DATE_SUB(curdate(),interval 48 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Ridiculus','T10447',0,'199824',DATE_SUB(curdate(),interval 56 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Cursus','T10448',0,'138678',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Ac','T10449',0,'69458',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Nec','T10450',0,'32494',DATE_SUB(curdate(),interval 66 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Consectetur','T10451',0,'96169',DATE_SUB(curdate(),interval 19 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Ut','T10452',0,'64315',DATE_SUB(curdate(),interval 29 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Facilisis','T10453',0,'177719',DATE_SUB(curdate(),interval 63 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Et','T10454',0,'21838',DATE_SUB(curdate(),interval 56 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Quis','T10455',0,'23330',DATE_SUB(curdate(),interval 38 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Etiam','T10456',0,'19162',DATE_SUB(curdate(),interval 91 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Sodales','T10457',0,'132886',DATE_SUB(curdate(),interval 69 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Tempus','T10458',0,'68373',DATE_SUB(curdate(),interval 81 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Accumsan','T10459',0,'1687',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Ipsum','T10460',0,'125077',DATE_SUB(curdate(),interval 81 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Id','T10461',0,'87427',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Massa','T10462',0,'78346',DATE_SUB(curdate(),interval 69 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Facilisis','T10463',0,'14316',DATE_SUB(curdate(),interval 50 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Nibh','T10464',0,'80213',DATE_SUB(curdate(),interval 11 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Interdum','T10465',0,'159448',DATE_SUB(curdate(),interval 39 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Suscipit','T10466',0,'41127',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt In','T10467',0,'93294',DATE_SUB(curdate(),interval 19 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Eu','T10468',0,'944',DATE_SUB(curdate(),interval 7 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sodales','T10469',0,'181256',DATE_SUB(curdate(),interval 97 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Mi','T10470',0,'130118',DATE_SUB(curdate(),interval 64 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Scelerisque','T10471',0,'27884',DATE_SUB(curdate(),interval 12 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Dui','T10472',0,'47364',DATE_SUB(curdate(),interval 50 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sem','T10473',0,'178971',DATE_SUB(curdate(),interval 50 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Tristique','T10474',0,'126502',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Tristique','T10475',0,'66349',DATE_SUB(curdate(),interval 86 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Ultricies','T10476',0,'186009',DATE_SUB(curdate(),interval 80 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Donec','T10477',0,'152301',DATE_SUB(curdate(),interval 77 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Ut','T10478',0,'81863',DATE_SUB(curdate(),interval 95 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit 
','T10479',0,'13109',DATE_SUB(curdate(),interval 2 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Convallis','T10480',0,'104778',DATE_SUB(curdate(),interval 70 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Magna','T10481',0,'38720',DATE_SUB(curdate(),interval 51 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Id','T10482',0,'128915',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sapien','T10483',0,'138492',DATE_SUB(curdate(),interval 11 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Euismod','T10484',0,'182519',DATE_SUB(curdate(),interval 9 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Lacus','T10485',0,'171522',DATE_SUB(curdate(),interval 59 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Velit','T10486',0,'106778',DATE_SUB(curdate(),interval 22 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit In','T10487',0,'48856',DATE_SUB(curdate(),interval 91 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Semper','T10488',0,'120022',DATE_SUB(curdate(),interval 24 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Suspendisse','T10489',0,'149565',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Enim','T10490',0,'107988',DATE_SUB(curdate(),interval 55 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Vivamus','T10491',0,'132166',DATE_SUB(curdate(),interval 68 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Mollis','T10492',0,'154524',DATE_SUB(curdate(),interval 31 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Lectus','T10493',0,'181377',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Massa','T10494',0,'110833',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Maecenas','T10495',0,'123541',DATE_SUB(curdate(),interval 95 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Interdum','T10496',0,'36047',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Luctus','T10497',0,'91934',DATE_SUB(curdate(),interval 63 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius ','T10498',0,'35248',DATE_SUB(curdate(),interval 69 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Ullamcorper','T10499',0,'74139',DATE_SUB(curdate(),interval 8 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Pellentesque','T10500',0,'80126',DATE_SUB(curdate(),interval 66 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Eget','T10501',0,'198347',DATE_SUB(curdate(),interval 67 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Massa','T10502',0,'76700',DATE_SUB(curdate(),interval 79 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Lorem','T10503',0,'146098',DATE_SUB(curdate(),interval 92 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Non','T10504',0,'132899',DATE_SUB(curdate(),interval 23 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Tortor','T10505',0,'172375',DATE_SUB(curdate(),interval 16 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Congue','T10506',0,'169687',DATE_SUB(curdate(),interval 35 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Interdum','T10507',0,'88541',DATE_SUB(curdate(),interval 28 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Leo','T10508',0,'188743',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Elit','T10509',0,'161335',DATE_SUB(curdate(),interval 90 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus Cursus','T10510',0,'137524',DATE_SUB(curdate(),interval 83 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Magna','T10511',0,'147333',DATE_SUB(curdate(),interval 41 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Odio','T10512',0,'128186',DATE_SUB(curdate(),interval 16 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Volutpat','T10513',0,'65374',DATE_SUB(curdate(),interval 65 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Donec','T10514',0,'980',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Eget','T10515',0,'140360',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Duis Dictum','T10516',0,'178571',DATE_SUB(curdate(),interval 44 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Diam','T10517',0,'68185',DATE_SUB(curdate(),interval 6 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Dui','T10518',0,'177600',DATE_SUB(curdate(),interval 8 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Magna','T10519',0,'98294',DATE_SUB(curdate(),interval 78 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Id','T10520',0,'188623',DATE_SUB(curdate(),interval 55 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Et','T10521',0,'40050',DATE_SUB(curdate(),interval 17 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Nisi','T10522',0,'118447',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Blandit','T10523',0,'119316',DATE_SUB(curdate(),interval 95 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum A','T10524',0,'77098',DATE_SUB(curdate(),interval 52 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Dui','T10525',0,'116560',DATE_SUB(curdate(),interval 7 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Dis','T10526',0,'31946',DATE_SUB(curdate(),interval 20 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Ornare','T10527',0,'195422',DATE_SUB(curdate(),interval 12 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Molestie','T10528',0,'134484',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Sed','T10529',0,'118988',DATE_SUB(curdate(),interval 64 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Placerat','T10530',0,'95038',DATE_SUB(curdate(),interval 73 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Ipsum','T10531',0,'134857',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Sed','T10532',0,'188250',DATE_SUB(curdate(),interval 75 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Justo','T10533',0,'165761',DATE_SUB(curdate(),interval 54 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper In','T10534',0,'148555',DATE_SUB(curdate(),interval 9 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Morbi','T10535',0,'42313',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Vehicula','T10536',0,'168430',DATE_SUB(curdate(),interval 83 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Sed','T10537',0,'93157',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Rutrum','T10538',0,'113013',DATE_SUB(curdate(),interval 10 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Placerat','T10539',0,'105244',DATE_SUB(curdate(),interval 57 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Et','T10540',0,'64818',DATE_SUB(curdate(),interval 8 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Lobortis','T10541',0,'125296',DATE_SUB(curdate(),interval 99 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Metus','T10542',0,'15329',DATE_SUB(curdate(),interval 78 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Sagittis','T10543',0,'40901',DATE_SUB(curdate(),interval 73 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Accumsan','T10544',0,'111908',DATE_SUB(curdate(),interval 93 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus Rhoncus','T10545',0,'152669',DATE_SUB(curdate(),interval 10 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada In','T10546',0,'42695',DATE_SUB(curdate(),interval 98 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Dignissim','T10547',0,'110597',DATE_SUB(curdate(),interval 87 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis A','T10548',0,'190443',DATE_SUB(curdate(),interval 20 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Sit','T10549',0,'37005',DATE_SUB(curdate(),interval 17 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Sollicitudin','T10550',0,'190515',DATE_SUB(curdate(),interval 3 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Tempus','T10551',0,'153263',DATE_SUB(curdate(),interval 72 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Vitae','T10552',0,'130192',DATE_SUB(curdate(),interval 69 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Ut','T10553',0,'159099',DATE_SUB(curdate(),interval 32 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Sit','T10554',0,'59304',DATE_SUB(curdate(),interval 31 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Commodo','T10555',0,'35473',DATE_SUB(curdate(),interval 96 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Tincidunt','T10556',0,'30900',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Tellus','T10557',0,'185594',DATE_SUB(curdate(),interval 66 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Libero','T10558',0,'138660',DATE_SUB(curdate(),interval 15 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Sociis','T10559',0,'174641',DATE_SUB(curdate(),interval 24 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Dui','T10560',0,'185771',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Scelerisque','T10561',0,'90824',DATE_SUB(curdate(),interval 68 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Praesent','T10562',0,'198332',DATE_SUB(curdate(),interval 48 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Vitae','T10563',0,'87562',DATE_SUB(curdate(),interval 32 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Cras','T10564',0,'16657',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Amet','T10565',0,'132619',DATE_SUB(curdate(),interval 53 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Ornare','T10566',0,'136831',DATE_SUB(curdate(),interval 93 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Eleifend','T10567',0,'34157',DATE_SUB(curdate(),interval 60 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Tristique','T10568',0,'147623',DATE_SUB(curdate(),interval 2 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Cursus','T10569',0,'140234',DATE_SUB(curdate(),interval 56 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Nec','T10570',0,'7856',DATE_SUB(curdate(),interval 54 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Montes','T10571',0,'173949',DATE_SUB(curdate(),interval 16 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Proin','T10572',0,'33466',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Id','T10573',0,'106859',DATE_SUB(curdate(),interval 86 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Interdum','T10574',0,'157101',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Mauris','T10575',0,'120859',DATE_SUB(curdate(),interval 86 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Nisl','T10576',0,'175464',DATE_SUB(curdate(),interval 88 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Sit','T10577',0,'87443',DATE_SUB(curdate(),interval 48 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Montes','T10578',0,'4105',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Praesent','T10579',0,'58725',DATE_SUB(curdate(),interval 2 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Natoque','T10580',0,'4846',DATE_SUB(curdate(),interval 81 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Duis Eleifend','T10581',0,'132735',DATE_SUB(curdate(),interval 48 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Eget','T10582',0,'96205',DATE_SUB(curdate(),interval 55 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Posuere','T10583',0,'82022',DATE_SUB(curdate(),interval 46 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Sagittis','T10584',0,'68262',DATE_SUB(curdate(),interval 97 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Tristique','T10585',0,'87975',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Natoque','T10586',0,'54081',DATE_SUB(curdate(),interval 21 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Praesent','T10587',0,'46320',DATE_SUB(curdate(),interval 19 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Massa','T10588',0,'313',DATE_SUB(curdate(),interval 31 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quam Nulla','T10589',0,'158917',DATE_SUB(curdate(),interval 59 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Vulputate','T10590',0,'28822',DATE_SUB(curdate(),interval 52 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Laoreet','T10591',0,'196256',DATE_SUB(curdate(),interval 79 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Tempor','T10592',0,'150205',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Cursus','T10593',0,'168962',DATE_SUB(curdate(),interval 35 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Aliquam','T10594',0,'112950',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Potenti','T10595',0,'39191',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Facilisis','T10596',0,'4125',DATE_SUB(curdate(),interval 87 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Quam','T10597',0,'91574',DATE_SUB(curdate(),interval 98 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Odio','T10598',0,'99411',DATE_SUB(curdate(),interval 45 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Montes','T10599',0,'48082',DATE_SUB(curdate(),interval 100 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Purus','T10600',0,'141088',DATE_SUB(curdate(),interval 91 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac 
','T10601',0,'51634',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Accumsan','T10602',0,'167126',DATE_SUB(curdate(),interval 34 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Quis','T10603',0,'9793',DATE_SUB(curdate(),interval 67 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Ipsum','T10604',0,'107599',DATE_SUB(curdate(),interval 9 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Ullamcorper','T10605',0,'13807',DATE_SUB(curdate(),interval 98 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Turpis','T10606',0,'85476',DATE_SUB(curdate(),interval 76 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Sodales','T10607',0,'150386',DATE_SUB(curdate(),interval 85 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Sociis','T10608',0,'149474',DATE_SUB(curdate(),interval 84 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Dolor','T10609',0,'135044',DATE_SUB(curdate(),interval 67 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Nunc','T10610',0,'3561',DATE_SUB(curdate(),interval 45 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Interdum','T10611',0,'23837',DATE_SUB(curdate(),interval 77 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Laoreet','T10612',0,'172681',DATE_SUB(curdate(),interval 2 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sagittis','T10613',0,'199361',DATE_SUB(curdate(),interval 25 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Convallis','T10614',0,'990',DATE_SUB(curdate(),interval 54 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Quis','T10615',0,'77659',DATE_SUB(curdate(),interval 75 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Blandit','T10616',0,'118555',DATE_SUB(curdate(),interval 22 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Et','T10617',0,'178990',DATE_SUB(curdate(),interval 97 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Sapien','T10618',0,'83480',DATE_SUB(curdate(),interval 32 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Condimentum','T10619',0,'18561',DATE_SUB(curdate(),interval 11 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Mauris','T10620',0,'27413',DATE_SUB(curdate(),interval 85 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Blandit','T10621',0,'19539',DATE_SUB(curdate(),interval 39 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Imperdiet','T10622',0,'186029',DATE_SUB(curdate(),interval 65 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Varius','T10623',0,'80244',DATE_SUB(curdate(),interval 7 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Vehicula','T10624',0,'59128',DATE_SUB(curdate(),interval 60 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Cursus','T10625',0,'112995',DATE_SUB(curdate(),interval 4 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Ac','T10626',0,'72419',DATE_SUB(curdate(),interval 8 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Cum','T10627',0,'39752',DATE_SUB(curdate(),interval 71 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Ultricies','T10628',0,'111907',DATE_SUB(curdate(),interval 30 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Laoreet','T10629',0,'137393',DATE_SUB(curdate(),interval 2 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Gravida','T10630',0,'135554',DATE_SUB(curdate(),interval 62 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Sit','T10631',0,'138639',DATE_SUB(curdate(),interval 39 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis In','T10632',0,'196992',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum 
','T10633',0,'75160',DATE_SUB(curdate(),interval 28 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Pharetra','T10634',0,'73125',DATE_SUB(curdate(),interval 5 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Turpis','T10635',0,'152800',DATE_SUB(curdate(),interval 60 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Vitae','T10636',0,'180739',DATE_SUB(curdate(),interval 37 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Neque','T10637',0,'79534',DATE_SUB(curdate(),interval 74 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Mauris','T10638',0,'72012',DATE_SUB(curdate(),interval 14 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Nunc','T10639',0,'106592',DATE_SUB(curdate(),interval 22 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Malesuada','T10640',0,'112479',DATE_SUB(curdate(),interval 22 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Vel','T10641',0,'100854',DATE_SUB(curdate(),interval 60 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Nulla','T10642',0,'130287',DATE_SUB(curdate(),interval 87 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Consectetur','T10643',0,'94562',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Sagittis','T10644',0,'140887',DATE_SUB(curdate(),interval 72 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Imperdiet','T10645',0,'92075',DATE_SUB(curdate(),interval 17 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Sed','T10646',0,'63646',DATE_SUB(curdate(),interval 33 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nulla','T10647',0,'111879',DATE_SUB(curdate(),interval 92 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Mauris','T10648',0,'27458',DATE_SUB(curdate(),interval 44 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Lorem','T10649',0,'7424',DATE_SUB(curdate(),interval 74 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Magna','T10650',0,'120993',DATE_SUB(curdate(),interval 95 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Sit','T10651',0,'56051',DATE_SUB(curdate(),interval 85 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Turpis','T10652',0,'112537',DATE_SUB(curdate(),interval 42 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Nullam','T10653',0,'119273',DATE_SUB(curdate(),interval 26 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Sed','T10654',0,'119262',DATE_SUB(curdate(),interval 72 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Tempus','T10655',0,'126595',DATE_SUB(curdate(),interval 13 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Urna','T10656',0,'114369',DATE_SUB(curdate(),interval 34 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Non','T10657',0,'14710',DATE_SUB(curdate(),interval 93 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Volutpat','T10658',0,'173807',DATE_SUB(curdate(),interval 40 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Quisque','T10659',0,'48896',DATE_SUB(curdate(),interval 21 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Condimentum','T10660',0,'126405',DATE_SUB(curdate(),interval 22 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Vestibulum','T10661',0,'97020',DATE_SUB(curdate(),interval 68 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Amet','T10662',0,'78184',DATE_SUB(curdate(),interval 91 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Nullam','T10663',0,'8729',DATE_SUB(curdate(),interval 51 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Potenti Gravida','T10664',0,'170418',DATE_SUB(curdate(),interval 20 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Donec','T10665',0,'25855',DATE_SUB(curdate(),interval 52 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio ','T10666',0,'184702',DATE_SUB(curdate(),interval 36 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Nibh','T10667',0,'114207',DATE_SUB(curdate(),interval 28 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A A','T10668',0,'100467',DATE_SUB(curdate(),interval 81 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis In','T10669',0,'95824',DATE_SUB(curdate(),interval 58 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Nulla','T10670',0,'96635',DATE_SUB(curdate(),interval 30 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Auctor','T10671',0,'164115',DATE_SUB(curdate(),interval 69 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Ut','T10672',0,'178817',DATE_SUB(curdate(),interval 37 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Nullam','T10673',0,'177752',DATE_SUB(curdate(),interval 20 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Neque','T10674',0,'112581',DATE_SUB(curdate(),interval 17 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Blandit','T10675',0,'90167',DATE_SUB(curdate(),interval 96 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Proin','T10676',0,'152162',DATE_SUB(curdate(),interval 77 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Placerat','T10677',0,'68570',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Id','T10678',0,'63083',DATE_SUB(curdate(),interval 0 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:11 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Blandit','T10679',0,'138400',DATE_SUB(curdate(),interval 50 year));
23:43:11 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Condimentum','T10680',0,'172388',DATE_SUB(curdate(),interval 41 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Praesent','T10681',0,'121879',DATE_SUB(curdate(),interval 63 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Condimentum','T10682',0,'160075',DATE_SUB(curdate(),interval 54 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Tincidunt','T10683',0,'99729',DATE_SUB(curdate(),interval 64 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Sollicitudin','T10684',0,'82332',DATE_SUB(curdate(),interval 14 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Nulla','T10685',0,'30888',DATE_SUB(curdate(),interval 61 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Magnis','T10686',0,'122649',DATE_SUB(curdate(),interval 94 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Donec','T10687',0,'85712',DATE_SUB(curdate(),interval 41 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Duis','T10688',0,'164287',DATE_SUB(curdate(),interval 50 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Quis','T10689',0,'26375',DATE_SUB(curdate(),interval 61 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Sagittis','T10690',0,'29477',DATE_SUB(curdate(),interval 91 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Dictum','T10691',0,'110520',DATE_SUB(curdate(),interval 39 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Eget','T10692',0,'106564',DATE_SUB(curdate(),interval 40 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Magna','T10693',0,'2842',DATE_SUB(curdate(),interval 30 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Vitae','T10694',0,'46542',DATE_SUB(curdate(),interval 77 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Velit','T10695',0,'35491',DATE_SUB(curdate(),interval 83 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit ','T10696',0,'64958',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Cum','T10697',0,'119426',DATE_SUB(curdate(),interval 3 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Lacinia','T10698',0,'188445',DATE_SUB(curdate(),interval 57 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Id','T10699',0,'192042',DATE_SUB(curdate(),interval 29 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Urna','T10700',0,'140181',DATE_SUB(curdate(),interval 17 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Condimentum','T10701',0,'95436',DATE_SUB(curdate(),interval 34 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Vitae','T10702',0,'20076',DATE_SUB(curdate(),interval 27 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Vulputate','T10703',0,'19859',DATE_SUB(curdate(),interval 32 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Convallis','T10704',0,'63179',DATE_SUB(curdate(),interval 71 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Sapien','T10705',0,'147862',DATE_SUB(curdate(),interval 27 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Vehicula','T10706',0,'168410',DATE_SUB(curdate(),interval 4 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Tempus','T10707',0,'68825',DATE_SUB(curdate(),interval 64 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Venenatis','T10708',0,'162660',DATE_SUB(curdate(),interval 48 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Duis','T10709',0,'162599',DATE_SUB(curdate(),interval 10 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Sapien','T10710',0,'75598',DATE_SUB(curdate(),interval 37 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Montes','T10711',0,'138893',DATE_SUB(curdate(),interval 47 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Sit','T10712',0,'34879',DATE_SUB(curdate(),interval 78 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sapien','T10713',0,'10362',DATE_SUB(curdate(),interval 58 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Nulla','T10714',0,'125803',DATE_SUB(curdate(),interval 77 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Imperdiet','T10715',0,'81406',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Malesuada','T10716',0,'93396',DATE_SUB(curdate(),interval 78 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Mattis','T10717',0,'176207',DATE_SUB(curdate(),interval 51 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Proin','T10718',0,'176543',DATE_SUB(curdate(),interval 38 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Ornare','T10719',0,'170499',DATE_SUB(curdate(),interval 64 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Dui','T10720',0,'83966',DATE_SUB(curdate(),interval 51 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Dis','T10721',0,'18368',DATE_SUB(curdate(),interval 54 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Morbi','T10722',0,'61484',DATE_SUB(curdate(),interval 6 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Condimentum','T10723',0,'10603',DATE_SUB(curdate(),interval 71 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Hendrerit','T10724',0,'98097',DATE_SUB(curdate(),interval 45 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Metus','T10725',0,'191357',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Ullamcorper','T10726',0,'75572',DATE_SUB(curdate(),interval 37 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Vivamus','T10727',0,'910',DATE_SUB(curdate(),interval 0 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Convallis','T10728',0,'103025',DATE_SUB(curdate(),interval 19 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Non','T10729',0,'146733',DATE_SUB(curdate(),interval 26 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nulla','T10730',0,'64626',DATE_SUB(curdate(),interval 2 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Sagittis','T10731',0,'146797',DATE_SUB(curdate(),interval 69 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Risus','T10732',0,'27186',DATE_SUB(curdate(),interval 70 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Eu','T10733',0,'137885',DATE_SUB(curdate(),interval 22 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Augue','T10734',0,'118678',DATE_SUB(curdate(),interval 35 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Leo','T10735',0,'70616',DATE_SUB(curdate(),interval 56 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam 
','T10736',0,'150544',DATE_SUB(curdate(),interval 92 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Mus','T10737',0,'35973',DATE_SUB(curdate(),interval 81 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Volutpat','T10738',0,'164962',DATE_SUB(curdate(),interval 28 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Eleifend','T10739',0,'194669',DATE_SUB(curdate(),interval 78 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Quis','T10740',0,'94281',DATE_SUB(curdate(),interval 38 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Pellentesque','T10741',0,'121155',DATE_SUB(curdate(),interval 13 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Magna','T10742',0,'96614',DATE_SUB(curdate(),interval 53 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Donec','T10743',0,'16127',DATE_SUB(curdate(),interval 82 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Nulla','T10744',0,'147555',DATE_SUB(curdate(),interval 18 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Ligula','T10745',0,'196505',DATE_SUB(curdate(),interval 85 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Condimentum','T10746',0,'26043',DATE_SUB(curdate(),interval 30 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Imperdiet','T10747',0,'15015',DATE_SUB(curdate(),interval 15 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Massa','T10748',0,'105725',DATE_SUB(curdate(),interval 41 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Blandit','T10749',0,'109804',DATE_SUB(curdate(),interval 94 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sem','T10750',0,'92235',DATE_SUB(curdate(),interval 13 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Dui','T10751',0,'190019',DATE_SUB(curdate(),interval 57 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Magna','T10752',0,'150425',DATE_SUB(curdate(),interval 70 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Cursus','T10753',0,'108420',DATE_SUB(curdate(),interval 2 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Ut','T10754',0,'65186',DATE_SUB(curdate(),interval 91 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Vestibulum','T10755',0,'11496',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Condimentum','T10756',0,'80708',DATE_SUB(curdate(),interval 66 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Proin','T10757',0,'118044',DATE_SUB(curdate(),interval 5 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Nunc','T10758',0,'36947',DATE_SUB(curdate(),interval 86 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Blandit','T10759',0,'85096',DATE_SUB(curdate(),interval 97 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Placerat','T10760',0,'132653',DATE_SUB(curdate(),interval 43 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Nisi','T10761',0,'90869',DATE_SUB(curdate(),interval 45 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Tristique','T10762',0,'72465',DATE_SUB(curdate(),interval 66 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Massa','T10763',0,'128455',DATE_SUB(curdate(),interval 13 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Accumsan','T10764',0,'156715',DATE_SUB(curdate(),interval 73 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Commodo','T10765',0,'156101',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Eget','T10766',0,'167181',DATE_SUB(curdate(),interval 1 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Sollicitudin','T10767',0,'197353',DATE_SUB(curdate(),interval 93 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Ornare','T10768',0,'70192',DATE_SUB(curdate(),interval 35 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Condimentum','T10769',0,'161092',DATE_SUB(curdate(),interval 74 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nibh','T10770',0,'77324',DATE_SUB(curdate(),interval 77 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Dui','T10771',0,'179127',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Vehicula','T10772',0,'63990',DATE_SUB(curdate(),interval 7 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Tristique','T10773',0,'11219',DATE_SUB(curdate(),interval 48 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Dictum','T10774',0,'99316',DATE_SUB(curdate(),interval 16 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Ridiculus','T10775',0,'17704',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Massa','T10776',0,'188720',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Praesent','T10777',0,'144363',DATE_SUB(curdate(),interval 83 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Quis','T10778',0,'119445',DATE_SUB(curdate(),interval 50 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Urna','T10779',0,'19590',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Magna','T10780',0,'57023',DATE_SUB(curdate(),interval 22 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Nec','T10781',0,'140649',DATE_SUB(curdate(),interval 58 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Magna','T10782',0,'149962',DATE_SUB(curdate(),interval 39 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Ullamcorper','T10783',0,'195790',DATE_SUB(curdate(),interval 82 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Aliquam','T10784',0,'161057',DATE_SUB(curdate(),interval 52 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Auctor','T10785',0,'70593',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Velit','T10786',0,'18575',DATE_SUB(curdate(),interval 78 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Cursus','T10787',0,'196980',DATE_SUB(curdate(),interval 62 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Et','T10788',0,'168034',DATE_SUB(curdate(),interval 12 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Non','T10789',0,'142229',DATE_SUB(curdate(),interval 85 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Natoque','T10790',0,'46202',DATE_SUB(curdate(),interval 43 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Varius','T10791',0,'48588',DATE_SUB(curdate(),interval 58 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Condimentum','T10792',0,'19939',DATE_SUB(curdate(),interval 81 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Est','T10793',0,'78509',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Mus','T10794',0,'196744',DATE_SUB(curdate(),interval 85 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Non','T10795',0,'92201',DATE_SUB(curdate(),interval 28 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Eget','T10796',0,'82416',DATE_SUB(curdate(),interval 85 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Tortor','T10797',0,'138855',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Donec','T10798',0,'2844',DATE_SUB(curdate(),interval 89 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Proin','T10799',0,'92112',DATE_SUB(curdate(),interval 27 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Varius','T10800',0,'14371',DATE_SUB(curdate(),interval 88 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Penatibus','T10801',0,'18312',DATE_SUB(curdate(),interval 41 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Mauris','T10802',0,'52331',DATE_SUB(curdate(),interval 63 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Scelerisque','T10803',0,'182215',DATE_SUB(curdate(),interval 28 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nullam Tempor','T10804',0,'26475',DATE_SUB(curdate(),interval 87 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Tempus','T10805',0,'91245',DATE_SUB(curdate(),interval 3 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Magnis','T10806',0,'182805',DATE_SUB(curdate(),interval 89 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Sagittis','T10807',0,'30986',DATE_SUB(curdate(),interval 3 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit A','T10808',0,'182742',DATE_SUB(curdate(),interval 95 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Ipsum','T10809',0,'72701',DATE_SUB(curdate(),interval 64 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Magna','T10810',0,'53420',DATE_SUB(curdate(),interval 12 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Placerat','T10811',0,'81396',DATE_SUB(curdate(),interval 37 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Felis','T10812',0,'48010',DATE_SUB(curdate(),interval 95 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Laoreet','T10813',0,'195654',DATE_SUB(curdate(),interval 11 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Dictum','T10814',0,'1024',DATE_SUB(curdate(),interval 90 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Vestibulum','T10815',0,'185470',DATE_SUB(curdate(),interval 20 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Ultricies','T10816',0,'29889',DATE_SUB(curdate(),interval 7 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nunc','T10817',0,'143811',DATE_SUB(curdate(),interval 93 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Turpis','T10818',0,'10267',DATE_SUB(curdate(),interval 49 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Sociis','T10819',0,'171514',DATE_SUB(curdate(),interval 67 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Nam','T10820',0,'122675',DATE_SUB(curdate(),interval 36 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Cras','T10821',0,'96324',DATE_SUB(curdate(),interval 97 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus Aliquam','T10822',0,'170997',DATE_SUB(curdate(),interval 75 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Convallis','T10823',0,'190502',DATE_SUB(curdate(),interval 3 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Imperdiet','T10824',0,'22333',DATE_SUB(curdate(),interval 47 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Id','T10825',0,'79320',DATE_SUB(curdate(),interval 76 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Eget','T10826',0,'47787',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Nam','T10827',0,'129375',DATE_SUB(curdate(),interval 91 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Sollicitudin','T10828',0,'53520',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Praesent','T10829',0,'189734',DATE_SUB(curdate(),interval 33 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Tempus','T10830',0,'17327',DATE_SUB(curdate(),interval 89 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Congue','T10831',0,'183279',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Dui','T10832',0,'135816',DATE_SUB(curdate(),interval 76 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Mauris','T10833',0,'101803',DATE_SUB(curdate(),interval 68 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo 
','T10834',0,'131375',DATE_SUB(curdate(),interval 43 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Convallis','T10835',0,'66758',DATE_SUB(curdate(),interval 3 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent In','T10836',0,'5324',DATE_SUB(curdate(),interval 42 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit A','T10837',0,'150347',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Ullamcorper','T10838',0,'93867',DATE_SUB(curdate(),interval 36 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Praesent','T10839',0,'114856',DATE_SUB(curdate(),interval 1 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut At','T10840',0,'154923',DATE_SUB(curdate(),interval 27 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum At','T10841',0,'189648',DATE_SUB(curdate(),interval 86 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Commodo','T10842',0,'56502',DATE_SUB(curdate(),interval 88 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Gravida','T10843',0,'182925',DATE_SUB(curdate(),interval 47 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Aenean','T10844',0,'177754',DATE_SUB(curdate(),interval 57 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Lorem','T10845',0,'30978',DATE_SUB(curdate(),interval 70 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Magna','T10846',0,'12077',DATE_SUB(curdate(),interval 35 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Bibendum','T10847',0,'75000',DATE_SUB(curdate(),interval 42 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Quisque','T10848',0,'139263',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Dictum','T10849',0,'13941',DATE_SUB(curdate(),interval 46 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Blandit','T10850',0,'68171',DATE_SUB(curdate(),interval 16 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Massa','T10851',0,'126278',DATE_SUB(curdate(),interval 18 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Hendrerit','T10852',0,'150905',DATE_SUB(curdate(),interval 11 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Non','T10853',0,'161745',DATE_SUB(curdate(),interval 64 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Nulla','T10854',0,'199183',DATE_SUB(curdate(),interval 54 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Metus','T10855',0,'193467',DATE_SUB(curdate(),interval 39 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Nulla','T10856',0,'121775',DATE_SUB(curdate(),interval 96 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Volutpat','T10857',0,'83717',DATE_SUB(curdate(),interval 56 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Diam','T10858',0,'143277',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Nec','T10859',0,'37104',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Rutrum','T10860',0,'64978',DATE_SUB(curdate(),interval 2 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Id','T10861',0,'133620',DATE_SUB(curdate(),interval 38 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Nulla','T10862',0,'185339',DATE_SUB(curdate(),interval 51 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Nulla','T10863',0,'179665',DATE_SUB(curdate(),interval 56 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Phasellus','T10864',0,'101843',DATE_SUB(curdate(),interval 87 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Donec','T10865',0,'84747',DATE_SUB(curdate(),interval 21 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Suscipit','T10866',0,'43177',DATE_SUB(curdate(),interval 70 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Odio','T10867',0,'182760',DATE_SUB(curdate(),interval 35 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Placerat','T10868',0,'76877',DATE_SUB(curdate(),interval 19 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Nunc','T10869',0,'114803',DATE_SUB(curdate(),interval 37 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Adipiscing','T10870',0,'176309',DATE_SUB(curdate(),interval 75 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Tristique','T10871',0,'61374',DATE_SUB(curdate(),interval 96 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Hendrerit','T10872',0,'163658',DATE_SUB(curdate(),interval 47 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Id','T10873',0,'137884',DATE_SUB(curdate(),interval 43 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Ornare','T10874',0,'26657',DATE_SUB(curdate(),interval 87 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Accumsan','T10875',0,'45168',DATE_SUB(curdate(),interval 65 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Imperdiet','T10876',0,'167818',DATE_SUB(curdate(),interval 66 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Ut','T10877',0,'6621',DATE_SUB(curdate(),interval 38 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Sed','T10878',0,'26128',DATE_SUB(curdate(),interval 31 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Sed','T10879',0,'52191',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Sit','T10880',0,'90886',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Pellentesque','T10881',0,'85724',DATE_SUB(curdate(),interval 71 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Praesent','T10882',0,'114689',DATE_SUB(curdate(),interval 35 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Maecenas','T10883',0,'806',DATE_SUB(curdate(),interval 90 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Leo','T10884',0,'110567',DATE_SUB(curdate(),interval 7 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Condimentum','T10885',0,'90291',DATE_SUB(curdate(),interval 17 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Amet','T10886',0,'95715',DATE_SUB(curdate(),interval 19 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Dignissim','T10887',0,'35339',DATE_SUB(curdate(),interval 27 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Aliquet','T10888',0,'54141',DATE_SUB(curdate(),interval 14 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Diam','T10889',0,'168692',DATE_SUB(curdate(),interval 83 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Consectetur','T10890',0,'35996',DATE_SUB(curdate(),interval 87 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Ac','T10891',0,'152998',DATE_SUB(curdate(),interval 63 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Leo','T10892',0,'139589',DATE_SUB(curdate(),interval 28 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Quisque','T10893',0,'90677',DATE_SUB(curdate(),interval 40 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Sagittis','T10894',0,'119894',DATE_SUB(curdate(),interval 75 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Nunc','T10895',0,'4863',DATE_SUB(curdate(),interval 49 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Ultricies','T10896',0,'126064',DATE_SUB(curdate(),interval 18 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Parturient','T10897',0,'1275',DATE_SUB(curdate(),interval 25 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Tellus','T10898',0,'25162',DATE_SUB(curdate(),interval 10 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Dictum','T10899',0,'146515',DATE_SUB(curdate(),interval 40 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Quis','T10900',0,'136174',DATE_SUB(curdate(),interval 11 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Blandit','T10901',0,'103350',DATE_SUB(curdate(),interval 31 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Aliquam','T10902',0,'12501',DATE_SUB(curdate(),interval 74 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum Erat','T10903',0,'45598',DATE_SUB(curdate(),interval 30 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Nibh','T10904',0,'96386',DATE_SUB(curdate(),interval 37 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Aliquam','T10905',0,'126357',DATE_SUB(curdate(),interval 22 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Quis','T10906',0,'65926',DATE_SUB(curdate(),interval 4 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Commodo','T10907',0,'88511',DATE_SUB(curdate(),interval 86 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Tortor','T10908',0,'193881',DATE_SUB(curdate(),interval 7 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Mus','T10909',0,'76807',DATE_SUB(curdate(),interval 32 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Eget','T10910',0,'12323',DATE_SUB(curdate(),interval 49 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Duis','T10911',0,'158888',DATE_SUB(curdate(),interval 92 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Vulputate','T10912',0,'58284',DATE_SUB(curdate(),interval 48 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Aliquam','T10913',0,'140555',DATE_SUB(curdate(),interval 44 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Sem','T10914',0,'96877',DATE_SUB(curdate(),interval 33 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Donec','T10915',0,'37240',DATE_SUB(curdate(),interval 59 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Tempus','T10916',0,'131992',DATE_SUB(curdate(),interval 31 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Venenatis','T10917',0,'126388',DATE_SUB(curdate(),interval 24 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nec','T10918',0,'147780',DATE_SUB(curdate(),interval 2 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Venenatis','T10919',0,'187826',DATE_SUB(curdate(),interval 13 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Etiam Vivamus','T10920',0,'122218',DATE_SUB(curdate(),interval 58 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Quis','T10921',0,'2744',DATE_SUB(curdate(),interval 84 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Ligula','T10922',0,'32746',DATE_SUB(curdate(),interval 44 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Nec','T10923',0,'5642',DATE_SUB(curdate(),interval 48 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Magna','T10924',0,'156691',DATE_SUB(curdate(),interval 14 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Consectetur','T10925',0,'78287',DATE_SUB(curdate(),interval 22 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Tincidunt','T10926',0,'49321',DATE_SUB(curdate(),interval 9 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Tellus','T10927',0,'44639',DATE_SUB(curdate(),interval 47 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Donec','T10928',0,'9550',DATE_SUB(curdate(),interval 57 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Sed','T10929',0,'80914',DATE_SUB(curdate(),interval 49 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Arcu','T10930',0,'187062',DATE_SUB(curdate(),interval 99 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Eget','T10931',0,'92009',DATE_SUB(curdate(),interval 42 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Aliquet','T10932',0,'114215',DATE_SUB(curdate(),interval 38 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Tincidunt','T10933',0,'121309',DATE_SUB(curdate(),interval 77 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Ultrices','T10934',0,'171992',DATE_SUB(curdate(),interval 76 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Posuere','T10935',0,'45978',DATE_SUB(curdate(),interval 45 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Vulputate','T10936',0,'5036',DATE_SUB(curdate(),interval 6 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Praesent','T10937',0,'112003',DATE_SUB(curdate(),interval 90 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Id','T10938',0,'176666',DATE_SUB(curdate(),interval 92 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Nisl','T10939',0,'68011',DATE_SUB(curdate(),interval 11 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Non','T10940',0,'98875',DATE_SUB(curdate(),interval 24 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tristique','T10941',0,'2720',DATE_SUB(curdate(),interval 97 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Sed','T10942',0,'144600',DATE_SUB(curdate(),interval 100 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Proin','T10943',0,'89620',DATE_SUB(curdate(),interval 88 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Parturient','T10944',0,'187950',DATE_SUB(curdate(),interval 57 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Ligula','T10945',0,'93669',DATE_SUB(curdate(),interval 91 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Blandit','T10946',0,'163473',DATE_SUB(curdate(),interval 45 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:12 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Tempus','T10947',0,'112890',DATE_SUB(curdate(),interval 28 year));
23:43:12 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Sed','T10948',0,'105535',DATE_SUB(curdate(),interval 95 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Dui','T10949',0,'181734',DATE_SUB(curdate(),interval 11 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Aliquet','T10950',0,'21350',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Laoreet','T10951',0,'49141',DATE_SUB(curdate(),interval 82 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Tellus','T10952',0,'76946',DATE_SUB(curdate(),interval 94 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Ultrices','T10953',0,'166448',DATE_SUB(curdate(),interval 68 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi At','T10954',0,'26845',DATE_SUB(curdate(),interval 90 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Diam','T10955',0,'36340',DATE_SUB(curdate(),interval 88 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Vitae','T10956',0,'163552',DATE_SUB(curdate(),interval 92 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Dui','T10957',0,'6209',DATE_SUB(curdate(),interval 67 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Et','T10958',0,'7410',DATE_SUB(curdate(),interval 95 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Leo','T10959',0,'151548',DATE_SUB(curdate(),interval 72 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Pellentesque','T10960',0,'130387',DATE_SUB(curdate(),interval 15 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ullamcorper Mus','T10961',0,'166746',DATE_SUB(curdate(),interval 20 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Non','T10962',0,'20016',DATE_SUB(curdate(),interval 95 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Leo','T10963',0,'163273',DATE_SUB(curdate(),interval 42 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Purus Bibendum','T10964',0,'68273',DATE_SUB(curdate(),interval 24 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Commodo','T10965',0,'181463',DATE_SUB(curdate(),interval 72 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis A','T10966',0,'132260',DATE_SUB(curdate(),interval 20 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Magna','T10967',0,'184726',DATE_SUB(curdate(),interval 70 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Ornare','T10968',0,'169753',DATE_SUB(curdate(),interval 56 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Ut','T10969',0,'151468',DATE_SUB(curdate(),interval 19 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Molestie','T10970',0,'26859',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Velit','T10971',0,'148238',DATE_SUB(curdate(),interval 13 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Amet','T10972',0,'74437',DATE_SUB(curdate(),interval 95 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Mattis','T10973',0,'132797',DATE_SUB(curdate(),interval 97 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Vitae','T10974',0,'33605',DATE_SUB(curdate(),interval 45 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Eu','T10975',0,'29265',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Ullamcorper','T10976',0,'172575',DATE_SUB(curdate(),interval 73 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat In','T10977',0,'184089',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Pellentesque','T10978',0,'129017',DATE_SUB(curdate(),interval 62 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dolor Praesent','T10979',0,'149441',DATE_SUB(curdate(),interval 59 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Ut','T10980',0,'107105',DATE_SUB(curdate(),interval 93 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Magna','T10981',0,'177794',DATE_SUB(curdate(),interval 62 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Arcu','T10982',0,'14751',DATE_SUB(curdate(),interval 27 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Malesuada','T10983',0,'114987',DATE_SUB(curdate(),interval 82 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Sed','T10984',0,'108559',DATE_SUB(curdate(),interval 90 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Penatibus','T10985',0,'44153',DATE_SUB(curdate(),interval 54 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Lacinia','T10986',0,'30496',DATE_SUB(curdate(),interval 52 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Risus','T10987',0,'22714',DATE_SUB(curdate(),interval 72 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit At','T10988',0,'128950',DATE_SUB(curdate(),interval 42 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Venenatis','T10989',0,'8148',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Nisl','T10990',0,'128503',DATE_SUB(curdate(),interval 74 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Interdum','T10991',0,'111042',DATE_SUB(curdate(),interval 55 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Nam','T10992',0,'88502',DATE_SUB(curdate(),interval 72 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Nulla','T10993',0,'49782',DATE_SUB(curdate(),interval 8 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Auctor Odio','T10994',0,'120522',DATE_SUB(curdate(),interval 78 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Condimentum','T10995',0,'100441',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Sem','T10996',0,'147628',DATE_SUB(curdate(),interval 21 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Tristique','T10997',0,'117458',DATE_SUB(curdate(),interval 27 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Vestibulum','T10998',0,'2146',DATE_SUB(curdate(),interval 23 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Turpis','T10999',0,'155545',DATE_SUB(curdate(),interval 10 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Malesuada','T11000',0,'163154',DATE_SUB(curdate(),interval 22 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:SELECT ID FROM TaxPayerTable where DateOfCreation < date_sub(curdate(),interval 60 YEAR)
23:43:13 (engine) [SQL]->Exec [Done]:Resource id #2027
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1,'Vehicula Interdum','T11002',0,'60883',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (2,'Et Sed','T11003',0,'38778',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (3,'Magna Laoreet','T11004',0,'17465',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (4,'Leo Id','T11005',0,'40475',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (7,'Commodo Fringilla','T11006',0,'159020',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (8,'Elit Condimentum','T11007',0,'145140',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (11,'Commodo Volutpat','T11008',0,'113843',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (12,'Scelerisque Turpis','T11009',0,'52179',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (15,'Faucibus Turpis','T11010',0,'3960',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (16,'Dis 
','T11011',0,'136581',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (19,'Non Urna','T11012',0,'16807',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (20,'Laoreet Sagittis','T11013',0,'55312',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (27,'Mauris Ipsum','T11014',0,'139555',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (28,'A Convallis','T11015',0,'112452',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (31,'Donec Id','T11016',0,'56991',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (34,'Malesuada Massa','T11017',0,'51543',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (35,'Eleifend Vulputate','T11018',0,'176374',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (37,'A Turpis','T11019',0,'135809',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (42,'Ultricies Porttitor','T11020',0,'30769',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (45,'Condimentum Praesent','T11021',0,'26147',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (46,'Adipiscing Tempus','T11022',0,'44223',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (48,'At Convallis','T11023',0,'125759',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (49,'Sed Sapien','T11024',0,'165887',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (50,'Sociis Erat','T11025',0,'79486',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (54,'Risus Mattis','T11026',0,'30852',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (59,'Leo Nulla','T11027',0,'51378',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (61,'Leo Tellus','T11028',0,'21952',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (63,'Ultricies Placerat','T11029',0,'154289',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (64,'Augue Vehicula','T11030',0,'144550',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (65,'Nunc Blandit','T11031',0,'99977',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (66,'Velit Ipsum','T11032',0,'24419',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (71,'Consectetur Hendrerit','T11033',0,'59131',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (74,'Maecenas Faucibus','T11034',0,'127403',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (75,'Leo Nulla','T11035',0,'164394',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (78,'Convallis Sagittis','T11036',0,'105097',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (80,'Condimentum Mi','T11037',0,'97797',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (82,'Duis 
','T11038',0,'112452',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (83,'Praesent Commodo','T11039',0,'151243',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (86,'Enim A','T11040',0,'110691',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (87,'Fringilla Commodo','T11041',0,'117811',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (89,'Mi A','T11042',0,'167915',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (90,'Ut Velit','T11043',0,'92371',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (91,'Cras In','T11044',0,'114078',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (92,'At Sed','T11045',0,'1352',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (95,'Sollicitudin Arcu','T11046',0,'127838',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (96,'Aliquet A','T11047',0,'132590',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (98,'Nunc In','T11048',0,'166111',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (99,'Interdum Magna','T11049',0,'173647',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (100,'Dictum Lectus','T11050',0,'189356',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (101,'Metus Bibendum','T11051',0,'38051',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (105,'Fringilla Diam','T11052',0,'145627',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (107,'Sed Cursus','T11053',0,'50800',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (108,'Convallis Nulla','T11054',0,'185105',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (109,'Sagittis Neque','T11055',0,'191543',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (110,'Condimentum Eget','T11056',0,'46774',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (111,'Mattis Imperdiet','T11057',0,'46981',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (113,'Etiam Ipsum','T11058',0,'123838',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (116,'Neque Etiam','T11059',0,'28375',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (117,'Mattis Nulla','T11060',0,'133306',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (120,'Commodo Molestie','T11061',0,'96252',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (121,'Quam Bibendum','T11062',0,'168782',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (122,'Ullamcorper Vulputate','T11063',0,'132924',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (123,'Neque Risus','T11064',0,'134100',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (124,'Lorem Ornare','T11065',0,'130259',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (125,'Erat Sollicitudin','T11066',0,'197951',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (126,'Sit Id','T11067',0,'132740',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (127,'Lorem Ipsum','T11068',0,'8031',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (129,'Tincidunt Justo','T11069',0,'103075',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (131,'Luctus Aenean','T11070',0,'33357',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (132,'Pellentesque Id','T11071',0,'144716',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (134,'Vitae A','T11072',0,'109706',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (135,'Eget Magna','T11073',0,'108196',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (137,'Magnis Mauris','T11074',0,'12797',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (147,'Velit Vitae','T11075',0,'40054',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (151,'Arcu Placerat','T11076',0,'54111',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (152,'Diam Metus','T11077',0,'74631',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (155,'Sem Felis','T11078',0,'122701',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (156,'Metus Tellus','T11079',0,'11377',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (160,'Urna Commodo','T11080',0,'166343',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (162,'Condimentum Commodo','T11081',0,'83443',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (164,'Convallis Nascetur','T11082',0,'165156',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (165,'Varius Rhoncus','T11083',0,'45960',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (169,'Velit Adipiscing','T11084',0,'115097',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (171,'Sagittis Fermentum','T11085',0,'143674',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (174,'Aliquam Morbi','T11086',0,'147522',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (175,'Eros Potenti','T11087',0,'192234',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (176,'Vestibulum Suspendisse','T11088',0,'86151',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (178,'Imperdiet Commodo','T11089',0,'96138',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (179,'Ipsum Donec','T11090',0,'126959',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (186,'Morbi Lacinia','T11091',0,'160972',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (190,'Risus Sed','T11092',0,'125463',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (195,'Ipsum Ultrices','T11093',0,'16547',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (197,'Volutpat Sed','T11094',0,'135499',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (198,'Mauris In','T11095',0,'149327',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (200,'Quis Placerat','T11096',0,'43980',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (202,'Rhoncus Vivamus','T11097',0,'133223',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (205,'Dolor Eget','T11098',0,'178517',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (207,'Imperdiet Laoreet','T11099',0,'187715',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (212,'Sit Turpis','T11100',0,'36337',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (215,'Non Fringilla','T11101',0,'44864',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (216,'Posuere Convallis','T11102',0,'187131',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (217,'Dui Ut','T11103',0,'142871',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (218,'Nibh Elit','T11104',0,'113824',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (219,'Bibendum Elit','T11105',0,'47912',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (220,'Condimentum Id','T11106',0,'196298',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (223,'Id Molestie','T11107',0,'46417',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (224,'Mus Ut','T11108',0,'62823',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (225,'Volutpat Felis','T11109',0,'197331',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (232,'Massa Molestie','T11110',0,'92513',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (242,'Commodo Placerat','T11111',0,'190545',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (243,'Eleifend Justo','T11112',0,'69860',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (246,'Quis Neque','T11113',0,'77585',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (253,'Morbi Metus','T11114',0,'198969',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (255,'Duis A','T11115',0,'91591',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (260,'Lorem Urna','T11116',0,'34589',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (264,'Justo Vestibulum','T11117',0,'16372',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (265,'Amet Non','T11118',0,'146295',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (270,'Morbi Ut','T11119',0,'30151',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (272,'Mattis Adipiscing','T11120',0,'115707',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (273,'Lacus Malesuada','T11121',0,'51264',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (276,'Ultricies Tincidunt','T11122',0,'72106',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (283,'Montes Sed','T11123',0,'80154',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (284,'Neque Mollis','T11124',0,'87539',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (287,'Cursus Hendrerit','T11125',0,'130364',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (289,'Commodo Turpis','T11126',0,'100341',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (290,'Augue A','T11127',0,'123571',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (294,'Lobortis Facilisis','T11128',0,'47329',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (296,'Pellentesque Urna','T11129',0,'10277',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (297,'Lacinia Ut','T11130',0,'24814',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (298,'Vivamus Dui','T11131',0,'68201',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (304,'Nam Tristique','T11132',0,'144403',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (305,'Mi Commodo','T11133',0,'129417',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (307,'Quis Quisque','T11134',0,'29516',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (310,'Vulputate Eget','T11135',0,'19630',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (313,'Tincidunt Ultricies','T11136',0,'39043',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (315,'Tempus Et','T11137',0,'124680',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (321,'In 
','T11138',0,'158820',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (324,'Sollicitudin Blandit','T11139',0,'141974',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (325,'Sapien Quis','T11140',0,'40547',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (326,'Condimentum Commodo','T11141',0,'114864',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (327,' Morbi','T11142',0,'77490',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (329,'Aliquam Mus','T11143',0,'150724',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (331,'Sed Fermentum','T11144',0,'114769',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (333,'Facilisis Facilisis','T11145',0,'44009',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (334,'A Consectetur','T11146',0,'148575',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (335,'Quisque Est','T11147',0,'117577',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (336,'Vehicula Fringilla','T11148',0,'55027',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (337,'Lorem Commodo','T11149',0,'50633',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (339,'Mattis Lorem','T11150',0,'87778',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (340,'Erat Cursus','T11151',0,'101573',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (342,'Suscipit Amet','T11152',0,'118957',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (346,'Mattis Quam','T11153',0,'38148',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (348,'Id Elit','T11154',0,'88138',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (351,'Praesent Dui','T11155',0,'8260',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (353,'Sed Leo','T11156',0,'192264',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (355,'Nibh In','T11157',0,'19735',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (356,'Ultrices Felis','T11158',0,'159190',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (359,'Urna Convallis','T11159',0,'185592',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (360,'Praesent Justo','T11160',0,'41641',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (362,'Tellus Vestibulum','T11161',0,'177631',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (363,'Morbi In','T11162',0,'28957',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (364,'Ornare Tellus','T11163',0,'197984',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (366,'Adipiscing Velit','T11164',0,'127250',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (368,'Imperdiet Cursus','T11165',0,'81134',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (371,'Sollicitudin A','T11166',0,'432',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (372,'Phasellus Luctus','T11167',0,'174797',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (374,'Est Amet','T11168',0,'111090',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (377,'Nascetur Sodales','T11169',0,'191399',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (379,'Urna Imperdiet','T11170',0,'106527',DATE_SUB(curdate(),interval 31 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (380,'Sagittis Justo','T11171',0,'61295',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (381,'Parturient Aenean','T11172',0,'91761',DATE_SUB(curdate(),interval 37 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (382,'Volutpat Lacinia','T11173',0,'132069',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (383,'Interdum Velit','T11174',0,'190542',DATE_SUB(curdate(),interval 36 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (386,'Cras Tempus','T11175',0,'92500',DATE_SUB(curdate(),interval 30 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (388,'Sed Adipiscing','T11176',0,'167187',DATE_SUB(curdate(),interval 34 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (389,'Natoque Suspendisse','T11177',0,'40745',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (390,'Nulla Pharetra','T11178',0,'72773',DATE_SUB(curdate(),interval 32 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (398,'Proin Eros','T11179',0,'194592',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (400,'Mauris Quis','T11180',0,'74443',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (402,'Ultricies Sem','T11181',0,'48173',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (403,'Nec Nulla','T11182',0,'186776',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (405,'Elit Fringilla','T11183',0,'66639',DATE_SUB(curdate(),interval 40 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (410,'Ut Vitae','T11184',0,'63835',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (416,'Tincidunt Justo','T11185',0,'21977',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (419,'Proin Parturient','T11186',0,'7866',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (424,'Pellentesque Amet','T11187',0,'50177',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (435,'Tristique Magna','T11188',0,'9578',DATE_SUB(curdate(),interval 38 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (437,'Laoreet Sagittis','T11189',0,'20528',DATE_SUB(curdate(),interval 33 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (441,'Ridiculus Tincidunt','T11190',0,'127686',DATE_SUB(curdate(),interval 35 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:13 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (443,'Quis Imperdiet','T11191',0,'86352',DATE_SUB(curdate(),interval 39 year));
23:43:13 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (448,'Suscipit Praesent','T11192',0,'144623',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (449,'Nunc Nulla','T11193',0,'191916',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (450,'Donec ','T11194',0,'10255',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (453,'Amet Convallis','T11195',0,'41603',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (456,'Donec Massa','T11196',0,'39112',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (457,'Non Mi','T11197',0,'186333',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (458,'Ultricies Mattis','T11198',0,'105922',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (460,'Dui Tincidunt','T11199',0,'122971',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (461,'Lorem Tellus','T11200',0,'157058',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (462,'Vitae Lacinia','T11201',0,'103847',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (469,'Lacinia Mattis','T11202',0,'185717',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (470,'Sed Et','T11203',0,'42046',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (475,'Enim Ante','T11204',0,'75776',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (476,'Fermentum Justo','T11205',0,'192836',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (477,'Libero Urna','T11206',0,'161271',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (478,'Cum Massa','T11207',0,'20965',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (480,'Quis Praesent','T11208',0,'30719',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (482,'Bibendum Ut','T11209',0,'81576',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (487,'Aliquet Ultricies','T11210',0,'26745',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (489,'Dis Nisl','T11211',0,'182796',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (491,'Praesent Blandit','T11212',0,'160549',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (494,'Odio Eget','T11213',0,'98496',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (495,'Sollicitudin Mi','T11214',0,'181277',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (496,'Morbi Amet','T11215',0,'176663',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (497,'Convallis Tincidunt','T11216',0,'81873',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (498,'Vitae Hendrerit','T11217',0,'183011',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (500,'Lobortis Condimentum','T11218',0,'13822',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (501,'Enim Ac','T11219',0,'98469',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (502,'Vulputate Ultricies','T11220',0,'119247',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (503,'Commodo Lacus','T11221',0,'72675',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (509,'Praesent Et','T11222',0,'7713',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (510,'Leo Molestie','T11223',0,'117360',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (513,'Arcu Ullamcorper','T11224',0,'143718',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (515,'Quam Aliquet','T11225',0,'124321',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (519,'Ut Nisl','T11226',0,'118781',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (522,'Lacus Erat','T11227',0,'43527',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (523,'Sed Quam','T11228',0,'165821',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (529,'Convallis Cursus','T11229',0,'153213',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (530,'Natoque Tempus','T11230',0,'79543',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (532,'Dui Turpis','T11231',0,'185099',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (536,'Maecenas Nulla','T11232',0,'70762',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (537,'Vulputate A','T11233',0,'152245',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (541,'Sodales Ipsum','T11234',0,'7059',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (542,'Sodales At','T11235',0,'57940',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (543,'Interdum Ut','T11236',0,'53215',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (544,'Justo Sem','T11237',0,'51904',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (546,'Donec Laoreet','T11238',0,'103345',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (547,'Nulla Sodales','T11239',0,'49712',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (551,'Erat Odio','T11240',0,'83304',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (552,'Sit Placerat','T11241',0,'64835',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (555,'Venenatis Aenean','T11242',0,'116773',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (556,'Mauris Sed','T11243',0,'159397',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (557,'Vehicula Commodo','T11244',0,'129720',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (561,'Diam Sed','T11245',0,'15435',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (566,'Turpis Laoreet','T11246',0,'99048',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (573,'Tincidunt Lacinia','T11247',0,'165907',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (575,'Ultrices Et','T11248',0,'97290',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (576,'Convallis Neque','T11249',0,'33575',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (580,'Vitae Lacinia','T11250',0,'186186',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (584,'Magna Vitae','T11251',0,'92342',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (591,'Fringilla Eleifend','T11252',0,'184269',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (592,'Adipiscing ','T11253',0,'163629',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (595,'Cras Quis','T11254',0,'158180',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (596,'Arcu Euismod','T11255',0,'150191',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (597,'
 Dui','T11256',0,'65462',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (599,'Accumsan Id','T11257',0,'49390',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (600,'Et Placerat','T11258',0,'126',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (601,'Ornare Natoque','T11259',0,'97986',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (603,'Mollis Tellus','T11260',0,'116590',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (605,'Tellus Odio','T11261',0,'34978',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (606,'Condimentum Malesuada','T11262',0,'126148',DATE_SUB(curdate(),interval 38 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (607,'Condimentum Sed','T11263',0,'35002',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (608,'In Adipiscing','T11264',0,'148597',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (609,' Purus','T11265',0,'177053',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (611,'Nibh Volutpat','T11266',0,'23337',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (615,'Nec Commodo','T11267',0,'154076',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (617,'Adipiscing Ipsum','T11268',0,'102398',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (620,'Nulla Ac','T11269',0,'85978',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (622,'A Sed','T11270',0,'48109',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (627,'Sodales Consectetur','T11271',0,'138319',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (630,'Ligula Nisi','T11272',0,'145713',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (637,'Convallis Mauris','T11273',0,'31965',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (642,'Ligula Vulputate','T11274',0,'133185',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (644,'Vehicula Sed','T11275',0,'153772',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (647,'Fringilla Leo','T11276',0,'65742',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (649,'Malesuada Quis','T11277',0,'2587',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (650,'Sed At','T11278',0,'171859',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (651,'Eros Proin','T11279',0,'64600',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (654,'Turpis Nunc','T11280',0,'100462',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (657,'Nulla Velit','T11281',0,'457',DATE_SUB(curdate(),interval 31 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (661,'Rutrum Sodales','T11282',0,'2614',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (662,'Erat Convallis','T11283',0,'144562',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (668,'Commodo Nunc','T11284',0,'87637',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (671,'Etiam Faucibus','T11285',0,'130184',DATE_SUB(curdate(),interval 36 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (675,'Fermentum Facilisis','T11286',0,'178186',DATE_SUB(curdate(),interval 34 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (676,'Sed In','T11287',0,'192115',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (681,'Velit Penatibus','T11288',0,'91307',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (683,'Tortor Sociis','T11289',0,'19198',DATE_SUB(curdate(),interval 30 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (685,'Erat Quis','T11290',0,'177092',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (686,'Dictum Non','T11291',0,'25138',DATE_SUB(curdate(),interval 40 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (689,'In Praesent','T11292',0,'196860',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (690,'Consectetur Bibendum','T11293',0,'19854',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (694,'Sem Purus','T11294',0,'18651',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (695,'Nisi Pellentesque','T11295',0,'50619',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (696,'Malesuada Vitae','T11296',0,'80098',DATE_SUB(curdate(),interval 37 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (704,'Vitae Id','T11297',0,'141081',DATE_SUB(curdate(),interval 33 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (707,'Commodo Neque','T11298',0,'105408',DATE_SUB(curdate(),interval 35 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (712,'Magna A','T11299',0,'90068',DATE_SUB(curdate(),interval 39 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (714,'Interdum Nisi','T11300',0,'65766',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (715,'Ipsum Praesent','T11301',0,'190245',DATE_SUB(curdate(),interval 32 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:SELECT ID FROM TaxPayerTable where ParentID is not null
23:43:14 (engine) [SQL]->Exec [Done]:Resource id #2630
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1001,'Magna Venenatis','T11302',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1002,'Euismod Nam','T11303',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1003,'Eu Gravida','T11304',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1004,'Urna Proin','T11305',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1005,'In Tincidunt','T11306',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1006,'Laoreet Proin','T11307',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1007,'Eu Lacinia','T11308',0,0,DATE_SUB(curdate(),interval 0 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1008,'Dui Imperdiet','T11309',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1009,'Sapien Rutrum','T11310',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1010,'Accumsan Nec','T11311',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1011,'Sollicitudin Eget','T11312',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1012,'Ut Bibendum','T11313',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1013,'Ornare Adipiscing','T11314',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1014,'Tortor Vehicula','T11315',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1015,'Ultricies Ac','T11316',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1016,'Pellentesque Ornare','T11317',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1017,'Hendrerit Sodales','T11318',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1018,'Massa Varius','T11319',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1019,'Suspendisse Tellus','T11320',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1020,'Et Vivamus','T11321',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1021,'Laoreet Urna','T11322',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1022,'Vitae Donec','T11323',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1023,'Dignissim Venenatis','T11324',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1024,'Aliquam Vulputate','T11325',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1025,'Nec Mattis','T11326',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1026,'Urna Condimentum','T11327',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1027,'Vitae Dui','T11328',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1028,'Massa Convallis','T11329',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1029,'Diam Ornare','T11330',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1030,'Elit Et','T11331',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1031,'At Dui','T11332',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1032,'Commodo Vitae','T11333',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1033,'Volutpat Faucibus','T11334',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1034,'
 Sagittis','T11335',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1035,'Mauris Tortor','T11336',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1036,'Id Id','T11337',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1037,'Lectus Aliquet','T11338',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1038,'At Ut','T11339',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1039,'Dolor Sodales','T11340',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1040,'A Penatibus','T11341',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1041,'Aliquam Eleifend','T11342',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1042,'Convallis Donec','T11343',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1043,'Euismod Commodo','T11344',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1044,'Ullamcorper Nunc','T11345',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1045,'Dictum Tempus','T11346',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1046,'
 Bibendum','T11347',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1047,'Condimentum Nec','T11348',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1048,'Maecenas Cras','T11349',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1049,'Elit Leo','T11350',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1050,'Magnis Non','T11351',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1051,'Et In','T11352',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1052,'Eget Sodales','T11353',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1053,'Fringilla Commodo','T11354',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1054,'Nascetur Arcu','T11355',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1055,'Vel Fermentum','T11356',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1056,'Et Mattis','T11357',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1057,'Ultrices Sagittis','T11358',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1058,'Quam Ipsum','T11359',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1059,'Sociis Duis','T11360',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1060,'Massa Quis','T11361',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1061,'Diam Commodo','T11362',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1062,'Quis Metus','T11363',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1063,'Laoreet Semper','T11364',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1064,'Urna Tincidunt','T11365',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1065,'Sodales Tellus','T11366',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1066,'Dictum Vitae','T11367',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1067,'Sollicitudin Ipsum','T11368',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1068,'
 Ullamcorper','T11369',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1069,'Quis Cum','T11370',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1070,'Risus Lorem','T11371',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1071,'Condimentum Diam','T11372',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1072,'Sagittis Nulla','T11373',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1073,'Morbi Tristique','T11374',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1074,'Mattis Rutrum','T11375',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1075,'Nascetur Non','T11376',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1076,'Eu Massa','T11377',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1077,'Nunc Id','T11378',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1078,'Nulla Vitae','T11379',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1079,'
 Mus','T11380',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1080,'Velit Praesent','T11381',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1081,'Sapien Imperdiet','T11382',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1082,'Nascetur Ornare','T11383',0,0,DATE_SUB(curdate(),interval 0 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1083,'Magna Magna','T11384',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1084,'Erat Nulla','T11385',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1085,'Erat Lacus','T11386',0,0,DATE_SUB(curdate(),interval 0 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1086,'Vestibulum Eget','T11387',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1087,'Diam Congue','T11388',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1088,'Nec Sed','T11389',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1089,'Vehicula In','T11390',0,0,DATE_SUB(curdate(),interval 0 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1090,'Eu Arcu','T11391',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1091,'Nulla Ridiculus','T11392',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1092,'Malesuada Tincidunt','T11393',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1093,'Sed Sed','T11394',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1094,'Sagittis Facilisis','T11395',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1095,'Risus Laoreet','T11396',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1096,'Ante Id','T11397',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1097,'Vivamus Dui','T11398',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1098,'Nunc Sed','T11399',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1099,'Condimentum 
','T11400',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1100,'Mollis Tincidunt','T11401',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1101,'Ridiculus Lobortis','T11402',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1102,'Lacinia Dui','T11403',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1103,'Auctor Maecenas','T11404',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1104,'Sed Non','T11405',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1105,'Nibh Vulputate','T11406',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1106,'A Vehicula','T11407',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1107,'A Turpis','T11408',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1108,'Mauris Id','T11409',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1109,'Venenatis Fermentum','T11410',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1110,'Imperdiet Elit','T11411',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1111,'Massa Volutpat','T11412',0,0,DATE_SUB(curdate(),interval 12 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1112,'Turpis Metus','T11413',0,0,DATE_SUB(curdate(),interval 5 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1113,'Parturient Hendrerit','T11414',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1114,'Fermentum Amet','T11415',0,0,DATE_SUB(curdate(),interval 3 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1115,'Sagittis Praesent','T11416',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1116,'Facilisis Nec','T11417',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1117,'Sapien Tellus','T11418',0,0,DATE_SUB(curdate(),interval 8 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1118,'Leo Sollicitudin','T11419',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1119,'Nulla Suspendisse','T11420',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1120,'Justo Ante','T11421',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1121,'Rutrum In','T11422',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1122,'Scelerisque Venenatis','T11423',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1123,'Accumsan Malesuada','T11424',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1124,'Blandit Et','T11425',0,0,DATE_SUB(curdate(),interval 6 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1125,'Turpis Fringilla','T11426',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1126,'Pellentesque Sed','T11427',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1127,'A Sed','T11428',0,0,DATE_SUB(curdate(),interval 0 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1128,'Convallis Velit','T11429',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1129,'Vivamus Donec','T11430',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1130,'Lectus In','T11431',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1131,'Accumsan Varius','T11432',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1132,'Non At','T11433',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1133,'Sollicitudin Ipsum','T11434',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1134,'Mollis Ut','T11435',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1135,'Magnis Et','T11436',0,0,DATE_SUB(curdate(),interval 9 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1136,'Gravida Convallis','T11437',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1137,'Cum Auctor','T11438',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1138,'Nascetur Eget','T11439',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1139,'Eget Dui','T11440',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1140,'Et Vitae','T11441',0,0,DATE_SUB(curdate(),interval 14 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1141,'Ipsum In','T11442',0,0,DATE_SUB(curdate(),interval 7 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1142,'Dis Ac','T11443',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1143,'In Tristique','T11444',0,0,DATE_SUB(curdate(),interval 1 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:14 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1144,'Risus Hendrerit','T11445',0,0,DATE_SUB(curdate(),interval 11 year));
23:43:14 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1145,'Felis Purus','T11446',0,0,DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1146,'Quis Commodo','T11447',0,0,DATE_SUB(curdate(),interval 4 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1147,'Ultricies Sed','T11448',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1148,'A Dui','T11449',0,0,DATE_SUB(curdate(),interval 2 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1149,'Ullamcorper Donec','T11450',0,0,DATE_SUB(curdate(),interval 10 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (ParentID, Name, Code, Type, Income, DateOfCreation) VALUES (1150,'Erat Lobortis','T11451',0,0,DATE_SUB(curdate(),interval 13 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Ridiculus AS','B10001',1,'4972424',DATE_SUB(curdate(),interval 96 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Donec OÜ','B10002',1,'7189302',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Mattis FIE','B10003',1,'5663458',DATE_SUB(curdate(),interval 20 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Magna FIE','B10004',1,'3460509',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Nam AS','B10005',1,'4658620',DATE_SUB(curdate(),interval 23 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Lorem FIE','B10006',1,'1290599',DATE_SUB(curdate(),interval 87 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Rhoncus OÜ','B10007',1,'8246781',DATE_SUB(curdate(),interval 47 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Accumsan OÜ','B10008',1,'9256044',DATE_SUB(curdate(),interval 74 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Id FIE','B10009',1,'8770054',DATE_SUB(curdate(),interval 41 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Ultricies AS','B10010',1,'9507644',DATE_SUB(curdate(),interval 11 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Neque AS','B10011',1,'4033601',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Fringilla FIE','B10012',1,'4120112',DATE_SUB(curdate(),interval 29 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Diam AS','B10013',1,'2305449',DATE_SUB(curdate(),interval 90 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Eget FIE','B10014',1,'4854769',DATE_SUB(curdate(),interval 36 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Donec AS','B10015',1,'6621720',DATE_SUB(curdate(),interval 17 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Eget AS','B10016',1,'7476466',DATE_SUB(curdate(),interval 71 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Non OÜ','B10017',1,'4043328',DATE_SUB(curdate(),interval 30 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Tristique OÜ','B10018',1,'7025402',DATE_SUB(curdate(),interval 12 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Et AS','B10019',1,'2679424',DATE_SUB(curdate(),interval 61 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut A AS','B10020',1,'1597019',DATE_SUB(curdate(),interval 40 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis 
 FIE','B10021',1,'7185560',DATE_SUB(curdate(),interval 37 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Risus AS','B10022',1,'9028576',DATE_SUB(curdate(),interval 8 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Adipiscing AS','B10023',1,'4339671',DATE_SUB(curdate(),interval 36 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Eleifend AS','B10024',1,'9371042',DATE_SUB(curdate(),interval 78 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Potenti AS','B10025',1,'5367088',DATE_SUB(curdate(),interval 99 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Commodo FIE','B10026',1,'9247978',DATE_SUB(curdate(),interval 67 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aenean Nec OÜ','B10027',1,'1618814',DATE_SUB(curdate(),interval 2 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Fermentum OÜ','B10028',1,'9375562',DATE_SUB(curdate(),interval 84 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nascetur Tristique FIE','B10029',1,'5805214',DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nulla AS','B10030',1,'4176853',DATE_SUB(curdate(),interval 83 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Gravida OÜ','B10031',1,'3574977',DATE_SUB(curdate(),interval 10 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Pellentesque FIE','B10032',1,'6029967',DATE_SUB(curdate(),interval 6 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Ligula OÜ','B10033',1,'8186696',DATE_SUB(curdate(),interval 99 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Neque FIE','B10034',1,'8406119',DATE_SUB(curdate(),interval 52 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Convallis AS','B10035',1,'6727427',DATE_SUB(curdate(),interval 84 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Nulla FIE','B10036',1,'7421476',DATE_SUB(curdate(),interval 20 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Lacinia FIE','B10037',1,'2577995',DATE_SUB(curdate(),interval 4 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Nunc AS','B10038',1,'6693916',DATE_SUB(curdate(),interval 33 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Amet AS','B10039',1,'6792291',DATE_SUB(curdate(),interval 81 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Mollis OÜ','B10040',1,'2591955',DATE_SUB(curdate(),interval 90 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Proin AS','B10041',1,'3012846',DATE_SUB(curdate(),interval 59 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Lacus OÜ','B10042',1,'7882552',DATE_SUB(curdate(),interval 39 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Varius AS','B10043',1,'5233468',DATE_SUB(curdate(),interval 50 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac A AS','B10044',1,'4300560',DATE_SUB(curdate(),interval 2 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Imperdiet AS','B10045',1,'8777129',DATE_SUB(curdate(),interval 25 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Erat AS','B10046',1,'3258248',DATE_SUB(curdate(),interval 28 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Condimentum AS','B10047',1,'4769071',DATE_SUB(curdate(),interval 40 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Est AS','B10048',1,'3417366',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Penatibus Sed OÜ','B10049',1,'6455259',DATE_SUB(curdate(),interval 39 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Fringilla FIE','B10050',1,'3751229',DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Sed FIE','B10051',1,'8651309',DATE_SUB(curdate(),interval 78 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Diam FIE','B10052',1,'4105073',DATE_SUB(curdate(),interval 96 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Turpis AS','B10053',1,'4625225',DATE_SUB(curdate(),interval 99 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Vestibulum OÜ','B10054',1,'6346450',DATE_SUB(curdate(),interval 50 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Arcu OÜ','B10055',1,'2734227',DATE_SUB(curdate(),interval 66 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate A OÜ','B10056',1,'6246486',DATE_SUB(curdate(),interval 53 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non A OÜ','B10057',1,'4373524',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A A FIE','B10058',1,'1994832',DATE_SUB(curdate(),interval 74 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Vulputate AS','B10059',1,'1169830',DATE_SUB(curdate(),interval 68 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Duis Felis FIE','B10060',1,'7549454',DATE_SUB(curdate(),interval 13 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Turpis AS','B10061',1,'8384642',DATE_SUB(curdate(),interval 58 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Euismod FIE','B10062',1,'3753350',DATE_SUB(curdate(),interval 20 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sed OÜ','B10063',1,'8006704',DATE_SUB(curdate(),interval 29 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Ipsum FIE','B10064',1,'8060309',DATE_SUB(curdate(),interval 11 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Volutpat OÜ','B10065',1,'7552451',DATE_SUB(curdate(),interval 70 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Adipiscing AS','B10066',1,'9834419',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Malesuada AS','B10067',1,'6063187',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Consectetur FIE','B10068',1,'5548853',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Ullamcorper OÜ','B10069',1,'6683973',DATE_SUB(curdate(),interval 62 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Dis OÜ','B10070',1,'6489849',DATE_SUB(curdate(),interval 25 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pharetra Sem FIE','B10071',1,'2148491',DATE_SUB(curdate(),interval 76 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Magna FIE','B10072',1,'8847519',DATE_SUB(curdate(),interval 18 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Aliquet OÜ','B10073',1,'6881927',DATE_SUB(curdate(),interval 81 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Ornare AS','B10074',1,'6477262',DATE_SUB(curdate(),interval 87 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nulla FIE','B10075',1,'6230767',DATE_SUB(curdate(),interval 27 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Phasellus FIE','B10076',1,'9436839',DATE_SUB(curdate(),interval 11 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Ut AS','B10077',1,'9456920',DATE_SUB(curdate(),interval 80 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Mollis AS','B10078',1,'7211339',DATE_SUB(curdate(),interval 45 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac In FIE','B10079',1,'7768753',DATE_SUB(curdate(),interval 87 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Mauris AS','B10080',1,'7465709',DATE_SUB(curdate(),interval 14 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Velit FIE','B10081',1,'8116467',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Quis FIE','B10082',1,'8226234',DATE_SUB(curdate(),interval 4 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Condimentum FIE','B10083',1,'1173863',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Sagittis AS','B10084',1,'5668339',DATE_SUB(curdate(),interval 62 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Vivamus FIE','B10085',1,'5094878',DATE_SUB(curdate(),interval 45 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Velit FIE','B10086',1,'9374420',DATE_SUB(curdate(),interval 67 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Elit AS','B10087',1,'9144897',DATE_SUB(curdate(),interval 81 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Tincidunt FIE','B10088',1,'3950783',DATE_SUB(curdate(),interval 77 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Facilisis OÜ','B10089',1,'7135779',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Magna AS','B10090',1,'6730494',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Odio OÜ','B10091',1,'6426249',DATE_SUB(curdate(),interval 86 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Donec FIE','B10092',1,'8705882',DATE_SUB(curdate(),interval 23 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Maecenas AS','B10093',1,'8286780',DATE_SUB(curdate(),interval 89 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Praesent FIE','B10094',1,'9887385',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Velit FIE','B10095',1,'2621838',DATE_SUB(curdate(),interval 63 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Id FIE','B10096',1,'3462465',DATE_SUB(curdate(),interval 13 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Nulla OÜ','B10097',1,'9742396',DATE_SUB(curdate(),interval 65 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Leo FIE','B10098',1,'2811885',DATE_SUB(curdate(),interval 70 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Volutpat FIE','B10099',1,'5014662',DATE_SUB(curdate(),interval 49 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Id FIE','B10100',1,'4680256',DATE_SUB(curdate(),interval 50 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Adipiscing OÜ','B10101',1,'5489550',DATE_SUB(curdate(),interval 20 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Vitae FIE','B10102',1,'9278971',DATE_SUB(curdate(),interval 90 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Dis FIE','B10103',1,'4289436',DATE_SUB(curdate(),interval 44 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Quis AS','B10104',1,'5815050',DATE_SUB(curdate(),interval 96 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Scelerisque OÜ','B10105',1,'6997619',DATE_SUB(curdate(),interval 17 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Vestibulum FIE','B10106',1,'1013529',DATE_SUB(curdate(),interval 64 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Neque OÜ','B10107',1,'6762120',DATE_SUB(curdate(),interval 8 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Molestie Dui FIE','B10108',1,'5965009',DATE_SUB(curdate(),interval 65 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Sed AS','B10109',1,'5984947',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Et OÜ','B10110',1,'8637707',DATE_SUB(curdate(),interval 67 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Donec OÜ','B10111',1,'1937328',DATE_SUB(curdate(),interval 50 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Vivamus FIE','B10112',1,'3249971',DATE_SUB(curdate(),interval 23 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Metus Sed FIE','B10113',1,'1253312',DATE_SUB(curdate(),interval 7 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Vehicula FIE','B10114',1,'6626591',DATE_SUB(curdate(),interval 44 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Placerat FIE','B10115',1,'6123763',DATE_SUB(curdate(),interval 80 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Tincidunt FIE','B10116',1,'1620416',DATE_SUB(curdate(),interval 98 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Venenatis FIE','B10117',1,'1000995',DATE_SUB(curdate(),interval 64 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Turpis FIE','B10118',1,'1445284',DATE_SUB(curdate(),interval 82 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Massa AS','B10119',1,'9325488',DATE_SUB(curdate(),interval 45 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Donec AS','B10120',1,'2197230',DATE_SUB(curdate(),interval 46 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Ultricies FIE','B10121',1,'6267387',DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Quisque AS','B10122',1,'4809428',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Dui FIE','B10123',1,'1710460',DATE_SUB(curdate(),interval 2 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Fringilla OÜ','B10124',1,'3342887',DATE_SUB(curdate(),interval 45 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Quis FIE','B10125',1,'6951647',DATE_SUB(curdate(),interval 29 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Purus AS','B10126',1,'6825287',DATE_SUB(curdate(),interval 12 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Consectetur FIE','B10127',1,'3565746',DATE_SUB(curdate(),interval 0 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Nunc AS','B10128',1,'2299009',DATE_SUB(curdate(),interval 20 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Bibendum AS','B10129',1,'2076186',DATE_SUB(curdate(),interval 49 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Facilisis FIE','B10130',1,'8632525',DATE_SUB(curdate(),interval 77 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Proin AS','B10131',1,'2757992',DATE_SUB(curdate(),interval 92 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Facilisis FIE','B10132',1,'5907609',DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Tincidunt OÜ','B10133',1,'7655879',DATE_SUB(curdate(),interval 41 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis In AS','B10134',1,'7510796',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lacus AS','B10135',1,'6598532',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem A FIE','B10136',1,'5700847',DATE_SUB(curdate(),interval 73 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Nulla FIE','B10137',1,'6619692',DATE_SUB(curdate(),interval 4 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Accumsan OÜ','B10138',1,'8281507',DATE_SUB(curdate(),interval 59 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Ultricies FIE','B10139',1,'3582254',DATE_SUB(curdate(),interval 58 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nibh AS','B10140',1,'3971419',DATE_SUB(curdate(),interval 58 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Scelerisque FIE','B10141',1,'1693655',DATE_SUB(curdate(),interval 34 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Condimentum AS','B10142',1,'6454495',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Nam AS','B10143',1,'9376673',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Id FIE','B10144',1,'7241168',DATE_SUB(curdate(),interval 64 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Bibendum OÜ','B10145',1,'1717592',DATE_SUB(curdate(),interval 70 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Interdum OÜ','B10146',1,'3187363',DATE_SUB(curdate(),interval 55 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Nibh AS','B10147',1,'8326835',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Diam FIE','B10148',1,'8568343',DATE_SUB(curdate(),interval 30 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Fringilla OÜ','B10149',1,'3605159',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Nisi OÜ','B10150',1,'9023260',DATE_SUB(curdate(),interval 12 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Tincidunt OÜ','B10151',1,'7056469',DATE_SUB(curdate(),interval 33 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Cursus OÜ','B10152',1,'7989656',DATE_SUB(curdate(),interval 98 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Sed AS','B10153',1,'4277745',DATE_SUB(curdate(),interval 73 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Ac OÜ','B10154',1,'4172019',DATE_SUB(curdate(),interval 83 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Proin OÜ','B10155',1,'2239194',DATE_SUB(curdate(),interval 84 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Sollicitudin AS','B10156',1,'8954470',DATE_SUB(curdate(),interval 15 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Mauris OÜ','B10157',1,'9228943',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Blandit OÜ','B10158',1,'3509202',DATE_SUB(curdate(),interval 92 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Commodo FIE','B10159',1,'6472636',DATE_SUB(curdate(),interval 74 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend  FIE','B10160',1,'9887585',DATE_SUB(curdate(),interval 35 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Scelerisque FIE','B10161',1,'2372164',DATE_SUB(curdate(),interval 86 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Mus AS','B10162',1,'1116519',DATE_SUB(curdate(),interval 37 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Vestibulum OÜ','B10163',1,'7107462',DATE_SUB(curdate(),interval 31 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Tellus OÜ','B10164',1,'7082732',DATE_SUB(curdate(),interval 69 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Et AS','B10165',1,'2720307',DATE_SUB(curdate(),interval 75 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Praesent FIE','B10166',1,'5640728',DATE_SUB(curdate(),interval 74 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nam Pellentesque OÜ','B10167',1,'1006851',DATE_SUB(curdate(),interval 21 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius 
 FIE','B10168',1,'4973894',DATE_SUB(curdate(),interval 76 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Vestibulum AS','B10169',1,'5555401',DATE_SUB(curdate(),interval 39 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Diam FIE','B10170',1,'9316414',DATE_SUB(curdate(),interval 37 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Sagittis OÜ','B10171',1,'6028633',DATE_SUB(curdate(),interval 48 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Ornare AS','B10172',1,'1025891',DATE_SUB(curdate(),interval 88 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Tristique FIE','B10173',1,'4810367',DATE_SUB(curdate(),interval 10 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Tortor FIE','B10174',1,'8469766',DATE_SUB(curdate(),interval 18 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Dictum FIE','B10175',1,'7883915',DATE_SUB(curdate(),interval 40 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mi Placerat AS','B10176',1,'1934739',DATE_SUB(curdate(),interval 16 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dis In OÜ','B10177',1,'9847794',DATE_SUB(curdate(),interval 16 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Id OÜ','B10178',1,'2394351',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ut OÜ','B10179',1,'3849884',DATE_SUB(curdate(),interval 54 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Est AS','B10180',1,'3616669',DATE_SUB(curdate(),interval 28 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Id AS','B10181',1,'4338912',DATE_SUB(curdate(),interval 66 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Sodales FIE','B10182',1,'7032189',DATE_SUB(curdate(),interval 77 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Suscipit OÜ','B10183',1,'5607965',DATE_SUB(curdate(),interval 12 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Massa OÜ','B10184',1,'1433515',DATE_SUB(curdate(),interval 60 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Sed FIE','B10185',1,'9572633',DATE_SUB(curdate(),interval 76 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Fringilla AS','B10186',1,'5870751',DATE_SUB(curdate(),interval 69 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Amet OÜ','B10187',1,'6986235',DATE_SUB(curdate(),interval 38 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Placerat AS','B10188',1,'2304496',DATE_SUB(curdate(),interval 91 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Accumsan Mattis AS','B10189',1,'2748210',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Dui AS','B10190',1,'5858782',DATE_SUB(curdate(),interval 78 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Quisque AS','B10191',1,'5203664',DATE_SUB(curdate(),interval 10 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Scelerisque OÜ','B10192',1,'2537372',DATE_SUB(curdate(),interval 26 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Velit AS','B10193',1,'7921813',DATE_SUB(curdate(),interval 32 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Consectetur OÜ','B10194',1,'7359442',DATE_SUB(curdate(),interval 16 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Auctor OÜ','B10195',1,'5712222',DATE_SUB(curdate(),interval 72 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Diam OÜ','B10196',1,'3204428',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus  OÜ','B10197',1,'4908800',DATE_SUB(curdate(),interval 47 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Vestibulum AS','B10198',1,'9876147',DATE_SUB(curdate(),interval 57 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Condimentum AS','B10199',1,'7550394',DATE_SUB(curdate(),interval 95 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Turpis FIE','B10200',1,'2082233',DATE_SUB(curdate(),interval 9 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Laoreet OÜ','B10201',1,'5324106',DATE_SUB(curdate(),interval 11 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Turpis FIE','B10202',1,'8117286',DATE_SUB(curdate(),interval 81 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Consectetur FIE','B10203',1,'4963144',DATE_SUB(curdate(),interval 45 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Luctus FIE','B10204',1,'5174932',DATE_SUB(curdate(),interval 92 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Consectetur Sed AS','B10205',1,'6817910',DATE_SUB(curdate(),interval 65 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui A AS','B10206',1,'9836856',DATE_SUB(curdate(),interval 32 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Diam FIE','B10207',1,'7658845',DATE_SUB(curdate(),interval 58 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Amet AS','B10208',1,'8637982',DATE_SUB(curdate(),interval 88 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Convallis FIE','B10209',1,'7873878',DATE_SUB(curdate(),interval 34 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Congue AS','B10210',1,'2639156',DATE_SUB(curdate(),interval 50 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Leo OÜ','B10211',1,'3451104',DATE_SUB(curdate(),interval 24 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Mi OÜ','B10212',1,'1839415',DATE_SUB(curdate(),interval 28 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper 
 OÜ','B10213',1,'7172064',DATE_SUB(curdate(),interval 96 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Vestibulum AS','B10214',1,'1863877',DATE_SUB(curdate(),interval 57 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Condimentum OÜ','B10215',1,'8153584',DATE_SUB(curdate(),interval 82 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Tincidunt FIE','B10216',1,'1750326',DATE_SUB(curdate(),interval 31 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Et FIE','B10217',1,'7978676',DATE_SUB(curdate(),interval 54 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempus Ullamcorper FIE','B10218',1,'6425151',DATE_SUB(curdate(),interval 94 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Commodo AS','B10219',1,'5494619',DATE_SUB(curdate(),interval 5 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Est FIE','B10220',1,'2218189',DATE_SUB(curdate(),interval 55 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Venenatis OÜ','B10221',1,'8334162',DATE_SUB(curdate(),interval 84 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Vitae FIE','B10222',1,'3387059',DATE_SUB(curdate(),interval 71 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Euismod FIE','B10223',1,'2719261',DATE_SUB(curdate(),interval 40 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Ultrices AS','B10224',1,'4263128',DATE_SUB(curdate(),interval 95 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Mus AS','B10225',1,'3836960',DATE_SUB(curdate(),interval 99 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Consectetur OÜ','B10226',1,'2417557',DATE_SUB(curdate(),interval 55 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Adipiscing OÜ','B10227',1,'6260038',DATE_SUB(curdate(),interval 32 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ullamcorper FIE','B10228',1,'4604623',DATE_SUB(curdate(),interval 26 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Vehicula FIE','B10229',1,'6716145',DATE_SUB(curdate(),interval 88 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Tempus AS','B10230',1,'5639108',DATE_SUB(curdate(),interval 52 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Ut AS','B10231',1,'5408916',DATE_SUB(curdate(),interval 100 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Nulla OÜ','B10232',1,'4828988',DATE_SUB(curdate(),interval 2 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Tellus OÜ','B10233',1,'6032141',DATE_SUB(curdate(),interval 100 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Purus FIE','B10234',1,'8130657',DATE_SUB(curdate(),interval 39 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Eget AS','B10235',1,'2239405',DATE_SUB(curdate(),interval 8 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Magna AS','B10236',1,'2469471',DATE_SUB(curdate(),interval 94 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Ipsum OÜ','B10237',1,'7863874',DATE_SUB(curdate(),interval 82 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Praesent FIE','B10238',1,'1278590',DATE_SUB(curdate(),interval 17 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Ullamcorper OÜ','B10239',1,'3239821',DATE_SUB(curdate(),interval 56 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Nam OÜ','B10240',1,'6182882',DATE_SUB(curdate(),interval 89 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Id OÜ','B10241',1,'1101564',DATE_SUB(curdate(),interval 97 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Mauris OÜ','B10242',1,'6924930',DATE_SUB(curdate(),interval 12 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Consectetur OÜ','B10243',1,'9414864',DATE_SUB(curdate(),interval 18 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Proin FIE','B10244',1,'9665566',DATE_SUB(curdate(),interval 58 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Vehicula OÜ','B10245',1,'7253115',DATE_SUB(curdate(),interval 93 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Mattis AS','B10246',1,'7122104',DATE_SUB(curdate(),interval 86 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed In FIE','B10247',1,'3268281',DATE_SUB(curdate(),interval 63 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Eros OÜ','B10248',1,'1343230',DATE_SUB(curdate(),interval 33 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Ornare FIE','B10249',1,'2402431',DATE_SUB(curdate(),interval 29 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Nisi FIE','B10250',1,'8706920',DATE_SUB(curdate(),interval 39 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Eget AS','B10251',1,'1028692',DATE_SUB(curdate(),interval 66 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Et FIE','B10252',1,'1263526',DATE_SUB(curdate(),interval 82 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla A OÜ','B10253',1,'5273966',DATE_SUB(curdate(),interval 19 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Interdum Erat FIE','B10254',1,'6866295',DATE_SUB(curdate(),interval 16 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Ornare OÜ','B10255',1,'9492711',DATE_SUB(curdate(),interval 51 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quam Nulla FIE','B10256',1,'6901400',DATE_SUB(curdate(),interval 73 year));
23:43:15 (engine) [SQL]->Exec [Done]:1
23:43:15 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Amet FIE','B10257',1,'4623834',DATE_SUB(curdate(),interval 8 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Ante AS','B10258',1,'3552924',DATE_SUB(curdate(),interval 43 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Congue Mollis OÜ','B10259',1,'5260004',DATE_SUB(curdate(),interval 55 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Felis FIE','B10260',1,'4999015',DATE_SUB(curdate(),interval 19 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Nulla OÜ','B10261',1,'4278017',DATE_SUB(curdate(),interval 59 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Placerat OÜ','B10262',1,'1012550',DATE_SUB(curdate(),interval 84 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ipsum Morbi FIE','B10263',1,'8826154',DATE_SUB(curdate(),interval 74 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Interdum AS','B10264',1,'2960618',DATE_SUB(curdate(),interval 50 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Massa OÜ','B10265',1,'9580011',DATE_SUB(curdate(),interval 73 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Mauris AS','B10266',1,'8200014',DATE_SUB(curdate(),interval 98 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sociis Nulla OÜ','B10267',1,'1061584',DATE_SUB(curdate(),interval 0 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Augue AS','B10268',1,'6902511',DATE_SUB(curdate(),interval 6 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Donec OÜ','B10269',1,'9375691',DATE_SUB(curdate(),interval 71 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Luctus FIE','B10270',1,'3483330',DATE_SUB(curdate(),interval 14 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Commodo OÜ','B10271',1,'9980784',DATE_SUB(curdate(),interval 81 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Mauris AS','B10272',1,'4580369',DATE_SUB(curdate(),interval 93 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Molestie OÜ','B10273',1,'9303387',DATE_SUB(curdate(),interval 87 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Tortor FIE','B10274',1,'7785803',DATE_SUB(curdate(),interval 78 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Urna OÜ','B10275',1,'4616610',DATE_SUB(curdate(),interval 70 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Felis OÜ','B10276',1,'3199823',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Sodales OÜ','B10277',1,'2589452',DATE_SUB(curdate(),interval 67 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Donec FIE','B10278',1,'8201594',DATE_SUB(curdate(),interval 71 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lectus Quis OÜ','B10279',1,'3447038',DATE_SUB(curdate(),interval 2 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Convallis Ultricies AS','B10280',1,'4201652',DATE_SUB(curdate(),interval 60 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Ornare OÜ','B10281',1,'5938001',DATE_SUB(curdate(),interval 76 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Nulla AS','B10282',1,'7283196',DATE_SUB(curdate(),interval 11 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Parturient FIE','B10283',1,'7964883',DATE_SUB(curdate(),interval 65 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Id FIE','B10284',1,'3115000',DATE_SUB(curdate(),interval 4 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Aenean AS','B10285',1,'2998596',DATE_SUB(curdate(),interval 21 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Dictum AS','B10286',1,'3982498',DATE_SUB(curdate(),interval 0 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Fringilla OÜ','B10287',1,'1180602',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Lacus FIE','B10288',1,'4713741',DATE_SUB(curdate(),interval 79 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Justo AS','B10289',1,'6224544',DATE_SUB(curdate(),interval 29 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Dui OÜ','B10290',1,'8803848',DATE_SUB(curdate(),interval 26 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Auctor AS','B10291',1,'7545140',DATE_SUB(curdate(),interval 75 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Ornare OÜ','B10292',1,'5312752',DATE_SUB(curdate(),interval 23 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Id OÜ','B10293',1,'7817636',DATE_SUB(curdate(),interval 15 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Sed AS','B10294',1,'9973793',DATE_SUB(curdate(),interval 28 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Potenti FIE','B10295',1,'3592364',DATE_SUB(curdate(),interval 37 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Magna OÜ','B10296',1,'6790765',DATE_SUB(curdate(),interval 6 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Risus OÜ','B10297',1,'8871526',DATE_SUB(curdate(),interval 95 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Ultricies FIE','B10298',1,'7666167',DATE_SUB(curdate(),interval 78 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Suscipit FIE','B10299',1,'6331469',DATE_SUB(curdate(),interval 90 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Ornare FIE','B10300',1,'3713991',DATE_SUB(curdate(),interval 91 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Ipsum FIE','B10301',1,'8806383',DATE_SUB(curdate(),interval 62 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mollis Imperdiet FIE','B10302',1,'5303933',DATE_SUB(curdate(),interval 62 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Libero Sem FIE','B10303',1,'5275419',DATE_SUB(curdate(),interval 2 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Sed AS','B10304',1,'6789296',DATE_SUB(curdate(),interval 56 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eu Cursus FIE','B10305',1,'1011126',DATE_SUB(curdate(),interval 33 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Commodo AS','B10306',1,'4311043',DATE_SUB(curdate(),interval 36 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Nisi FIE','B10307',1,'8515423',DATE_SUB(curdate(),interval 29 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Sed AS','B10308',1,'2132355',DATE_SUB(curdate(),interval 39 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Dolor OÜ','B10309',1,'7498376',DATE_SUB(curdate(),interval 48 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet Facilisis AS','B10310',1,'8839755',DATE_SUB(curdate(),interval 15 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Eget FIE','B10311',1,'6041936',DATE_SUB(curdate(),interval 97 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Tempus AS','B10312',1,'5040198',DATE_SUB(curdate(),interval 52 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim Ultricies FIE','B10313',1,'1748539',DATE_SUB(curdate(),interval 42 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet A AS','B10314',1,'5593949',DATE_SUB(curdate(),interval 52 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum A OÜ','B10315',1,'3251978',DATE_SUB(curdate(),interval 11 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Tempus OÜ','B10316',1,'3786007',DATE_SUB(curdate(),interval 68 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Vitae OÜ','B10317',1,'7014802',DATE_SUB(curdate(),interval 73 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Vehicula FIE','B10318',1,'6686988',DATE_SUB(curdate(),interval 33 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Nullam FIE','B10319',1,'4264646',DATE_SUB(curdate(),interval 10 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Commodo OÜ','B10320',1,'7017450',DATE_SUB(curdate(),interval 11 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Praesent OÜ','B10321',1,'5895310',DATE_SUB(curdate(),interval 64 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Proin OÜ','B10322',1,'3271406',DATE_SUB(curdate(),interval 87 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Sem AS','B10323',1,'7788871',DATE_SUB(curdate(),interval 70 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Aenean OÜ','B10324',1,'6852664',DATE_SUB(curdate(),interval 100 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Commodo AS','B10325',1,'8520195',DATE_SUB(curdate(),interval 42 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ut Donec AS','B10326',1,'6558870',DATE_SUB(curdate(),interval 85 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Bibendum AS','B10327',1,'6936402',DATE_SUB(curdate(),interval 18 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia At FIE','B10328',1,'3738864',DATE_SUB(curdate(),interval 54 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Magna OÜ','B10329',1,'6631624',DATE_SUB(curdate(),interval 17 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Malesuada OÜ','B10330',1,'8698907',DATE_SUB(curdate(),interval 3 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Justo Urna AS','B10331',1,'5832146',DATE_SUB(curdate(),interval 61 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Laoreet FIE','B10332',1,'6024555',DATE_SUB(curdate(),interval 27 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Lectus FIE','B10333',1,'8691067',DATE_SUB(curdate(),interval 37 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Vestibulum OÜ','B10334',1,'8378463',DATE_SUB(curdate(),interval 2 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Ut OÜ','B10335',1,'7852888',DATE_SUB(curdate(),interval 3 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Sem OÜ','B10336',1,'2340867',DATE_SUB(curdate(),interval 89 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Ut OÜ','B10337',1,'6110946',DATE_SUB(curdate(),interval 21 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Diam FIE','B10338',1,'1463821',DATE_SUB(curdate(),interval 65 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Volutpat OÜ','B10339',1,'1428300',DATE_SUB(curdate(),interval 53 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Blandit AS','B10340',1,'4414104',DATE_SUB(curdate(),interval 96 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Mattis OÜ','B10341',1,'7453233',DATE_SUB(curdate(),interval 33 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Bibendum Morbi OÜ','B10342',1,'8520671',DATE_SUB(curdate(),interval 48 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At Convallis AS','B10343',1,'9213276',DATE_SUB(curdate(),interval 87 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Ipsum FIE','B10344',1,'3066838',DATE_SUB(curdate(),interval 23 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Nec FIE','B10345',1,'9792126',DATE_SUB(curdate(),interval 42 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Fermentum OÜ','B10346',1,'7239694',DATE_SUB(curdate(),interval 8 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus Malesuada OÜ','B10347',1,'8886660',DATE_SUB(curdate(),interval 69 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis At AS','B10348',1,'4141886',DATE_SUB(curdate(),interval 12 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing In OÜ','B10349',1,'6897181',DATE_SUB(curdate(),interval 51 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Elit FIE','B10350',1,'3309392',DATE_SUB(curdate(),interval 25 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Luctus Sed OÜ','B10351',1,'8544819',DATE_SUB(curdate(),interval 85 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sem Mattis OÜ','B10352',1,'6268185',DATE_SUB(curdate(),interval 98 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Eu FIE','B10353',1,'3611945',DATE_SUB(curdate(),interval 97 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Nunc AS','B10354',1,'6798320',DATE_SUB(curdate(),interval 63 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Commodo Sem AS','B10355',1,'8157505',DATE_SUB(curdate(),interval 80 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dignissim Erat FIE','B10356',1,'4907948',DATE_SUB(curdate(),interval 34 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Quis AS','B10357',1,'7177288',DATE_SUB(curdate(),interval 20 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Morbi OÜ','B10358',1,'6601492',DATE_SUB(curdate(),interval 30 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum Sollicitudin OÜ','B10359',1,'4569375',DATE_SUB(curdate(),interval 55 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Nullam FIE','B10360',1,'6583138',DATE_SUB(curdate(),interval 67 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Vehicula FIE','B10361',1,'7069555',DATE_SUB(curdate(),interval 79 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Ut FIE','B10362',1,'4879025',DATE_SUB(curdate(),interval 85 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Ligula AS','B10363',1,'4942175',DATE_SUB(curdate(),interval 18 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Phasellus FIE','B10364',1,'9024456',DATE_SUB(curdate(),interval 12 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Ultrices OÜ','B10365',1,'6484851',DATE_SUB(curdate(),interval 75 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Sapien FIE','B10366',1,'7862245',DATE_SUB(curdate(),interval 60 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi 
 OÜ','B10367',1,'3203795',DATE_SUB(curdate(),interval 89 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Molestie AS','B10368',1,'3299007',DATE_SUB(curdate(),interval 29 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Parturient FIE','B10369',1,'4213577',DATE_SUB(curdate(),interval 92 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Semper OÜ','B10370',1,'8913658',DATE_SUB(curdate(),interval 66 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Lacus AS','B10371',1,'9431444',DATE_SUB(curdate(),interval 70 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Enim FIE','B10372',1,'5635959',DATE_SUB(curdate(),interval 64 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Fermentum FIE','B10373',1,'8774272',DATE_SUB(curdate(),interval 19 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Id AS','B10374',1,'1303715',DATE_SUB(curdate(),interval 50 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Ipsum FIE','B10375',1,'2116897',DATE_SUB(curdate(),interval 54 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Nam AS','B10376',1,'3772308',DATE_SUB(curdate(),interval 98 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Molestie AS','B10377',1,'9733569',DATE_SUB(curdate(),interval 80 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Semper Morbi FIE','B10378',1,'4996101',DATE_SUB(curdate(),interval 23 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Vestibulum AS','B10379',1,'2382636',DATE_SUB(curdate(),interval 58 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sagittis Praesent FIE','B10380',1,'4829519',DATE_SUB(curdate(),interval 93 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tempor Porttitor AS','B10381',1,'3671889',DATE_SUB(curdate(),interval 89 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Tellus FIE','B10382',1,'9513916',DATE_SUB(curdate(),interval 49 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Non OÜ','B10383',1,'1250481',DATE_SUB(curdate(),interval 88 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Potenti OÜ','B10384',1,'8302593',DATE_SUB(curdate(),interval 24 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Aliquam FIE','B10385',1,'1159872',DATE_SUB(curdate(),interval 27 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis A AS','B10386',1,'4259849',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sit Ac OÜ','B10387',1,'2642296',DATE_SUB(curdate(),interval 99 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magnis Accumsan AS','B10388',1,'5069242',DATE_SUB(curdate(),interval 77 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Ut FIE','B10389',1,'1082327',DATE_SUB(curdate(),interval 44 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Lobortis AS','B10390',1,'2449091',DATE_SUB(curdate(),interval 97 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Parturient Ullamcorper AS','B10391',1,'4885293',DATE_SUB(curdate(),interval 1 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Non OÜ','B10392',1,'5578027',DATE_SUB(curdate(),interval 33 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Neque AS','B10393',1,'8275075',DATE_SUB(curdate(),interval 77 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Vulputate OÜ','B10394',1,'2486159',DATE_SUB(curdate(),interval 73 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Id AS','B10395',1,'1383541',DATE_SUB(curdate(),interval 84 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Odio FIE','B10396',1,'8358544',DATE_SUB(curdate(),interval 77 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Velit Blandit FIE','B10397',1,'1273008',DATE_SUB(curdate(),interval 73 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Sed FIE','B10398',1,'2632154',DATE_SUB(curdate(),interval 89 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rhoncus Bibendum OÜ','B10399',1,'1383266',DATE_SUB(curdate(),interval 21 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tincidunt Nulla OÜ','B10400',1,'8588203',DATE_SUB(curdate(),interval 20 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Mattis AS','B10401',1,'4267397',DATE_SUB(curdate(),interval 25 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia A FIE','B10402',1,'8657146',DATE_SUB(curdate(),interval 77 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Gravida Vulputate AS','B10403',1,'4387323',DATE_SUB(curdate(),interval 83 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Auctor AS','B10404',1,'5260856',DATE_SUB(curdate(),interval 33 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Ligula FIE','B10405',1,'6216036',DATE_SUB(curdate(),interval 54 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Tempus OÜ','B10406',1,'5040368',DATE_SUB(curdate(),interval 67 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Eros FIE','B10407',1,'8380293',DATE_SUB(curdate(),interval 3 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Ac FIE','B10408',1,'9808327',DATE_SUB(curdate(),interval 54 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tortor Laoreet OÜ','B10409',1,'8166176',DATE_SUB(curdate(),interval 98 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Ornare AS','B10410',1,'4413695',DATE_SUB(curdate(),interval 4 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Est Nascetur OÜ','B10411',1,'2735236',DATE_SUB(curdate(),interval 6 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Quisque FIE','B10412',1,'7058674',DATE_SUB(curdate(),interval 60 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Varius Natoque AS','B10413',1,'4948806',DATE_SUB(curdate(),interval 28 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Turpis FIE','B10414',1,'3524545',DATE_SUB(curdate(),interval 54 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Adipiscing Nullam AS','B10415',1,'8548459',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eleifend Dolor OÜ','B10416',1,'3086927',DATE_SUB(curdate(),interval 38 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Ac FIE','B10417',1,'9919553',DATE_SUB(curdate(),interval 88 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Amet AS','B10418',1,'8339415',DATE_SUB(curdate(),interval 76 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Sagittis AS','B10419',1,'9034191',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Nulla OÜ','B10420',1,'5196715',DATE_SUB(curdate(),interval 47 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Non OÜ','B10421',1,'1574168',DATE_SUB(curdate(),interval 81 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Donec FIE','B10422',1,'7373090',DATE_SUB(curdate(),interval 41 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Auctor AS','B10423',1,'1585510',DATE_SUB(curdate(),interval 14 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Purus AS','B10424',1,'9960061',DATE_SUB(curdate(),interval 81 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien In AS','B10425',1,'2750382',DATE_SUB(curdate(),interval 51 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES (' Nec FIE','B10426',1,'4410155',DATE_SUB(curdate(),interval 16 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Convallis AS','B10427',1,'7112283',DATE_SUB(curdate(),interval 37 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vel Vehicula OÜ','B10428',1,'7749255',DATE_SUB(curdate(),interval 70 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fermentum Fermentum FIE','B10429',1,'1347786',DATE_SUB(curdate(),interval 1 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Dolor AS','B10430',1,'2958760',DATE_SUB(curdate(),interval 0 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Facilisis OÜ','B10431',1,'9962083',DATE_SUB(curdate(),interval 39 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Vehicula AS','B10432',1,'8586442',DATE_SUB(curdate(),interval 37 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Rhoncus FIE','B10433',1,'4351392',DATE_SUB(curdate(),interval 71 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Venenatis Eget FIE','B10434',1,'6271024',DATE_SUB(curdate(),interval 5 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Venenatis AS','B10435',1,'3274157',DATE_SUB(curdate(),interval 57 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Elit Et OÜ','B10436',1,'1241256',DATE_SUB(curdate(),interval 46 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Ullamcorper OÜ','B10437',1,'2850629',DATE_SUB(curdate(),interval 84 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nec FIE','B10438',1,'2200162',DATE_SUB(curdate(),interval 18 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Sagittis AS','B10439',1,'8910774',DATE_SUB(curdate(),interval 75 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Aliquam AS','B10440',1,'6510427',DATE_SUB(curdate(),interval 51 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Amet AS','B10441',1,'2117092',DATE_SUB(curdate(),interval 26 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Sem OÜ','B10442',1,'2740062',DATE_SUB(curdate(),interval 17 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sapien Nunc AS','B10443',1,'6733685',DATE_SUB(curdate(),interval 99 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Ac AS','B10444',1,'7082596',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Phasellus A AS','B10445',1,'7449964',DATE_SUB(curdate(),interval 76 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lectus FIE','B10446',1,'1039914',DATE_SUB(curdate(),interval 24 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Placerat Mauris AS','B10447',1,'3078509',DATE_SUB(curdate(),interval 24 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Hendrerit Leo OÜ','B10448',1,'1292437',DATE_SUB(curdate(),interval 3 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Sit FIE','B10449',1,'6171074',DATE_SUB(curdate(),interval 65 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Potenti Massa OÜ','B10450',1,'2066158',DATE_SUB(curdate(),interval 9 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Magna FIE','B10451',1,'4158389',DATE_SUB(curdate(),interval 34 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Mi FIE','B10452',1,'4712088',DATE_SUB(curdate(),interval 30 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In In OÜ','B10453',1,'5241205',DATE_SUB(curdate(),interval 84 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sodales Purus FIE','B10454',1,'1528934',DATE_SUB(curdate(),interval 2 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Euismod AS','B10455',1,'5765005',DATE_SUB(curdate(),interval 19 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Vitae OÜ','B10456',1,'1122200',DATE_SUB(curdate(),interval 44 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Nibh AS','B10457',1,'7207440',DATE_SUB(curdate(),interval 52 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Massa FIE','B10458',1,'4457901',DATE_SUB(curdate(),interval 84 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam In OÜ','B10459',1,'5862977',DATE_SUB(curdate(),interval 7 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Mattis AS','B10460',1,'9508213',DATE_SUB(curdate(),interval 26 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Erat Velit FIE','B10461',1,'2084873',DATE_SUB(curdate(),interval 19 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Posuere Vulputate OÜ','B10462',1,'7325105',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Arcu Magna FIE','B10463',1,'1250471',DATE_SUB(curdate(),interval 10 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ligula Massa OÜ','B10464',1,'3839216',DATE_SUB(curdate(),interval 83 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Quis OÜ','B10465',1,'8193768',DATE_SUB(curdate(),interval 98 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Augue AS','B10466',1,'6020161',DATE_SUB(curdate(),interval 1 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Dictum FIE','B10467',1,'4040031',DATE_SUB(curdate(),interval 77 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Convallis OÜ','B10468',1,'4410486',DATE_SUB(curdate(),interval 12 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tellus OÜ','B10469',1,'4255692',DATE_SUB(curdate(),interval 36 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Sed FIE','B10470',1,'2613525',DATE_SUB(curdate(),interval 17 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Dui OÜ','B10471',1,'1462780',DATE_SUB(curdate(),interval 34 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Massa OÜ','B10472',1,'7883749',DATE_SUB(curdate(),interval 10 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa 
 FIE','B10473',1,'1863492',DATE_SUB(curdate(),interval 55 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Arcu FIE','B10474',1,'1721633',DATE_SUB(curdate(),interval 34 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Natoque FIE','B10475',1,'6792022',DATE_SUB(curdate(),interval 83 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Blandit FIE','B10476',1,'8618248',DATE_SUB(curdate(),interval 47 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nibh Parturient AS','B10477',1,'5236089',DATE_SUB(curdate(),interval 53 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Pellentesque AS','B10478',1,'7907000',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Placerat AS','B10479',1,'9325389',DATE_SUB(curdate(),interval 28 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Massa AS','B10480',1,'6026062',DATE_SUB(curdate(),interval 52 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies In FIE','B10481',1,'3343054',DATE_SUB(curdate(),interval 30 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Convallis OÜ','B10482',1,'5370406',DATE_SUB(curdate(),interval 15 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Augue Ultrices OÜ','B10483',1,'1765889',DATE_SUB(curdate(),interval 82 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Sodales FIE','B10484',1,'2989397',DATE_SUB(curdate(),interval 21 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Fringilla OÜ','B10485',1,'7498529',DATE_SUB(curdate(),interval 32 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Donec FIE','B10486',1,'9383358',DATE_SUB(curdate(),interval 87 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Id OÜ','B10487',1,'3346707',DATE_SUB(curdate(),interval 78 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Commodo AS','B10488',1,'4796388',DATE_SUB(curdate(),interval 55 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A A FIE','B10489',1,'8647766',DATE_SUB(curdate(),interval 58 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem  AS','B10490',1,'6242157',DATE_SUB(curdate(),interval 22 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Sollicitudin OÜ','B10491',1,'6669047',DATE_SUB(curdate(),interval 100 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Rutrum Leo AS','B10492',1,'7306567',DATE_SUB(curdate(),interval 24 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Ac FIE','B10493',1,'7190217',DATE_SUB(curdate(),interval 24 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Felis Id AS','B10494',1,'6551575',DATE_SUB(curdate(),interval 94 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Leo OÜ','B10495',1,'7731347',DATE_SUB(curdate(),interval 70 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Sociis FIE','B10496',1,'1195372',DATE_SUB(curdate(),interval 4 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Tincidunt AS','B10497',1,'5757551',DATE_SUB(curdate(),interval 89 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Et AS','B10498',1,'6474809',DATE_SUB(curdate(),interval 17 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tristique Suscipit AS','B10499',1,'2867880',DATE_SUB(curdate(),interval 46 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Enim 
 FIE','B10500',1,'7279611',DATE_SUB(curdate(),interval 36 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:16 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Proin AS','B10501',1,'4021362',DATE_SUB(curdate(),interval 30 year));
23:43:16 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Tellus FIE','B10502',1,'6327364',DATE_SUB(curdate(),interval 36 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vulputate Volutpat OÜ','B10503',1,'2030877',DATE_SUB(curdate(),interval 3 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Urna Convallis OÜ','B10504',1,'7206951',DATE_SUB(curdate(),interval 3 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eros Blandit FIE','B10505',1,'8369586',DATE_SUB(curdate(),interval 34 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla 
 AS','B10506',1,'3148028',DATE_SUB(curdate(),interval 91 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Quisque OÜ','B10507',1,'6922471',DATE_SUB(curdate(),interval 48 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis Eleifend FIE','B10508',1,'5660459',DATE_SUB(curdate(),interval 15 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac Varius OÜ','B10509',1,'8138701',DATE_SUB(curdate(),interval 43 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ac At FIE','B10510',1,'2672436',DATE_SUB(curdate(),interval 98 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Volutpat Ultrices AS','B10511',1,'7214952',DATE_SUB(curdate(),interval 68 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Mauris FIE','B10512',1,'5855909',DATE_SUB(curdate(),interval 19 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suspendisse Purus OÜ','B10513',1,'3288822',DATE_SUB(curdate(),interval 65 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Consectetur AS','B10514',1,'6827791',DATE_SUB(curdate(),interval 53 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ornare Id FIE','B10515',1,'1094482',DATE_SUB(curdate(),interval 62 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Laoreet FIE','B10516',1,'2244034',DATE_SUB(curdate(),interval 89 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Rhoncus FIE','B10517',1,'9939407',DATE_SUB(curdate(),interval 72 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Tellus Tristique FIE','B10518',1,'3651297',DATE_SUB(curdate(),interval 99 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacinia Lacus FIE','B10519',1,'2855322',DATE_SUB(curdate(),interval 34 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Magna Quis OÜ','B10520',1,'8479073',DATE_SUB(curdate(),interval 68 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Praesent Placerat OÜ','B10521',1,'7639864',DATE_SUB(curdate(),interval 20 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Id Elit FIE','B10522',1,'1356826',DATE_SUB(curdate(),interval 16 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nunc Aliquam AS','B10523',1,'5620232',DATE_SUB(curdate(),interval 92 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Risus Aliquam OÜ','B10524',1,'6125013',DATE_SUB(curdate(),interval 21 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Nisi AS','B10525',1,'3884976',DATE_SUB(curdate(),interval 64 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('At A FIE','B10526',1,'1052177',DATE_SUB(curdate(),interval 78 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit Nulla FIE','B10527',1,'8735951',DATE_SUB(curdate(),interval 63 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Pellentesque Purus OÜ','B10528',1,'1510304',DATE_SUB(curdate(),interval 3 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Neque Nulla FIE','B10529',1,'9946481',DATE_SUB(curdate(),interval 35 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Dictum AS','B10530',1,'3084992',DATE_SUB(curdate(),interval 46 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquam Ornare FIE','B10531',1,'8147560',DATE_SUB(curdate(),interval 90 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Condimentum Sodales FIE','B10532',1,'2869517',DATE_SUB(curdate(),interval 45 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Eleifend OÜ','B10533',1,'6232602',DATE_SUB(curdate(),interval 42 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Lacinia OÜ','B10534',1,'6638645',DATE_SUB(curdate(),interval 80 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Massa Sed OÜ','B10535',1,'4540352',DATE_SUB(curdate(),interval 43 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Maecenas Fringilla AS','B10536',1,'3254866',DATE_SUB(curdate(),interval 50 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Eget Dignissim AS','B10537',1,'7144142',DATE_SUB(curdate(),interval 53 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Interdum FIE','B10538',1,'8312665',DATE_SUB(curdate(),interval 43 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisi Praesent FIE','B10539',1,'7914014',DATE_SUB(curdate(),interval 1 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Odio Tortor FIE','B10540',1,'8310183',DATE_SUB(curdate(),interval 37 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Laoreet At FIE','B10541',1,'2699632',DATE_SUB(curdate(),interval 65 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui Vitae FIE','B10542',1,'6054594',DATE_SUB(curdate(),interval 42 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ante Nec AS','B10543',1,'5292814',DATE_SUB(curdate(),interval 3 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Eget AS','B10544',1,'7000585',DATE_SUB(curdate(),interval 26 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lacus Eu FIE','B10545',1,'6950680',DATE_SUB(curdate(),interval 86 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Interdum OÜ','B10546',1,'5113631',DATE_SUB(curdate(),interval 88 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Imperdiet Amet AS','B10547',1,'8007913',DATE_SUB(curdate(),interval 20 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Suscipit Adipiscing OÜ','B10548',1,'7142761',DATE_SUB(curdate(),interval 58 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Fringilla Erat FIE','B10549',1,'9537418',DATE_SUB(curdate(),interval 56 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mauris Lorem AS','B10550',1,'2856910',DATE_SUB(curdate(),interval 30 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sollicitudin Vehicula OÜ','B10551',1,'9649227',DATE_SUB(curdate(),interval 54 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Proin Velit OÜ','B10552',1,'8750275',DATE_SUB(curdate(),interval 12 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mus Nulla AS','B10553',1,'6518047',DATE_SUB(curdate(),interval 61 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Praesent OÜ','B10554',1,'7335772',DATE_SUB(curdate(),interval 6 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Mattis Urna AS','B10555',1,'2187818',DATE_SUB(curdate(),interval 44 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Lacus AS','B10556',1,'7580895',DATE_SUB(curdate(),interval 29 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Malesuada Lorem AS','B10557',1,'8077965',DATE_SUB(curdate(),interval 97 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Morbi Venenatis OÜ','B10558',1,'3961719',DATE_SUB(curdate(),interval 91 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('
 Quam FIE','B10559',1,'8905485',DATE_SUB(curdate(),interval 43 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Blandit 
 FIE','B10560',1,'9815384',DATE_SUB(curdate(),interval 92 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vehicula Tellus OÜ','B10561',1,'1350748',DATE_SUB(curdate(),interval 32 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultrices Quis OÜ','B10562',1,'9418996',DATE_SUB(curdate(),interval 49 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vivamus Vitae OÜ','B10563',1,'8908547',DATE_SUB(curdate(),interval 11 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cum In AS','B10564',1,'1733952',DATE_SUB(curdate(),interval 93 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Sed Tempus FIE','B10565',1,'8198842',DATE_SUB(curdate(),interval 71 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Auctor FIE','B10566',1,'9847727',DATE_SUB(curdate(),interval 13 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nulla Lacinia AS','B10567',1,'3195102',DATE_SUB(curdate(),interval 91 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Aliquet Nam OÜ','B10568',1,'1358996',DATE_SUB(curdate(),interval 3 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lobortis Tortor OÜ','B10569',1,'6818604',DATE_SUB(curdate(),interval 62 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Et Imperdiet AS','B10570',1,'6593919',DATE_SUB(curdate(),interval 18 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quisque Ut AS','B10571',1,'9020504',DATE_SUB(curdate(),interval 48 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vestibulum Sed OÜ','B10572',1,'6715422',DATE_SUB(curdate(),interval 4 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Porttitor Magnis FIE','B10573',1,'1719638',DATE_SUB(curdate(),interval 71 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quam Lorem FIE','B10574',1,'5305692',DATE_SUB(curdate(),interval 76 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Aliquet OÜ','B10575',1,'2786497',DATE_SUB(curdate(),interval 28 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nisl Nulla OÜ','B10576',1,'4008030',DATE_SUB(curdate(),interval 28 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Turpis Ridiculus FIE','B10577',1,'6182108',DATE_SUB(curdate(),interval 37 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Faucibus Blandit OÜ','B10578',1,'1758211',DATE_SUB(curdate(),interval 93 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Montes Commodo OÜ','B10579',1,'4491942',DATE_SUB(curdate(),interval 93 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Quis A OÜ','B10580',1,'9272150',DATE_SUB(curdate(),interval 68 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('A Diam AS','B10581',1,'9008295',DATE_SUB(curdate(),interval 96 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cras Ipsum OÜ','B10582',1,'9762651',DATE_SUB(curdate(),interval 34 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Felis FIE','B10583',1,'8924508',DATE_SUB(curdate(),interval 11 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Facilisis Ipsum OÜ','B10584',1,'6669008',DATE_SUB(curdate(),interval 41 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ultricies Quis AS','B10585',1,'7586075',DATE_SUB(curdate(),interval 50 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Ultricies FIE','B10586',1,'8501576',DATE_SUB(curdate(),interval 76 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Vitae Vestibulum OÜ','B10587',1,'7238074',DATE_SUB(curdate(),interval 11 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Ridiculus At AS','B10588',1,'1957277',DATE_SUB(curdate(),interval 26 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Natoque Adipiscing FIE','B10589',1,'3544918',DATE_SUB(curdate(),interval 90 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Non Montes AS','B10590',1,'3867352',DATE_SUB(curdate(),interval 10 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dictum A AS','B10591',1,'9186257',DATE_SUB(curdate(),interval 38 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Lorem Tristique AS','B10592',1,'4700414',DATE_SUB(curdate(),interval 94 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('In Fringilla AS','B10593',1,'5577471',DATE_SUB(curdate(),interval 48 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Leo Purus FIE','B10594',1,'4644156',DATE_SUB(curdate(),interval 9 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Dui 
 AS','B10595',1,'8437990',DATE_SUB(curdate(),interval 15 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Amet Dignissim OÜ','B10596',1,'3185240',DATE_SUB(curdate(),interval 5 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Cursus Praesent FIE','B10597',1,'9561512',DATE_SUB(curdate(),interval 80 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Diam Nulla FIE','B10598',1,'3900226',DATE_SUB(curdate(),interval 7 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Donec Eget FIE','B10599',1,'9983399',DATE_SUB(curdate(),interval 82 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [SQL]->Exec:insert into TaxPayerTable (Name, Code, Type, Income, DateOfCreation) VALUES ('Nec Mattis FIE','B10600',1,'2072556',DATE_SUB(curdate(),interval 69 year));
23:43:17 (engine) [SQL]->Exec [Done]:1
23:43:17 (engine) [RESPONSE (Admin.CreateWorld)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  NULL
  ["total"]=>
  int(1)
}

23:43:19 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(48) "{\"action\":\"Admin.CreateTestData\",\"data\":1}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:43:19 (engine) [JSON (Admin.CreateTestData)]->int(1)

23:43:19 (engine) [SQL]->Creating test data
23:43:19 (engine) [SQL]->Connecting to database:
23:43:19 (engine) [SQL]->Connection OK!
23:43:19 (engine) test 
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1921','1921-04-26','1921-04-21','1921-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1922','1922-04-26','1922-04-21','1922-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1923','1923-04-26','1923-04-21','1923-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1924','1924-04-26','1924-04-21','1924-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1925','1925-04-26','1925-04-21','1925-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1926','1926-04-26','1926-04-21','1926-02-21','3');
23:43:19 (engine) [SQL]->Exec [Done]:1
23:43:19 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1927','1927-04-26','1927-04-21','1927-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1928','1928-04-26','1928-04-21','1928-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1929','1929-04-26','1929-04-21','1929-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1930','1930-04-26','1930-04-21','1930-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1931','1931-04-26','1931-04-21','1931-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1932','1932-04-26','1932-04-21','1932-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1933','1933-04-26','1933-04-21','1933-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1934','1934-04-26','1934-04-21','1934-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1935','1935-04-26','1935-04-21','1935-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1936','1936-04-26','1936-04-21','1936-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1937','1937-04-26','1937-04-21','1937-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1938','1938-04-26','1938-04-21','1938-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1939','1939-04-26','1939-04-21','1939-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1940','1940-04-26','1940-04-21','1940-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1941','1941-04-26','1941-04-21','1941-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1942','1942-04-26','1942-04-21','1942-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1943','1943-04-26','1943-04-21','1943-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1944','1944-04-26','1944-04-21','1944-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1945','1945-04-26','1945-04-21','1945-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1946','1946-04-26','1946-04-21','1946-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1947','1947-04-26','1947-04-21','1947-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1948','1948-04-26','1948-04-21','1948-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1949','1949-04-26','1949-04-21','1949-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1950','1950-04-26','1950-04-21','1950-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1951','1951-04-26','1951-04-21','1951-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1952','1952-04-26','1952-04-21','1952-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1953','1953-04-26','1953-04-21','1953-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1954','1954-04-26','1954-04-21','1954-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1955','1955-04-26','1955-04-21','1955-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1956','1956-04-26','1956-04-21','1956-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1957','1957-04-26','1957-04-21','1957-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1958','1958-04-26','1958-04-21','1958-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1959','1959-04-26','1959-04-21','1959-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1960','1960-04-26','1960-04-21','1960-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1961','1961-04-26','1961-04-21','1961-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1962','1962-04-26','1962-04-21','1962-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1963','1963-04-26','1963-04-21','1963-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1964','1964-04-26','1964-04-21','1964-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1965','1965-04-26','1965-04-21','1965-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1966','1966-04-26','1966-04-21','1966-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1967','1967-04-26','1967-04-21','1967-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1968','1968-04-26','1968-04-21','1968-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1969','1969-04-26','1969-04-21','1969-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1970','1970-04-26','1970-04-21','1970-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1971','1971-04-26','1971-04-21','1971-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1972','1972-04-26','1972-04-21','1972-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1973','1973-04-26','1973-04-21','1973-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1974','1974-04-26','1974-04-21','1974-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1975','1975-04-26','1975-04-21','1975-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1976','1976-04-26','1976-04-21','1976-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1977','1977-04-26','1977-04-21','1977-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1978','1978-04-26','1978-04-21','1978-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1979','1979-04-26','1979-04-21','1979-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1980','1980-04-26','1980-04-21','1980-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1981','1981-04-26','1981-04-21','1981-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1982','1982-04-26','1982-04-21','1982-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1983','1983-04-26','1983-04-21','1983-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1984','1984-04-26','1984-04-21','1984-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1985','1985-04-26','1985-04-21','1985-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1986','1986-04-26','1986-04-21','1986-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1987','1987-04-26','1987-04-21','1987-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1988','1988-04-26','1988-04-21','1988-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1989','1989-04-26','1989-04-21','1989-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1990','1990-04-26','1990-04-21','1990-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1991','1991-04-26','1991-04-21','1991-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1992','1992-04-26','1992-04-21','1992-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1993','1993-04-26','1993-04-21','1993-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1994','1994-04-26','1994-04-21','1994-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1995','1995-04-26','1995-04-21','1995-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1996','1996-04-26','1996-04-21','1996-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1997','1997-04-26','1997-04-21','1997-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1998','1998-04-26','1998-04-21','1998-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('1999','1999-04-26','1999-04-21','1999-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2000','2000-04-26','2000-04-21','2000-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2001','2001-04-26','2001-04-21','2001-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2002','2002-04-26','2002-04-21','2002-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2003','2003-04-26','2003-04-21','2003-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2004','2004-04-26','2004-04-21','2004-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2005','2005-04-26','2005-04-21','2005-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2006','2006-04-26','2006-04-21','2006-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2007','2007-04-26','2007-04-21','2007-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2008','2008-04-26','2008-04-21','2008-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2009','2009-04-26','2009-04-21','2009-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2010','2010-04-26','2010-04-21','2010-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2011','2011-04-26','2011-04-21','2011-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into TaxYearTable (Year, SubmitDate, StartDate, EndDate, State) VALUES ('2012','2012-04-26','2012-04-21','2012-02-21','3');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:UPDATE TaxYearTable SET State = 1 WHERE `TaxYearTable`.`ID` = 92;
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:UPDATE TaxPayerTable SET Income = '2605' WHERE `TaxPayerTable`.`ID` =12;
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,1,'2011-01-21');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,2,'2011-01-21');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,3,'2011-01-21');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (91,4,'2011-01-21');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:insert into InstitutionBudgetTable (TaxYearID, InstitutionID, ConfirmedDate) VALUES (92,4,'2012-01-21');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES  (NULL, 'Free Stuff 1', '800000', '15000', '1', NULL, '5', '5', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Stuff 2', '400000', '15000', '1', NULL, '15', '15', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Stuff 3', '600000', '15000', '1', NULL, '2', '3', '1');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 1', '1400000', '15000', '2', NULL, '5', '5', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 2', '1200000', '15000', '2', NULL, '15', '15', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 3', '700000', '15000', '2', NULL, '2', '3', '1');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Moonwalk 1', '800000', '15000', '5', NULL, '5', '5', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Free Everything 2', '500000', '15000', '5', '5', '15', '15', '0');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO TaxProgramTable (`ID`, `Name`, `PredictedBudget`, `PredictedUsers`, `InstitutionBudgetID`, `ExtendsProgramID`, `MinimumYears`, `BenefitsExpireInYears`, `BenefitsApplyTo`) VALUES (NULL, 'Nothing', '10000', '1500000', '5', NULL, '1', '1', '1');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '1', '10', '120', '0', '2012-05-03');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '2', '10', '231', '0', '2012-05-03');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:20 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '3', '10', '89', '0', '2012-05-03');
23:43:20 (engine) [SQL]->Exec [Done]:1
23:43:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '4', '10', '110', '0', '2012-06-03');
23:43:21 (engine) [SQL]->Exec [Done]:1
23:43:21 (engine) [SQL]->Exec:INSERT INTO `TaxPayerProgramTable` (`ID`, `TaxPayerID`, `TaxProgramID`, `YearsRequired`, `CalculatedTaxAmount`, `BenefitsAccumulated`, `ConfirmedDate`) VALUES (NULL, '12', '5', '10', '78', '0', '2012-02-02');
23:43:21 (engine) [SQL]->Exec [Done]:1
23:43:21 (engine) [RESPONSE (Admin.CreateTestData)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  int(1)
  ["total"]=>
  int(1)
}

23:43:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:43:25 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:43:25 (engine) [SQL]->Connecting to database:
23:43:25 (engine) [SQL]->Connection OK!
23:43:25 (engine) test 
23:43:25 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:43:25 (engine) [SQL]->Exec [Done]:Resource id #16
23:43:25 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:43:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:43:25 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:43:25 (engine) [SQL]->Connecting to database:
23:43:25 (engine) [SQL]->Connection OK!
23:43:25 (engine) test 
23:43:25 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:43:25 (engine) [SQL]->Exec [Done]:Resource id #16
23:43:25 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:43:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:43:25 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:43:25 (engine) [SQL]->Connecting to database:
23:43:25 (engine) [SQL]->Connection OK!
23:43:25 (engine) test 
23:43:25 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:43:25 (engine) [SQL]->Exec [Done]:Resource id #16
23:43:25 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:43:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:43:28 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:43:28 (engine) [SQL]->Connecting to database:
23:43:28 (engine) [SQL]->Connection OK!
23:43:28 (engine) test 
23:43:28 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:43:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:43:28 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:43:28 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:43:28 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:43:28 (engine) [SQL]->Connecting to database:
23:43:28 (engine) [SQL]->Connection OK!
23:43:28 (engine) test 
23:43:28 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 91

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
23:43:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:43:28 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(3) "120"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(3) "231"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["CalculatedTaxAmount"]=>
      string(2) "89"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(3) "110"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(2) "78"
    }
  }
  ["total"]=>
  int(1)
}

23:44:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:44:39 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:44:39 (engine) [SQL]->Connecting to database:
23:44:39 (engine) [SQL]->Connection OK!
23:44:39 (engine) test 
23:44:39 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:44:39 (engine) [SQL]->Exec [Done]:Resource id #16
23:44:39 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:44:39 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:44:39 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:44:39 (engine) [SQL]->Connecting to database:
23:44:39 (engine) [SQL]->Connection OK!
23:44:39 (engine) test 
23:44:39 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:44:39 (engine) [SQL]->Exec [Done]:Resource id #16
23:44:39 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:44:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:44:48 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:44:48 (engine) [SQL]->Connecting to database:
23:44:48 (engine) [SQL]->Connection OK!
23:44:48 (engine) test 
23:44:48 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:44:48 (engine) [SQL]->Exec [Done]:Resource id #16
23:44:48 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:44:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:44:49 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:44:49 (engine) [SQL]->Connecting to database:
23:44:49 (engine) [SQL]->Connection OK!
23:44:49 (engine) test 
23:44:49 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:44:49 (engine) [SQL]->Exec [Done]:Resource id #16
23:44:49 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:45:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:45:04 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:45:04 (engine) [SQL]->Connecting to database:
23:45:04 (engine) [SQL]->Connection OK!
23:45:04 (engine) test 
23:45:04 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:45:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:04 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:45:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:45:04 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:45:04 (engine) [SQL]->Connecting to database:
23:45:04 (engine) [SQL]->Connection OK!
23:45:04 (engine) test 
23:45:04 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:45:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:04 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:45:24 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:45:24 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:45:24 (engine) [SQL]->Connecting to database:
23:45:24 (engine) [SQL]->Connection OK!
23:45:24 (engine) test 
23:45:24 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:45:24 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:24 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:45:25 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:45:25 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:45:25 (engine) [SQL]->Connecting to database:
23:45:25 (engine) [SQL]->Connection OK!
23:45:25 (engine) test 
23:45:25 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:45:25 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:25 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:45:42 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(110) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:45:42 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(0) ""
}

23:45:42 (engine) [SQL]->Connecting to database:
23:45:42 (engine) [SQL]->Connection OK!
23:45:42 (engine) test 
23:45:42 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, ParentID, 
			IF( TaxPayer.Type = 0,1,2) AS Type
			FROM `TaxPayerTable` TaxPayer WHERE Name LIKE '%%'
			UNION ALL
			SELECT ID, Name, Code, NULL as ParentID, 3 AS Type
			FROM `InstitutionTable` Institution WHERE Name LIKE '%%'
		) Combined ORDER BY Name LIMIT 0, 10
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1346
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #19
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 751
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #22
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1255
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #25
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 24
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #28
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1821
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #31
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 502
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #34
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 748
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #37
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1379
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #40
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 2009
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #43
23:45:42 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1457
23:45:42 (engine) [SQL]->Exec [Done]:Resource id #46
23:45:42 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(4) "1346"
      ["Name"]=>
      string(10) "
 Bibendum"
      ["Code"]=>
      string(6) "T11347"
      ["ParentID"]=>
      string(4) "1046"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(3) "751"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T10751"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(4) "1255"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T11256"
      ["ParentID"]=>
      string(3) "597"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "24"
      ["Name"]=>
      string(4) "
 Et"
      ["Code"]=>
      string(6) "T10024"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(4) "1821"
      ["Name"]=>
      string(10) "
 Lacus AS"
      ["Code"]=>
      string(6) "B10371"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(3) "502"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10502"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1219"
          ["Name"]=>
          string(19) "Vulputate Ultricies"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(3) "748"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10748"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(4) "1379"
      ["Name"]=>
      string(5) "
 Mus"
      ["Code"]=>
      string(6) "T11380"
      ["ParentID"]=>
      string(4) "1079"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(4) "2009"
      ["Name"]=>
      string(10) "
 Quam FIE"
      ["Code"]=>
      string(6) "B10559"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(4) "1457"
      ["Name"]=>
      string(13) "
 Rhoncus OÜ"
      ["Code"]=>
      string(6) "B10007"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
  }
  ["total"]=>
  int(1)
}

23:45:49 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(111) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"1\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:45:49 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(1) "1"
}

23:45:49 (engine) [SQL]->Connecting to database:
23:45:49 (engine) [SQL]->Connection OK!
23:45:49 (engine) test 
23:45:49 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, ParentID, 
			IF( TaxPayer.Type = 0,1,2) AS Type
			FROM `TaxPayerTable` TaxPayer WHERE Name LIKE '%%' AND Type = 0
		) Combined ORDER BY Name LIMIT 0, 10
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1346
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #19
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 751
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #22
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1255
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #25
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 24
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #28
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 502
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #31
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 748
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #34
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1379
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #37
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 860
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #40
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1334
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #43
23:45:49 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 551
23:45:49 (engine) [SQL]->Exec [Done]:Resource id #46
23:45:49 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(4) "1346"
      ["Name"]=>
      string(10) "
 Bibendum"
      ["Code"]=>
      string(6) "T11347"
      ["ParentID"]=>
      string(4) "1046"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(3) "751"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T10751"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(4) "1255"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T11256"
      ["ParentID"]=>
      string(3) "597"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "24"
      ["Name"]=>
      string(4) "
 Et"
      ["Code"]=>
      string(6) "T10024"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(3) "502"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10502"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1219"
          ["Name"]=>
          string(19) "Vulputate Ultricies"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(3) "748"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10748"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(4) "1379"
      ["Name"]=>
      string(5) "
 Mus"
      ["Code"]=>
      string(6) "T11380"
      ["ParentID"]=>
      string(4) "1079"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(3) "860"
      ["Name"]=>
      string(8) "
 Rutrum"
      ["Code"]=>
      string(6) "T10860"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(4) "1334"
      ["Name"]=>
      string(10) "
 Sagittis"
      ["Code"]=>
      string(6) "T11335"
      ["ParentID"]=>
      string(4) "1034"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(3) "551"
      ["Name"]=>
      string(8) "
 Tempus"
      ["Code"]=>
      string(6) "T10551"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1239"
          ["Name"]=>
          string(9) "Erat Odio"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
  }
  ["total"]=>
  int(1)
}

23:45:52 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(111) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"3\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:45:52 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(1) "3"
}

23:45:52 (engine) [SQL]->Connecting to database:
23:45:52 (engine) [SQL]->Connection OK!
23:45:52 (engine) test 
23:45:52 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, NULL as ParentID, 3 AS Type
			FROM `InstitutionTable` Institution WHERE Name LIKE '%%'
		) Combined ORDER BY Name LIMIT 0, 10
23:45:52 (engine) [SQL]->Exec [Done]:Resource id #16
23:45:52 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1
23:45:52 (engine) [SQL]->Exec [Done]:Resource id #19
23:45:52 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 3
23:45:52 (engine) [SQL]->Exec [Done]:Resource id #22
23:45:52 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 4
23:45:52 (engine) [SQL]->Exec [Done]:Resource id #25
23:45:52 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 2
23:45:52 (engine) [SQL]->Exec [Done]:Resource id #28
23:45:52 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(4) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Name"]=>
      string(21) "Ministry of education"
      ["Code"]=>
      string(6) "I00001"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "3"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1001"
          ["Name"]=>
          string(17) "Vehicula Interdum"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Name"]=>
      string(23) "Ministry of the defence"
      ["Code"]=>
      string(6) "I00003"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "3"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1003"
          ["Name"]=>
          string(13) "Magna Laoreet"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Name"]=>
      string(24) "Ministry of the interior"
      ["Code"]=>
      string(6) "I00004"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "3"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1004"
          ["Name"]=>
          string(6) "Leo Id"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Name"]=>
      string(15) "Social Ministry"
      ["Code"]=>
      string(6) "I00002"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "3"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1002"
          ["Name"]=>
          string(6) "Et Sed"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
  }
  ["total"]=>
  int(1)
}

23:46:06 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(111) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"2\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:06 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(1) "2"
}

23:46:06 (engine) [SQL]->Connecting to database:
23:46:06 (engine) [SQL]->Connection OK!
23:46:06 (engine) test 
23:46:06 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, ParentID, 
			IF( TaxPayer.Type = 0,1,2) AS Type
			FROM `TaxPayerTable` TaxPayer WHERE Name LIKE '%%' AND Type = 1
		) Combined ORDER BY Name LIMIT 0, 10
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1821
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #19
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 2009
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #22
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1457
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #25
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1815
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #28
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1714
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #31
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1876
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #34
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1844
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #37
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1508
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #40
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1939
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #43
23:46:06 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1637
23:46:06 (engine) [SQL]->Exec [Done]:Resource id #46
23:46:06 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(4) "1821"
      ["Name"]=>
      string(10) "
 Lacus AS"
      ["Code"]=>
      string(6) "B10371"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(4) "2009"
      ["Name"]=>
      string(10) "
 Quam FIE"
      ["Code"]=>
      string(6) "B10559"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(4) "1457"
      ["Name"]=>
      string(13) "
 Rhoncus OÜ"
      ["Code"]=>
      string(6) "B10007"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(4) "1815"
      ["Name"]=>
      string(14) "
 Ultrices OÜ"
      ["Code"]=>
      string(6) "B10365"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(4) "1714"
      ["Name"]=>
      string(12) " Interdum AS"
      ["Code"]=>
      string(6) "B10264"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(4) "1876"
      ["Name"]=>
      string(8) " Nec FIE"
      ["Code"]=>
      string(6) "B10426"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(4) "1844"
      ["Name"]=>
      string(14) " Vulputate OÜ"
      ["Code"]=>
      string(6) "B10394"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(4) "1508"
      ["Name"]=>
      string(7) "A A FIE"
      ["Code"]=>
      string(6) "B10058"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(4) "1939"
      ["Name"]=>
      string(7) "A A FIE"
      ["Code"]=>
      string(6) "B10489"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(4) "1637"
      ["Name"]=>
      string(10) "A Amet OÜ"
      ["Code"]=>
      string(6) "B10187"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
  }
  ["total"]=>
  int(1)
}

23:46:10 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(111) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"1\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:10 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(1) "1"
}

23:46:10 (engine) [SQL]->Connecting to database:
23:46:10 (engine) [SQL]->Connection OK!
23:46:10 (engine) test 
23:46:10 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, ParentID, 
			IF( TaxPayer.Type = 0,1,2) AS Type
			FROM `TaxPayerTable` TaxPayer WHERE Name LIKE '%%' AND Type = 0
		) Combined ORDER BY Name LIMIT 0, 10
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1346
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #19
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 751
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #22
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1255
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #25
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 24
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #28
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 502
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #31
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 748
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #34
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1379
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #37
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 860
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #40
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1334
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #43
23:46:10 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 551
23:46:10 (engine) [SQL]->Exec [Done]:Resource id #46
23:46:10 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(4) "1346"
      ["Name"]=>
      string(10) "
 Bibendum"
      ["Code"]=>
      string(6) "T11347"
      ["ParentID"]=>
      string(4) "1046"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(3) "751"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T10751"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(4) "1255"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T11256"
      ["ParentID"]=>
      string(3) "597"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "24"
      ["Name"]=>
      string(4) "
 Et"
      ["Code"]=>
      string(6) "T10024"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(3) "502"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10502"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1219"
          ["Name"]=>
          string(19) "Vulputate Ultricies"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(3) "748"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10748"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(4) "1379"
      ["Name"]=>
      string(5) "
 Mus"
      ["Code"]=>
      string(6) "T11380"
      ["ParentID"]=>
      string(4) "1079"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(3) "860"
      ["Name"]=>
      string(8) "
 Rutrum"
      ["Code"]=>
      string(6) "T10860"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(4) "1334"
      ["Name"]=>
      string(10) "
 Sagittis"
      ["Code"]=>
      string(6) "T11335"
      ["ParentID"]=>
      string(4) "1034"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(3) "551"
      ["Name"]=>
      string(8) "
 Tempus"
      ["Code"]=>
      string(6) "T10551"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1239"
          ["Name"]=>
          string(9) "Erat Odio"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
  }
  ["total"]=>
  int(1)
}

23:46:20 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(111) "{\"action\":\"Admin.SearchGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":0,\"Name\":\"\",\"Type\":\"0\"}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:20 (engine) [JSON (Admin.SearchGrid)]->array(4) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(0)
  ["Name"]=>
  string(0) ""
  ["Type"]=>
  string(1) "0"
}

23:46:20 (engine) [SQL]->Connecting to database:
23:46:20 (engine) [SQL]->Connection OK!
23:46:20 (engine) test 
23:46:20 (engine) [SQL]->Exec:SELECT *
		FROM (
			SELECT ID, Name, Code, ParentID, 
			IF( TaxPayer.Type = 0,1,2) AS Type
			FROM `TaxPayerTable` TaxPayer WHERE Name LIKE '%%'
			UNION ALL
			SELECT ID, Name, Code, NULL as ParentID, 3 AS Type
			FROM `InstitutionTable` Institution WHERE Name LIKE '%%'
		) Combined ORDER BY Name LIMIT 0, 10
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1346
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #19
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 751
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #22
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1255
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #25
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 24
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #28
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1821
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #31
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 502
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #34
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 748
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #37
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1379
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #40
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 2009
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #43
23:46:20 (engine) [SQL]->Exec:SELECT ID, Name, 
									Type FROM `TaxPayerTable` TaxPayer
									WHERE ParentID = 1457
23:46:20 (engine) [SQL]->Exec [Done]:Resource id #46
23:46:20 (engine) [RESPONSE (Admin.SearchGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(4) "1346"
      ["Name"]=>
      string(10) "
 Bibendum"
      ["Code"]=>
      string(6) "T11347"
      ["ParentID"]=>
      string(4) "1046"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(3) "751"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T10751"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(4) "1255"
      ["Name"]=>
      string(5) "
 Dui"
      ["Code"]=>
      string(6) "T11256"
      ["ParentID"]=>
      string(3) "597"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "24"
      ["Name"]=>
      string(4) "
 Et"
      ["Code"]=>
      string(6) "T10024"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(4) "1821"
      ["Name"]=>
      string(10) "
 Lacus AS"
      ["Code"]=>
      string(6) "B10371"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(3) "502"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10502"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(1) {
        [0]=>
        array(3) {
          ["ID"]=>
          string(4) "1219"
          ["Name"]=>
          string(19) "Vulputate Ultricies"
          ["Type"]=>
          string(1) "0"
        }
      }
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(3) "748"
      ["Name"]=>
      string(7) "
 Massa"
      ["Code"]=>
      string(6) "T10748"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(4) "1379"
      ["Name"]=>
      string(5) "
 Mus"
      ["Code"]=>
      string(6) "T11380"
      ["ParentID"]=>
      string(4) "1079"
      ["Type"]=>
      string(1) "1"
      ["Children"]=>
      array(0) {
      }
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(4) "2009"
      ["Name"]=>
      string(10) "
 Quam FIE"
      ["Code"]=>
      string(6) "B10559"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(4) "1457"
      ["Name"]=>
      string(13) "
 Rhoncus OÜ"
      ["Code"]=>
      string(6) "B10007"
      ["ParentID"]=>
      NULL
      ["Type"]=>
      string(1) "2"
      ["Children"]=>
      array(0) {
      }
    }
  }
  ["total"]=>
  int(1)
}

23:46:26 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":10}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:26 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(10)
}

23:46:26 (engine) [SQL]->Connecting to database:
23:46:26 (engine) [SQL]->Connection OK!
23:46:26 (engine) test 
23:46:26 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 10 , 10
23:46:26 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:26 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:26 (engine) [SQL]->Exec (count) [Done]:
23:46:26 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "11"
      ["Year"]=>
      string(4) "1931"
      ["SubmitDate"]=>
      string(10) "1931-04-26"
      ["StartDate"]=>
      string(10) "1931-04-21"
      ["EndDate"]=>
      string(10) "1931-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "12"
      ["Year"]=>
      string(4) "1932"
      ["SubmitDate"]=>
      string(10) "1932-04-26"
      ["StartDate"]=>
      string(10) "1932-04-21"
      ["EndDate"]=>
      string(10) "1932-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "13"
      ["Year"]=>
      string(4) "1933"
      ["SubmitDate"]=>
      string(10) "1933-04-26"
      ["StartDate"]=>
      string(10) "1933-04-21"
      ["EndDate"]=>
      string(10) "1933-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "14"
      ["Year"]=>
      string(4) "1934"
      ["SubmitDate"]=>
      string(10) "1934-04-26"
      ["StartDate"]=>
      string(10) "1934-04-21"
      ["EndDate"]=>
      string(10) "1934-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "15"
      ["Year"]=>
      string(4) "1935"
      ["SubmitDate"]=>
      string(10) "1935-04-26"
      ["StartDate"]=>
      string(10) "1935-04-21"
      ["EndDate"]=>
      string(10) "1935-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "16"
      ["Year"]=>
      string(4) "1936"
      ["SubmitDate"]=>
      string(10) "1936-04-26"
      ["StartDate"]=>
      string(10) "1936-04-21"
      ["EndDate"]=>
      string(10) "1936-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "17"
      ["Year"]=>
      string(4) "1937"
      ["SubmitDate"]=>
      string(10) "1937-04-26"
      ["StartDate"]=>
      string(10) "1937-04-21"
      ["EndDate"]=>
      string(10) "1937-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "18"
      ["Year"]=>
      string(4) "1938"
      ["SubmitDate"]=>
      string(10) "1938-04-26"
      ["StartDate"]=>
      string(10) "1938-04-21"
      ["EndDate"]=>
      string(10) "1938-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "19"
      ["Year"]=>
      string(4) "1939"
      ["SubmitDate"]=>
      string(10) "1939-04-26"
      ["StartDate"]=>
      string(10) "1939-04-21"
      ["EndDate"]=>
      string(10) "1939-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "20"
      ["Year"]=>
      string(4) "1940"
      ["SubmitDate"]=>
      string(10) "1940-04-26"
      ["StartDate"]=>
      string(10) "1940-04-21"
      ["EndDate"]=>
      string(10) "1940-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:26 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":20}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:26 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(20)
}

23:46:26 (engine) [SQL]->Connecting to database:
23:46:26 (engine) [SQL]->Connection OK!
23:46:26 (engine) test 
23:46:26 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 20 , 10
23:46:26 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:26 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:26 (engine) [SQL]->Exec (count) [Done]:
23:46:26 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "21"
      ["Year"]=>
      string(4) "1941"
      ["SubmitDate"]=>
      string(10) "1941-04-26"
      ["StartDate"]=>
      string(10) "1941-04-21"
      ["EndDate"]=>
      string(10) "1941-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "22"
      ["Year"]=>
      string(4) "1942"
      ["SubmitDate"]=>
      string(10) "1942-04-26"
      ["StartDate"]=>
      string(10) "1942-04-21"
      ["EndDate"]=>
      string(10) "1942-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "23"
      ["Year"]=>
      string(4) "1943"
      ["SubmitDate"]=>
      string(10) "1943-04-26"
      ["StartDate"]=>
      string(10) "1943-04-21"
      ["EndDate"]=>
      string(10) "1943-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "24"
      ["Year"]=>
      string(4) "1944"
      ["SubmitDate"]=>
      string(10) "1944-04-26"
      ["StartDate"]=>
      string(10) "1944-04-21"
      ["EndDate"]=>
      string(10) "1944-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "25"
      ["Year"]=>
      string(4) "1945"
      ["SubmitDate"]=>
      string(10) "1945-04-26"
      ["StartDate"]=>
      string(10) "1945-04-21"
      ["EndDate"]=>
      string(10) "1945-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "26"
      ["Year"]=>
      string(4) "1946"
      ["SubmitDate"]=>
      string(10) "1946-04-26"
      ["StartDate"]=>
      string(10) "1946-04-21"
      ["EndDate"]=>
      string(10) "1946-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "27"
      ["Year"]=>
      string(4) "1947"
      ["SubmitDate"]=>
      string(10) "1947-04-26"
      ["StartDate"]=>
      string(10) "1947-04-21"
      ["EndDate"]=>
      string(10) "1947-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "28"
      ["Year"]=>
      string(4) "1948"
      ["SubmitDate"]=>
      string(10) "1948-04-26"
      ["StartDate"]=>
      string(10) "1948-04-21"
      ["EndDate"]=>
      string(10) "1948-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "29"
      ["Year"]=>
      string(4) "1949"
      ["SubmitDate"]=>
      string(10) "1949-04-26"
      ["StartDate"]=>
      string(10) "1949-04-21"
      ["EndDate"]=>
      string(10) "1949-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "30"
      ["Year"]=>
      string(4) "1950"
      ["SubmitDate"]=>
      string(10) "1950-04-26"
      ["StartDate"]=>
      string(10) "1950-04-21"
      ["EndDate"]=>
      string(10) "1950-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:26 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":30}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:26 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(30)
}

23:46:26 (engine) [SQL]->Connecting to database:
23:46:26 (engine) [SQL]->Connection OK!
23:46:26 (engine) test 
23:46:26 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 30 , 10
23:46:26 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:26 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:26 (engine) [SQL]->Exec (count) [Done]:
23:46:26 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "31"
      ["Year"]=>
      string(4) "1951"
      ["SubmitDate"]=>
      string(10) "1951-04-26"
      ["StartDate"]=>
      string(10) "1951-04-21"
      ["EndDate"]=>
      string(10) "1951-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "32"
      ["Year"]=>
      string(4) "1952"
      ["SubmitDate"]=>
      string(10) "1952-04-26"
      ["StartDate"]=>
      string(10) "1952-04-21"
      ["EndDate"]=>
      string(10) "1952-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "33"
      ["Year"]=>
      string(4) "1953"
      ["SubmitDate"]=>
      string(10) "1953-04-26"
      ["StartDate"]=>
      string(10) "1953-04-21"
      ["EndDate"]=>
      string(10) "1953-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "34"
      ["Year"]=>
      string(4) "1954"
      ["SubmitDate"]=>
      string(10) "1954-04-26"
      ["StartDate"]=>
      string(10) "1954-04-21"
      ["EndDate"]=>
      string(10) "1954-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "35"
      ["Year"]=>
      string(4) "1955"
      ["SubmitDate"]=>
      string(10) "1955-04-26"
      ["StartDate"]=>
      string(10) "1955-04-21"
      ["EndDate"]=>
      string(10) "1955-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "36"
      ["Year"]=>
      string(4) "1956"
      ["SubmitDate"]=>
      string(10) "1956-04-26"
      ["StartDate"]=>
      string(10) "1956-04-21"
      ["EndDate"]=>
      string(10) "1956-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "37"
      ["Year"]=>
      string(4) "1957"
      ["SubmitDate"]=>
      string(10) "1957-04-26"
      ["StartDate"]=>
      string(10) "1957-04-21"
      ["EndDate"]=>
      string(10) "1957-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "38"
      ["Year"]=>
      string(4) "1958"
      ["SubmitDate"]=>
      string(10) "1958-04-26"
      ["StartDate"]=>
      string(10) "1958-04-21"
      ["EndDate"]=>
      string(10) "1958-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "39"
      ["Year"]=>
      string(4) "1959"
      ["SubmitDate"]=>
      string(10) "1959-04-26"
      ["StartDate"]=>
      string(10) "1959-04-21"
      ["EndDate"]=>
      string(10) "1959-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "40"
      ["Year"]=>
      string(4) "1960"
      ["SubmitDate"]=>
      string(10) "1960-04-26"
      ["StartDate"]=>
      string(10) "1960-04-21"
      ["EndDate"]=>
      string(10) "1960-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:27 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":40}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:27 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(40)
}

23:46:27 (engine) [SQL]->Connecting to database:
23:46:27 (engine) [SQL]->Connection OK!
23:46:27 (engine) test 
23:46:27 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 40 , 10
23:46:27 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:27 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:27 (engine) [SQL]->Exec (count) [Done]:
23:46:27 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "41"
      ["Year"]=>
      string(4) "1961"
      ["SubmitDate"]=>
      string(10) "1961-04-26"
      ["StartDate"]=>
      string(10) "1961-04-21"
      ["EndDate"]=>
      string(10) "1961-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "42"
      ["Year"]=>
      string(4) "1962"
      ["SubmitDate"]=>
      string(10) "1962-04-26"
      ["StartDate"]=>
      string(10) "1962-04-21"
      ["EndDate"]=>
      string(10) "1962-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "43"
      ["Year"]=>
      string(4) "1963"
      ["SubmitDate"]=>
      string(10) "1963-04-26"
      ["StartDate"]=>
      string(10) "1963-04-21"
      ["EndDate"]=>
      string(10) "1963-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "44"
      ["Year"]=>
      string(4) "1964"
      ["SubmitDate"]=>
      string(10) "1964-04-26"
      ["StartDate"]=>
      string(10) "1964-04-21"
      ["EndDate"]=>
      string(10) "1964-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "45"
      ["Year"]=>
      string(4) "1965"
      ["SubmitDate"]=>
      string(10) "1965-04-26"
      ["StartDate"]=>
      string(10) "1965-04-21"
      ["EndDate"]=>
      string(10) "1965-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "46"
      ["Year"]=>
      string(4) "1966"
      ["SubmitDate"]=>
      string(10) "1966-04-26"
      ["StartDate"]=>
      string(10) "1966-04-21"
      ["EndDate"]=>
      string(10) "1966-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "47"
      ["Year"]=>
      string(4) "1967"
      ["SubmitDate"]=>
      string(10) "1967-04-26"
      ["StartDate"]=>
      string(10) "1967-04-21"
      ["EndDate"]=>
      string(10) "1967-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "48"
      ["Year"]=>
      string(4) "1968"
      ["SubmitDate"]=>
      string(10) "1968-04-26"
      ["StartDate"]=>
      string(10) "1968-04-21"
      ["EndDate"]=>
      string(10) "1968-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "49"
      ["Year"]=>
      string(4) "1969"
      ["SubmitDate"]=>
      string(10) "1969-04-26"
      ["StartDate"]=>
      string(10) "1969-04-21"
      ["EndDate"]=>
      string(10) "1969-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "50"
      ["Year"]=>
      string(4) "1970"
      ["SubmitDate"]=>
      string(10) "1970-04-26"
      ["StartDate"]=>
      string(10) "1970-04-21"
      ["EndDate"]=>
      string(10) "1970-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:27 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":50}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:27 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(50)
}

23:46:27 (engine) [SQL]->Connecting to database:
23:46:27 (engine) [SQL]->Connection OK!
23:46:27 (engine) test 
23:46:27 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 50 , 10
23:46:27 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:27 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:27 (engine) [SQL]->Exec (count) [Done]:
23:46:27 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "51"
      ["Year"]=>
      string(4) "1971"
      ["SubmitDate"]=>
      string(10) "1971-04-26"
      ["StartDate"]=>
      string(10) "1971-04-21"
      ["EndDate"]=>
      string(10) "1971-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "52"
      ["Year"]=>
      string(4) "1972"
      ["SubmitDate"]=>
      string(10) "1972-04-26"
      ["StartDate"]=>
      string(10) "1972-04-21"
      ["EndDate"]=>
      string(10) "1972-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "53"
      ["Year"]=>
      string(4) "1973"
      ["SubmitDate"]=>
      string(10) "1973-04-26"
      ["StartDate"]=>
      string(10) "1973-04-21"
      ["EndDate"]=>
      string(10) "1973-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "54"
      ["Year"]=>
      string(4) "1974"
      ["SubmitDate"]=>
      string(10) "1974-04-26"
      ["StartDate"]=>
      string(10) "1974-04-21"
      ["EndDate"]=>
      string(10) "1974-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "55"
      ["Year"]=>
      string(4) "1975"
      ["SubmitDate"]=>
      string(10) "1975-04-26"
      ["StartDate"]=>
      string(10) "1975-04-21"
      ["EndDate"]=>
      string(10) "1975-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "56"
      ["Year"]=>
      string(4) "1976"
      ["SubmitDate"]=>
      string(10) "1976-04-26"
      ["StartDate"]=>
      string(10) "1976-04-21"
      ["EndDate"]=>
      string(10) "1976-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "57"
      ["Year"]=>
      string(4) "1977"
      ["SubmitDate"]=>
      string(10) "1977-04-26"
      ["StartDate"]=>
      string(10) "1977-04-21"
      ["EndDate"]=>
      string(10) "1977-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "58"
      ["Year"]=>
      string(4) "1978"
      ["SubmitDate"]=>
      string(10) "1978-04-26"
      ["StartDate"]=>
      string(10) "1978-04-21"
      ["EndDate"]=>
      string(10) "1978-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "59"
      ["Year"]=>
      string(4) "1979"
      ["SubmitDate"]=>
      string(10) "1979-04-26"
      ["StartDate"]=>
      string(10) "1979-04-21"
      ["EndDate"]=>
      string(10) "1979-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "60"
      ["Year"]=>
      string(4) "1980"
      ["SubmitDate"]=>
      string(10) "1980-04-26"
      ["StartDate"]=>
      string(10) "1980-04-21"
      ["EndDate"]=>
      string(10) "1980-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:28 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":60}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:28 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(60)
}

23:46:28 (engine) [SQL]->Connecting to database:
23:46:28 (engine) [SQL]->Connection OK!
23:46:28 (engine) test 
23:46:28 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 60 , 10
23:46:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:28 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:28 (engine) [SQL]->Exec (count) [Done]:
23:46:28 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "61"
      ["Year"]=>
      string(4) "1981"
      ["SubmitDate"]=>
      string(10) "1981-04-26"
      ["StartDate"]=>
      string(10) "1981-04-21"
      ["EndDate"]=>
      string(10) "1981-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "62"
      ["Year"]=>
      string(4) "1982"
      ["SubmitDate"]=>
      string(10) "1982-04-26"
      ["StartDate"]=>
      string(10) "1982-04-21"
      ["EndDate"]=>
      string(10) "1982-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "63"
      ["Year"]=>
      string(4) "1983"
      ["SubmitDate"]=>
      string(10) "1983-04-26"
      ["StartDate"]=>
      string(10) "1983-04-21"
      ["EndDate"]=>
      string(10) "1983-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "64"
      ["Year"]=>
      string(4) "1984"
      ["SubmitDate"]=>
      string(10) "1984-04-26"
      ["StartDate"]=>
      string(10) "1984-04-21"
      ["EndDate"]=>
      string(10) "1984-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "65"
      ["Year"]=>
      string(4) "1985"
      ["SubmitDate"]=>
      string(10) "1985-04-26"
      ["StartDate"]=>
      string(10) "1985-04-21"
      ["EndDate"]=>
      string(10) "1985-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "66"
      ["Year"]=>
      string(4) "1986"
      ["SubmitDate"]=>
      string(10) "1986-04-26"
      ["StartDate"]=>
      string(10) "1986-04-21"
      ["EndDate"]=>
      string(10) "1986-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "67"
      ["Year"]=>
      string(4) "1987"
      ["SubmitDate"]=>
      string(10) "1987-04-26"
      ["StartDate"]=>
      string(10) "1987-04-21"
      ["EndDate"]=>
      string(10) "1987-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "68"
      ["Year"]=>
      string(4) "1988"
      ["SubmitDate"]=>
      string(10) "1988-04-26"
      ["StartDate"]=>
      string(10) "1988-04-21"
      ["EndDate"]=>
      string(10) "1988-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "69"
      ["Year"]=>
      string(4) "1989"
      ["SubmitDate"]=>
      string(10) "1989-04-26"
      ["StartDate"]=>
      string(10) "1989-04-21"
      ["EndDate"]=>
      string(10) "1989-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "70"
      ["Year"]=>
      string(4) "1990"
      ["SubmitDate"]=>
      string(10) "1990-04-26"
      ["StartDate"]=>
      string(10) "1990-04-21"
      ["EndDate"]=>
      string(10) "1990-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:28 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":70}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:28 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(70)
}

23:46:28 (engine) [SQL]->Connecting to database:
23:46:28 (engine) [SQL]->Connection OK!
23:46:28 (engine) test 
23:46:28 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 70 , 10
23:46:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:28 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:28 (engine) [SQL]->Exec (count) [Done]:
23:46:28 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "71"
      ["Year"]=>
      string(4) "1991"
      ["SubmitDate"]=>
      string(10) "1991-04-26"
      ["StartDate"]=>
      string(10) "1991-04-21"
      ["EndDate"]=>
      string(10) "1991-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "72"
      ["Year"]=>
      string(4) "1992"
      ["SubmitDate"]=>
      string(10) "1992-04-26"
      ["StartDate"]=>
      string(10) "1992-04-21"
      ["EndDate"]=>
      string(10) "1992-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "73"
      ["Year"]=>
      string(4) "1993"
      ["SubmitDate"]=>
      string(10) "1993-04-26"
      ["StartDate"]=>
      string(10) "1993-04-21"
      ["EndDate"]=>
      string(10) "1993-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "74"
      ["Year"]=>
      string(4) "1994"
      ["SubmitDate"]=>
      string(10) "1994-04-26"
      ["StartDate"]=>
      string(10) "1994-04-21"
      ["EndDate"]=>
      string(10) "1994-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "75"
      ["Year"]=>
      string(4) "1995"
      ["SubmitDate"]=>
      string(10) "1995-04-26"
      ["StartDate"]=>
      string(10) "1995-04-21"
      ["EndDate"]=>
      string(10) "1995-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "76"
      ["Year"]=>
      string(4) "1996"
      ["SubmitDate"]=>
      string(10) "1996-04-26"
      ["StartDate"]=>
      string(10) "1996-04-21"
      ["EndDate"]=>
      string(10) "1996-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "77"
      ["Year"]=>
      string(4) "1997"
      ["SubmitDate"]=>
      string(10) "1997-04-26"
      ["StartDate"]=>
      string(10) "1997-04-21"
      ["EndDate"]=>
      string(10) "1997-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "78"
      ["Year"]=>
      string(4) "1998"
      ["SubmitDate"]=>
      string(10) "1998-04-26"
      ["StartDate"]=>
      string(10) "1998-04-21"
      ["EndDate"]=>
      string(10) "1998-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "79"
      ["Year"]=>
      string(4) "1999"
      ["SubmitDate"]=>
      string(10) "1999-04-26"
      ["StartDate"]=>
      string(10) "1999-04-21"
      ["EndDate"]=>
      string(10) "1999-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "80"
      ["Year"]=>
      string(4) "2000"
      ["SubmitDate"]=>
      string(10) "2000-04-26"
      ["StartDate"]=>
      string(10) "2000-04-21"
      ["EndDate"]=>
      string(10) "2000-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:28 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":80}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:28 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(80)
}

23:46:28 (engine) [SQL]->Connecting to database:
23:46:28 (engine) [SQL]->Connection OK!
23:46:28 (engine) test 
23:46:28 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 80 , 10
23:46:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:28 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:28 (engine) [SQL]->Exec (count) [Done]:
23:46:28 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(10) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "81"
      ["Year"]=>
      string(4) "2001"
      ["SubmitDate"]=>
      string(10) "2001-04-26"
      ["StartDate"]=>
      string(10) "2001-04-21"
      ["EndDate"]=>
      string(10) "2001-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "82"
      ["Year"]=>
      string(4) "2002"
      ["SubmitDate"]=>
      string(10) "2002-04-26"
      ["StartDate"]=>
      string(10) "2002-04-21"
      ["EndDate"]=>
      string(10) "2002-02-21"
      ["State"]=>
      string(1) "3"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(2) "83"
      ["Year"]=>
      string(4) "2003"
      ["SubmitDate"]=>
      string(10) "2003-04-26"
      ["StartDate"]=>
      string(10) "2003-04-21"
      ["EndDate"]=>
      string(10) "2003-02-21"
      ["State"]=>
      string(1) "3"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(2) "84"
      ["Year"]=>
      string(4) "2004"
      ["SubmitDate"]=>
      string(10) "2004-04-26"
      ["StartDate"]=>
      string(10) "2004-04-21"
      ["EndDate"]=>
      string(10) "2004-02-21"
      ["State"]=>
      string(1) "3"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(2) "85"
      ["Year"]=>
      string(4) "2005"
      ["SubmitDate"]=>
      string(10) "2005-04-26"
      ["StartDate"]=>
      string(10) "2005-04-21"
      ["EndDate"]=>
      string(10) "2005-02-21"
      ["State"]=>
      string(1) "3"
    }
    [5]=>
    array(6) {
      ["ID"]=>
      string(2) "86"
      ["Year"]=>
      string(4) "2006"
      ["SubmitDate"]=>
      string(10) "2006-04-26"
      ["StartDate"]=>
      string(10) "2006-04-21"
      ["EndDate"]=>
      string(10) "2006-02-21"
      ["State"]=>
      string(1) "3"
    }
    [6]=>
    array(6) {
      ["ID"]=>
      string(2) "87"
      ["Year"]=>
      string(4) "2007"
      ["SubmitDate"]=>
      string(10) "2007-04-26"
      ["StartDate"]=>
      string(10) "2007-04-21"
      ["EndDate"]=>
      string(10) "2007-02-21"
      ["State"]=>
      string(1) "3"
    }
    [7]=>
    array(6) {
      ["ID"]=>
      string(2) "88"
      ["Year"]=>
      string(4) "2008"
      ["SubmitDate"]=>
      string(10) "2008-04-26"
      ["StartDate"]=>
      string(10) "2008-04-21"
      ["EndDate"]=>
      string(10) "2008-02-21"
      ["State"]=>
      string(1) "3"
    }
    [8]=>
    array(6) {
      ["ID"]=>
      string(2) "89"
      ["Year"]=>
      string(4) "2009"
      ["SubmitDate"]=>
      string(10) "2009-04-26"
      ["StartDate"]=>
      string(10) "2009-04-21"
      ["EndDate"]=>
      string(10) "2009-02-21"
      ["State"]=>
      string(1) "3"
    }
    [9]=>
    array(6) {
      ["ID"]=>
      string(2) "90"
      ["Year"]=>
      string(4) "2010"
      ["SubmitDate"]=>
      string(10) "2010-04-26"
      ["StartDate"]=>
      string(10) "2010-04-21"
      ["EndDate"]=>
      string(10) "2010-02-21"
      ["State"]=>
      string(1) "3"
    }
  }
  ["total"]=>
  int(92)
}

23:46:28 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":90}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:28 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(90)
}

23:46:28 (engine) [SQL]->Connecting to database:
23:46:28 (engine) [SQL]->Connection OK!
23:46:28 (engine) test 
23:46:28 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 90 , 10
23:46:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:28 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:28 (engine) [SQL]->Exec (count) [Done]:
23:46:28 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["SubmitDate"]=>
      string(10) "2011-04-26"
      ["StartDate"]=>
      string(10) "2011-04-21"
      ["EndDate"]=>
      string(10) "2011-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["SubmitDate"]=>
      string(10) "2012-04-26"
      ["StartDate"]=>
      string(10) "2012-04-21"
      ["EndDate"]=>
      string(10) "2012-02-21"
      ["State"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(92)
}

23:46:28 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(85) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":100}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:28 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(100)
}

23:46:28 (engine) [SQL]->Connecting to database:
23:46:28 (engine) [SQL]->Connection OK!
23:46:28 (engine) test 
23:46:28 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 100 , 10
23:46:28 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:28 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:28 (engine) [SQL]->Exec (count) [Done]:
23:46:28 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(0) {
  }
  ["total"]=>
  int(92)
}

23:46:29 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(84) "{\"action\":\"Admin.TaxYearGrid\",\"data\":{\"ItemsPerPage\":10,\"ItemsOffset\":90}}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:29 (engine) [JSON (Admin.TaxYearGrid)]->array(2) {
  ["ItemsPerPage"]=>
  int(10)
  ["ItemsOffset"]=>
  int(90)
}

23:46:29 (engine) [SQL]->Connecting to database:
23:46:29 (engine) [SQL]->Connection OK!
23:46:29 (engine) test 
23:46:29 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` LIMIT 90 , 10
23:46:29 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:29 (engine) [SQL]->Exec (count):SELECT * FROM `TaxYearTable`
23:46:29 (engine) [SQL]->Exec (count) [Done]:
23:46:29 (engine) [RESPONSE (Admin.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["SubmitDate"]=>
      string(10) "2011-04-26"
      ["StartDate"]=>
      string(10) "2011-04-21"
      ["EndDate"]=>
      string(10) "2011-02-21"
      ["State"]=>
      string(1) "3"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["SubmitDate"]=>
      string(10) "2012-04-26"
      ["StartDate"]=>
      string(10) "2012-04-21"
      ["EndDate"]=>
      string(10) "2012-02-21"
      ["State"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(92)
}

23:46:31 (engine) [REQUEST] (Array) <-array(2) {
  ["json"]=>
  string(52) "{\"action\":\"Admin.TaxYearShow\",\"data\":\"2012\"}"
  ["__utma"]=>
  string(55) "104595487.1066155361.1306016171.1307135115.1307721798.5"
}

23:46:31 (engine) [JSON (Admin.TaxYearShow)]->string(4) "2012"

23:46:31 (engine) [SQL]->Connecting to database:
23:46:31 (engine) [SQL]->Connection OK!
23:46:31 (engine) test 
23:46:31 (engine) [SQL]->Exec:SELECT * FROM `TaxYearTable` WHERE Year=2012
23:46:31 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:31 (engine) [RESPONSE (Admin.TaxYearShow)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(6) {
    ["ID"]=>
    string(2) "92"
    ["Year"]=>
    string(4) "2012"
    ["SubmitDate"]=>
    string(10) "2012-04-26"
    ["StartDate"]=>
    string(10) "2012-04-21"
    ["EndDate"]=>
    string(10) "2012-02-21"
    ["State"]=>
    string(1) "1"
  }
  ["total"]=>
  int(1)
}

23:46:58 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:46:58 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:46:58 (engine) [SQL]->Connecting to database:
23:46:58 (engine) [SQL]->Connection OK!
23:46:58 (engine) test 
23:46:58 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:46:58 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:58 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:46:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:46:59 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:46:59 (engine) [SQL]->Connecting to database:
23:46:59 (engine) [SQL]->Connection OK!
23:46:59 (engine) test 
23:46:59 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:46:59 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:59 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:46:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:46:59 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:46:59 (engine) [SQL]->Connecting to database:
23:46:59 (engine) [SQL]->Connection OK!
23:46:59 (engine) test 
23:46:59 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:46:59 (engine) [SQL]->Exec [Done]:Resource id #16
23:46:59 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:47:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:47:00 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:47:00 (engine) [SQL]->Connecting to database:
23:47:00 (engine) [SQL]->Connection OK!
23:47:00 (engine) test 
23:47:00 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:47:00 (engine) [SQL]->Exec [Done]:Resource id #16
23:47:00 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:47:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:47:00 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:47:00 (engine) [SQL]->Connecting to database:
23:47:00 (engine) [SQL]->Connection OK!
23:47:00 (engine) test 
23:47:00 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:47:00 (engine) [SQL]->Exec [Done]:Resource id #16
23:47:00 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:48:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:48:29 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:48:29 (engine) [SQL]->Connecting to database:
23:48:29 (engine) [SQL]->Connection OK!
23:48:29 (engine) test 
23:48:29 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:48:29 (engine) [SQL]->Exec [Done]:Resource id #16
23:48:29 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:48:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:48:29 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:48:29 (engine) [SQL]->Connecting to database:
23:48:29 (engine) [SQL]->Connection OK!
23:48:29 (engine) test 
23:48:29 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:48:29 (engine) [SQL]->Exec [Done]:Resource id #16
23:48:29 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:48:29 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:48:29 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:48:29 (engine) [SQL]->Connecting to database:
23:48:29 (engine) [SQL]->Connection OK!
23:48:29 (engine) test 
23:48:29 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:48:29 (engine) [SQL]->Exec [Done]:Resource id #16
23:48:29 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:48:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:48:31 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:48:31 (engine) [SQL]->Connecting to database:
23:48:31 (engine) [SQL]->Connection OK!
23:48:31 (engine) test 
23:48:31 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:48:31 (engine) [SQL]->Exec [Done]:Resource id #16
23:48:31 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:48:31 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:48:31 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:48:31 (engine) [SQL]->Connecting to database:
23:48:31 (engine) [SQL]->Connection OK!
23:48:31 (engine) test 
23:48:31 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:48:31 (engine) [SQL]->Exec [Done]:Resource id #16
23:48:31 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:49:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:49:35 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:49:35 (engine) [SQL]->Connecting to database:
23:49:35 (engine) [SQL]->Connection OK!
23:49:35 (engine) test 
23:49:35 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:49:35 (engine) [SQL]->Exec [Done]:Resource id #16
23:49:35 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:49:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:49:36 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:49:36 (engine) [SQL]->Connecting to database:
23:49:36 (engine) [SQL]->Connection OK!
23:49:36 (engine) test 
23:49:36 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:49:36 (engine) [SQL]->Exec [Done]:Resource id #16
23:49:36 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:49:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:49:36 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:49:36 (engine) [SQL]->Connecting to database:
23:49:36 (engine) [SQL]->Connection OK!
23:49:36 (engine) test 
23:49:36 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:49:36 (engine) [SQL]->Exec [Done]:Resource id #16
23:49:36 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:49:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:49:41 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:49:41 (engine) [SQL]->Connecting to database:
23:49:41 (engine) [SQL]->Connection OK!
23:49:41 (engine) test 
23:49:41 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:49:41 (engine) [SQL]->Exec [Done]:Resource id #16
23:49:41 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:49:41 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:49:41 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:49:41 (engine) [SQL]->Connecting to database:
23:49:41 (engine) [SQL]->Connection OK!
23:49:41 (engine) test 
23:49:41 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:49:41 (engine) [SQL]->Exec [Done]:Resource id #16
23:49:41 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:49:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:49:59 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:49:59 (engine) [SQL]->Connecting to database:
23:49:59 (engine) [SQL]->Connection OK!
23:49:59 (engine) test 
23:49:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:49:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:49:59 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:49:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:49:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:49:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:49:59 (engine) [SQL]->Connecting to database:
23:49:59 (engine) [SQL]->Connection OK!
23:49:59 (engine) test 
23:49:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:49:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:49:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:49:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:49:59 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:49:59 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:49:59 (engine) [SQL]->Connecting to database:
23:49:59 (engine) [SQL]->Connection OK!
23:49:59 (engine) test 
23:49:59 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:49:59 (engine) [SQL]->Exec [Done]:Resource id #17
23:49:59 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:49:59 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:49:59 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:49:59 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:50:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:50:00 (engine) [SQL]->Connecting to database:
23:50:00 (engine) [SQL]->Connection OK!
23:50:00 (engine) test 
23:50:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:50:00 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:50:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:50:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:50:00 (engine) [SQL]->Connecting to database:
23:50:00 (engine) [SQL]->Connection OK!
23:50:00 (engine) test 
23:50:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:50:00 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:50:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:00 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:00 (engine) [SQL]->Connecting to database:
23:50:00 (engine) [SQL]->Connection OK!
23:50:00 (engine) test 
23:50:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:00 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:50:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:00 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:00 (engine) [SQL]->Connecting to database:
23:50:00 (engine) [SQL]->Connection OK!
23:50:00 (engine) test 
23:50:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:00 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:00 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:00 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:00 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:00 (engine) [SQL]->Connecting to database:
23:50:00 (engine) [SQL]->Connection OK!
23:50:00 (engine) test 
23:50:00 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:00 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:00 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:00 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:50:00 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:00 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:01 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:01 (engine) [SQL]->Connecting to database:
23:50:01 (engine) [SQL]->Connection OK!
23:50:01 (engine) test 
23:50:01 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:01 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:01 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:01 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:50:01 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:01 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:02 (engine) test 
23:50:02 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:02 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:02 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:50:02 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:02 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:50:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:50:02 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:50:02 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:50:02 (engine) [SQL]->Connecting to database:
23:50:02 (engine) [SQL]->Connection OK!
23:50:03 (engine) test 
23:50:03 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:50:03 (engine) [SQL]->Exec [Done]:Resource id #17
23:50:03 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:50:03 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:50:03 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:50:03 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:51:05 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:51:05 (engine) [SQL]->Connecting to database:
23:51:05 (engine) [SQL]->Connection OK!
23:51:05 (engine) test 
23:51:05 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:51:05 (engine) [SQL]->Exec [Done]:Resource id #16
23:51:05 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:51:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:51:05 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:51:05 (engine) [SQL]->Connecting to database:
23:51:05 (engine) [SQL]->Connection OK!
23:51:05 (engine) test 
23:51:05 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:51:05 (engine) [SQL]->Exec [Done]:Resource id #16
23:51:05 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:51:05 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:51:05 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:51:05 (engine) [SQL]->Connecting to database:
23:51:05 (engine) [SQL]->Connection OK!
23:51:05 (engine) test 
23:51:05 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:51:05 (engine) [SQL]->Exec [Done]:Resource id #16
23:51:05 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:51:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:51:07 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:51:07 (engine) [SQL]->Connecting to database:
23:51:07 (engine) [SQL]->Connection OK!
23:51:07 (engine) test 
23:51:07 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:51:07 (engine) [SQL]->Exec [Done]:Resource id #16
23:51:07 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:51:07 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:51:07 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:51:07 (engine) [SQL]->Connecting to database:
23:51:07 (engine) [SQL]->Connection OK!
23:51:07 (engine) test 
23:51:07 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:51:07 (engine) [SQL]->Exec [Done]:Resource id #16
23:51:07 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:51:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":9}}"
}

23:51:14 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(9)
}

23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 9
23:51:14 (engine) [SQL]->Connecting to database:
23:51:14 (engine) [SQL]->Connection OK!
23:51:14 (engine) test 
23:51:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 9
23:51:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:14 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 9
23:51:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 1500000 Budget = 10000 Rate = 0.0166666666667
23:51:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(9)
    ["Price"]=>
    float(0.0166666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:14 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:14 (engine) [SQL]->Connecting to database:
23:51:14 (engine) [SQL]->Connection OK!
23:51:14 (engine) test 
23:51:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:14 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:51:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:51:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:14 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:14 (engine) [SQL]->Connecting to database:
23:51:14 (engine) [SQL]->Connection OK!
23:51:14 (engine) test 
23:51:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:14 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 1
23:51:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(126.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:15 (engine) [SQL]->Connecting to database:
23:51:15 (engine) [SQL]->Connection OK!
23:51:15 (engine) test 
23:51:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 1
23:51:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(130.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:15 (engine) [SQL]->Connecting to database:
23:51:15 (engine) [SQL]->Connection OK!
23:51:15 (engine) test 
23:51:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 1
23:51:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(69.4666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:51:15 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:51:15 (engine) [SQL]->Connecting to database:
23:51:15 (engine) [SQL]->Connection OK!
23:51:15 (engine) test 
23:51:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:51:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:15 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:51:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:51:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 3
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Minimum Rate = 50 AvrgRate = 100
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(52.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 4
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(201.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 4
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(205.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 4
23:51:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(209.733333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":78.15,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(78.15)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:16 (engine) [SQL]->Connecting to database:
23:51:16 (engine) [SQL]->Connection OK!
23:51:16 (engine) test 
23:51:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 78.15 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(214.075)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":86.83333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(86.8333333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 86.8333333333 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.416666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":95.51666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(95.5166666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 95.5166666667 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(222.758333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":112.88333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(112.883333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 112.883333333 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(231.441666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":121.56666666666669,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(121.566666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 121.566666667 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(121.566666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":130.25000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(130.25)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 130.25 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(130.25)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":138.93333333333337,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(138.933333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:17 (engine) [SQL]->Connecting to database:
23:51:17 (engine) [SQL]->Connection OK!
23:51:17 (engine) test 
23:51:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 138.933333333 ID = 4
23:51:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(138.933333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":147.6166666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(147.616666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 147.616666667 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(147.616666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.30000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":164.9833333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(164.983333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 164.983333333 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(164.983333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":173.66666666666674,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(173.666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 173.666666667 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":182.35000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(182.35)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 182.35 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.35)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:18 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":191.03333333333342,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:18 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(191.033333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:18 (engine) [SQL]->Connecting to database:
23:51:18 (engine) [SQL]->Connection OK!
23:51:18 (engine) test 
23:51:18 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:18 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:18 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:18 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 191.033333333 ID = 4
23:51:18 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:18 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.033333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":199.71666666666675,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(199.716666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:19 (engine) [SQL]->Connecting to database:
23:51:19 (engine) [SQL]->Connection OK!
23:51:19 (engine) test 
23:51:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 199.716666667 ID = 4
23:51:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.716666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:19 (engine) [SQL]->Connecting to database:
23:51:19 (engine) [SQL]->Connection OK!
23:51:19 (engine) test 
23:51:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:51:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":217.08333333333343,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(217.083333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:19 (engine) [SQL]->Connecting to database:
23:51:19 (engine) [SQL]->Connection OK!
23:51:19 (engine) test 
23:51:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 217.083333333 ID = 4
23:51:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(217.083333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":225.76666666666677,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(225.766666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:19 (engine) [SQL]->Connecting to database:
23:51:19 (engine) [SQL]->Connection OK!
23:51:19 (engine) test 
23:51:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 225.766666667 ID = 4
23:51:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(225.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:19 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":234.4500000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:19 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(234.45)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:19 (engine) [SQL]->Connecting to database:
23:51:19 (engine) [SQL]->Connection OK!
23:51:19 (engine) test 
23:51:19 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:19 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:19 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:19 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 234.45 ID = 4
23:51:19 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:19 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(234.45)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:30 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

23:51:30 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

23:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 8
23:51:30 (engine) [SQL]->Connecting to database:
23:51:30 (engine) [SQL]->Connection OK!
23:51:30 (engine) test 
23:51:30 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
23:51:30 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:30 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:30 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 8
23:51:30 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 500000 Rate = 83.3333333333
23:51:30 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    float(83.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:32 (engine) [SQL]->Connecting to database:
23:51:32 (engine) [SQL]->Connection OK!
23:51:32 (engine) test 
23:51:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:32 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:51:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:51:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:32 (engine) [SQL]->Connecting to database:
23:51:32 (engine) [SQL]->Connection OK!
23:51:32 (engine) test 
23:51:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 1
23:51:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(126.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:32 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:32 (engine) [SQL]->Connecting to database:
23:51:32 (engine) [SQL]->Connection OK!
23:51:32 (engine) test 
23:51:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:32 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 1
23:51:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(130.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 1
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(69.4666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 3
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Minimum Rate = 50 AvrgRate = 100
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(52.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:33 (engine) [SQL]->Connecting to database:
23:51:33 (engine) [SQL]->Connection OK!
23:51:33 (engine) test 
23:51:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 4
23:51:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(201.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(205.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(209.733333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":78.15,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(78.15)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 78.15 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(214.075)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":86.83333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(86.8333333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 86.8333333333 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.416666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":95.51666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(95.5166666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 95.5166666667 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(222.758333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":112.88333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(112.883333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 112.883333333 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(231.441666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":121.56666666666669,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(121.566666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:34 (engine) [SQL]->Connecting to database:
23:51:34 (engine) [SQL]->Connection OK!
23:51:34 (engine) test 
23:51:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 121.566666667 ID = 4
23:51:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(121.566666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":130.25000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(130.25)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 130.25 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(130.25)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":138.93333333333337,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(138.933333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 138.933333333 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(138.933333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":147.6166666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(147.616666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 147.616666667 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(147.616666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.30000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":164.9833333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(164.983333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 164.983333333 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(164.983333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":173.66666666666674,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(173.666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 173.666666667 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":182.35000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(182.35)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:35 (engine) [SQL]->Connecting to database:
23:51:35 (engine) [SQL]->Connection OK!
23:51:35 (engine) test 
23:51:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 182.35 ID = 4
23:51:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.35)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":191.03333333333342,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(191.033333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 191.033333333 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.033333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":199.71666666666675,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(199.716666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 199.716666667 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.716666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":217.08333333333343,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(217.083333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 217.083333333 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(217.083333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":225.76666666666677,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(225.766666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 225.766666667 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(225.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":234.4500000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(234.45)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:36 (engine) [SQL]->Connecting to database:
23:51:36 (engine) [SQL]->Connection OK!
23:51:36 (engine) test 
23:51:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 234.45 ID = 4
23:51:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(234.45)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:44 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:44 (engine) [SQL]->Connecting to database:
23:51:44 (engine) [SQL]->Connection OK!
23:51:44 (engine) test 
23:51:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:44 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:51:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:51:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:44 (engine) [SQL]->Connecting to database:
23:51:44 (engine) [SQL]->Connection OK!
23:51:44 (engine) test 
23:51:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:51:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:51:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:51:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:51:45 (engine) [SQL]->Connecting to database:
23:51:45 (engine) [SQL]->Connection OK!
23:51:45 (engine) test 
23:51:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:51:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:51:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:51:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:46 (engine) [SQL]->Connecting to database:
23:51:46 (engine) [SQL]->Connection OK!
23:51:46 (engine) test 
23:51:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:51:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:47 (engine) [SQL]->Connecting to database:
23:51:47 (engine) [SQL]->Connection OK!
23:51:47 (engine) test 
23:51:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:51:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:48 (engine) [SQL]->Connecting to database:
23:51:48 (engine) [SQL]->Connection OK!
23:51:48 (engine) test 
23:51:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:51:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:49 (engine) [SQL]->Connecting to database:
23:51:49 (engine) [SQL]->Connection OK!
23:51:49 (engine) test 
23:51:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:51:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:51:49 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:51:49 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:51:49 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:51:49 (engine) [SQL]->Connecting to database:
23:51:49 (engine) [SQL]->Connection OK!
23:51:49 (engine) test 
23:51:49 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:51:49 (engine) [SQL]->Exec [Done]:Resource id #17
23:51:49 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:51:49 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:51:49 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:51:49 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:01 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(59) "{\"action\":\"Admin.Login\",\"data\":{\"Code\":\"T10012\"}}"
}

23:54:01 (engine) [JSON (Admin.Login)]->array(1) {
  ["Code"]=>
  string(6) "T10012"
}

23:54:01 (engine) [SQL]->Connecting to database:
23:54:01 (engine) [SQL]->Connection OK!
23:54:01 (engine) test 
23:54:01 (engine) [SQL]->Exec:SELECT ID, 3 AS Type FROM `InstitutionTable` WHERE Code = 'T10012'
		UNION ALL
		SELECT ID, (Type + 1) AS Type FROM `TaxPayerTable` WHERE Code = 'T10012'
23:54:01 (engine) [SQL]->Exec [Done]:Resource id #16
23:54:01 (engine) [RESPONSE (Admin.Login)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(2) {
      ["ID"]=>
      string(2) "12"
      ["Type"]=>
      string(1) "1"
    }
  }
  ["total"]=>
  int(1)
}

23:54:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:54:02 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:54:02 (engine) [SQL]->Connecting to database:
23:54:02 (engine) [SQL]->Connection OK!
23:54:02 (engine) test 
23:54:02 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:54:02 (engine) [SQL]->Exec [Done]:Resource id #16
23:54:02 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:54:02 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(97) "{\"action\":\"TaxPayer.TaxYearGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":12,\"ItemsPerPage\":100}}"
}

23:54:02 (engine) [JSON (TaxPayer.TaxYearGrid)]->array(3) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:54:02 (engine) [SQL]->Connecting to database:
23:54:02 (engine) [SQL]->Connection OK!
23:54:02 (engine) test 
23:54:02 (engine) [SQL]->Exec:SELECT year.ID, year.Year, year.State, ib.ConfirmedDate

FROM TaxYearTable year

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tpt.ConfirmedDate IS NOT NULL

LEFT JOIN TaxProgramTable tp ON tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.ConfirmedDate IS NOT NULL AND ib.TaxYearID = year.ID

WHERE year.ID = ib.TaxYearID OR year.Year = ( SELECT YEAR( Date ) FROM SystemTable WHERE ID = 1 )

GROUP BY year.ID  LIMIT 0 , 100
23:54:02 (engine) [SQL]->Exec [Done]:Resource id #16
23:54:02 (engine) [RESPONSE (TaxPayer.TaxYearGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(2) {
    [0]=>
    array(4) {
      ["ID"]=>
      string(2) "91"
      ["Year"]=>
      string(4) "2011"
      ["State"]=>
      string(1) "3"
      ["ConfirmedDate"]=>
      string(10) "2011-01-21"
    }
    [1]=>
    array(4) {
      ["ID"]=>
      string(2) "92"
      ["Year"]=>
      string(4) "2012"
      ["State"]=>
      string(1) "1"
      ["ConfirmedDate"]=>
      NULL
    }
  }
  ["total"]=>
  int(1)
}

23:54:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:54:04 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:54:04 (engine) [SQL]->Connecting to database:
23:54:04 (engine) [SQL]->Connection OK!
23:54:04 (engine) test 
23:54:04 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:54:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:54:04 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:54:04 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:54:04 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:54:04 (engine) [SQL]->Connecting to database:
23:54:04 (engine) [SQL]->Connection OK!
23:54:04 (engine) test 
23:54:04 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:54:04 (engine) [SQL]->Exec [Done]:Resource id #16
23:54:04 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

23:54:12 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:12 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:12 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:12 (engine) [SQL]->Connecting to database:
23:54:12 (engine) [SQL]->Connection OK!
23:54:12 (engine) test 
23:54:12 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:12 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:12 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:12 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:54:12 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:54:12 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:13 (engine) [SQL]->Connecting to database:
23:54:13 (engine) [SQL]->Connection OK!
23:54:13 (engine) test 
23:54:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:54:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:13 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:13 (engine) [SQL]->Connecting to database:
23:54:13 (engine) [SQL]->Connection OK!
23:54:13 (engine) test 
23:54:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:13 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:54:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:13 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:54:13 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:54:13 (engine) [SQL]->Connecting to database:
23:54:13 (engine) [SQL]->Connection OK!
23:54:13 (engine) test 
23:54:13 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:54:13 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:13 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:13 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:54:13 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:54:13 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:54:14 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:54:14 (engine) [SQL]->Connecting to database:
23:54:14 (engine) [SQL]->Connection OK!
23:54:14 (engine) test 
23:54:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:54:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:54:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:14 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:14 (engine) [SQL]->Connecting to database:
23:54:14 (engine) [SQL]->Connection OK!
23:54:14 (engine) test 
23:54:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:54:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:14 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:14 (engine) [SQL]->Connecting to database:
23:54:14 (engine) [SQL]->Connection OK!
23:54:14 (engine) test 
23:54:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:14 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:14 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:14 (engine) [SQL]->Connecting to database:
23:54:14 (engine) [SQL]->Connection OK!
23:54:14 (engine) test 
23:54:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:14 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:14 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:14 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:14 (engine) [SQL]->Connecting to database:
23:54:14 (engine) [SQL]->Connection OK!
23:54:14 (engine) test 
23:54:14 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:14 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:14 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:14 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:54:14 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:14 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:15 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:15 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:15 (engine) [SQL]->Connecting to database:
23:54:15 (engine) [SQL]->Connection OK!
23:54:15 (engine) test 
23:54:15 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:15 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:15 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:15 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:54:15 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:15 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:16 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:16 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:16 (engine) [SQL]->Connecting to database:
23:54:16 (engine) [SQL]->Connection OK!
23:54:16 (engine) test 
23:54:16 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:16 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:16 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:16 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:54:16 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:16 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:17 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:17 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:17 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:17 (engine) [SQL]->Connecting to database:
23:54:17 (engine) [SQL]->Connection OK!
23:54:17 (engine) test 
23:54:17 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:17 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:17 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:17 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:54:17 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:17 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":8}}"
}

23:54:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(8)
}

23:54:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 8
23:54:32 (engine) [SQL]->Connecting to database:
23:54:32 (engine) [SQL]->Connection OK!
23:54:32 (engine) test 
23:54:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 8
23:54:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:32 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 8
23:54:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 500000 Rate = 83.3333333333
23:54:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(8)
    ["Price"]=>
    float(83.3333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:32 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:32 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:32 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:32 (engine) [SQL]->Connecting to database:
23:54:32 (engine) [SQL]->Connection OK!
23:54:32 (engine) test 
23:54:32 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:32 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:32 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:32 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:54:32 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:54:32 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:33 (engine) [SQL]->Connecting to database:
23:54:33 (engine) [SQL]->Connection OK!
23:54:33 (engine) test 
23:54:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 1
23:54:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(126.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:33 (engine) [SQL]->Connecting to database:
23:54:33 (engine) [SQL]->Connection OK!
23:54:33 (engine) test 
23:54:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 1
23:54:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(130.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:33 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:33 (engine) [SQL]->Connecting to database:
23:54:33 (engine) [SQL]->Connection OK!
23:54:33 (engine) test 
23:54:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:33 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 1
23:54:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(69.4666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:54:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:54:33 (engine) [SQL]->Connecting to database:
23:54:33 (engine) [SQL]->Connection OK!
23:54:33 (engine) test 
23:54:33 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:54:33 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:33 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:33 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:54:33 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:54:33 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:33 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:54:33 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 3
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Minimum Rate = 50 AvrgRate = 100
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(52.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":52.10000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(52.1)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 52.1 ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(201.05)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":60.78333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(60.7833333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 60.7833333333 ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(205.391666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":69.46666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(69.4666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 69.4666666667 ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(209.733333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":78.15,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(78.15)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 78.15 ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(214.075)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:34 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":86.83333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:34 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(86.8333333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:34 (engine) [SQL]->Connecting to database:
23:54:34 (engine) [SQL]->Connection OK!
23:54:34 (engine) test 
23:54:34 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:34 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:34 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:34 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 86.8333333333 ID = 4
23:54:34 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:34 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.416666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":95.51666666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(95.5166666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 95.5166666667 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(222.758333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.2,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":112.88333333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(112.883333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 112.883333333 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(231.441666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":121.56666666666669,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(121.566666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 121.566666667 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(121.566666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":130.25000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(130.25)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 130.25 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(130.25)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":138.93333333333337,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(138.933333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 138.933333333 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(138.933333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":147.6166666666667,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(147.616666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 147.616666667 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(147.616666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:35 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.30000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:35 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:35 (engine) [SQL]->Connecting to database:
23:54:35 (engine) [SQL]->Connection OK!
23:54:35 (engine) test 
23:54:35 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:35 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:35 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:35 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:54:35 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:35 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":164.9833333333334,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(164.983333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 164.983333333 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(164.983333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":173.66666666666674,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(173.666666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 173.666666667 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(173.666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":182.35000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(182.35)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 182.35 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(182.35)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":191.03333333333342,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(191.033333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 191.033333333 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(191.033333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":199.71666666666675,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(199.716666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 199.716666667 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(199.716666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:36 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":217.08333333333343,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:36 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(217.083333333)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:36 (engine) [SQL]->Connecting to database:
23:54:36 (engine) [SQL]->Connection OK!
23:54:36 (engine) test 
23:54:36 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:36 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:36 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:36 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 217.083333333 ID = 4
23:54:36 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:36 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(217.083333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":225.76666666666677,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:37 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(225.766666667)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:37 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:37 (engine) [SQL]->Connecting to database:
23:54:37 (engine) [SQL]->Connection OK!
23:54:37 (engine) test 
23:54:37 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:37 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:37 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:37 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 225.766666667 ID = 4
23:54:37 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:37 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(225.766666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:37 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":234.4500000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:37 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(234.45)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:37 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:37 (engine) [SQL]->Connecting to database:
23:54:37 (engine) [SQL]->Connection OK!
23:54:37 (engine) test 
23:54:37 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:37 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:37 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:37 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 234.45 ID = 4
23:54:37 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:37 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(234.45)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:44 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:44 (engine) [SQL]->Connecting to database:
23:54:44 (engine) [SQL]->Connection OK!
23:54:44 (engine) test 
23:54:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:44 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 1
23:54:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Rate = 133.333333333
23:54:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(133.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:44 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:44 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:44 (engine) [SQL]->Connecting to database:
23:54:44 (engine) [SQL]->Connection OK!
23:54:44 (engine) test 
23:54:44 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:44 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:44 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:44 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 1
23:54:44 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:44 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(131.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":1}}"
}

23:54:45 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(1)
}

23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 1
23:54:45 (engine) [SQL]->Connecting to database:
23:54:45 (engine) [SQL]->Connection OK!
23:54:45 (engine) test 
23:54:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 1
23:54:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:45 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 1
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 800000 Minimum Rate = 66.6666666667 AvrgRate = 133.333333333
23:54:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(1)
    ["Price"]=>
    float(72.94)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":2}}"
}

23:54:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(2)
}

23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 2
23:54:45 (engine) [SQL]->Connecting to database:
23:54:45 (engine) [SQL]->Connection OK!
23:54:45 (engine) test 
23:54:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 2
23:54:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 2
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 400000 Rate = 66.6666666667
23:54:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(2)
    ["Price"]=>
    float(66.6666666667)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":3}}"
}

23:54:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(3)
}

23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 3
23:54:45 (engine) [SQL]->Connecting to database:
23:54:45 (engine) [SQL]->Connection OK!
23:54:45 (engine) test 
23:54:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 3
23:54:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 3
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 600000 Rate = 100
23:54:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(3)
    ["Price"]=>
    float(100)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:45 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(106) "{\"action\":\"TaxPayer.Agent.RequestProgramPrice\",\"data\":{\"ID\":92,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:45 (engine) [JSON (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:45 (engine) [SQL]->Connecting to database:
23:54:45 (engine) [SQL]->Connection OK!
23:54:45 (engine) test 
23:54:45 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:45 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:45 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - New program for Tax payer, calculating price. ID = 4
23:54:45 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Rate = 233.333333333
23:54:45 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(233.333333333)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":62.52,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(62.52)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 62.52 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(206.26)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":72.94,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(72.94)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 72.94 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(211.47)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":83.36,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(83.36)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 83.36 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(216.68)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":93.78,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(93.78)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 93.78 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(221.89)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":104.19999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(104.2)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 104.2 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(227.1)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":114.61999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(114.62)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 114.62 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(232.31)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":125.03999999999999,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(125.04)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 125.04 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(125.04)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:46 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":135.45999999999998,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:46 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(135.46)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:46 (engine) [SQL]->Connecting to database:
23:54:46 (engine) [SQL]->Connection OK!
23:54:46 (engine) test 
23:54:46 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:46 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:46 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:46 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 135.46 ID = 4
23:54:46 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:46 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(135.46)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(136) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":145.88,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(145.88)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 145.88 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(145.88)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(135) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":156.3,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(156.3)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 156.3 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(156.3)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":166.72000000000003,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(166.72)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 166.72 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(166.72)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":177.14000000000004,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(177.14)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 177.14 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(177.14)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":187.56000000000006,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(187.56)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 187.56 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(187.56)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":197.98000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(197.98)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 197.98 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(197.98)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:47 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(147) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":208.4000000000001,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:47 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(208.4)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:47 (engine) [SQL]->Connecting to database:
23:54:47 (engine) [SQL]->Connection OK!
23:54:47 (engine) test 
23:54:47 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:47 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:47 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:47 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 208.4 ID = 4
23:54:47 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:47 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(208.4)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":218.82000000000005,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(218.82)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:48 (engine) [SQL]->Connecting to database:
23:54:48 (engine) [SQL]->Connection OK!
23:54:48 (engine) test 
23:54:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 218.82 ID = 4
23:54:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(218.82)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":229.24000000000007,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(229.24)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:48 (engine) [SQL]->Connecting to database:
23:54:48 (engine) [SQL]->Connection OK!
23:54:48 (engine) test 
23:54:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 229.24 ID = 4
23:54:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(229.24)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:54:48 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(148) "{\"action\":\"TaxPayer.Agent.RequestProgramLowerPrice\",\"data\":{\"ID\":92,\"ProposedPrice\":239.66000000000008,\"TaxPayerID\":12,\"ProgramID\":4}}"
}

23:54:48 (engine) [JSON (TaxPayer.Agent.RequestProgramLowerPrice)]->array(4) {
  ["ID"]=>
  int(92)
  ["ProposedPrice"]=>
  float(239.66)
  ["TaxPayerID"]=>
  int(12)
  ["ProgramID"]=>
  int(4)
}

23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving program details. ID = 4
23:54:48 (engine) [SQL]->Connecting to database:
23:54:48 (engine) [SQL]->Connection OK!
23:54:48 (engine) test 
23:54:48 (engine) [SQL]->Exec:SELECT * 
		FROM TaxProgramTable tpt
		WHERE  ID = 4
23:54:48 (engine) [SQL]->Exec [Done]:Resource id #17
23:54:48 (engine) [AGENT]->AgentProgramPrice - Retrieving last year program details. ID = 
23:54:48 (engine) [AGENT]->AgentRequestProgramLowerPrice - Trying to lower Tax payer price 239.66 ID = 4
23:54:48 (engine) [AGENT]->AgentRequestProgramPrice - Details: users = 15000 Budget = 1400000 Minimum Rate = 116.666666667 AvrgRate = 233.333333333
23:54:48 (engine) [RESPONSE (TaxPayer.Agent.RequestProgramLowerPrice)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(3) {
    ["ID"]=>
    int(4)
    ["Price"]=>
    float(239.66)
    ["Type"]=>
    int(0)
  }
  ["total"]=>
  int(1)
}

23:56:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:56:38 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:56:38 (engine) [SQL]->Connecting to database:
23:56:38 (engine) [SQL]->Connection OK!
23:56:38 (engine) test 
23:56:38 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:56:38 (engine) [SQL]->Exec [Done]:Resource id #16
23:56:38 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:56:38 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(123) "{\"action\":\"TaxPayer.TaxProgramStatsGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":91,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:56:38 (engine) [JSON (TaxPayer.TaxProgramStatsGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(91)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:56:38 (engine) [SQL]->Connecting to database:
23:56:38 (engine) [SQL]->Connection OK!
23:56:38 (engine) test 
23:56:38 (engine) [SQL]->Exec:SELECT  tp.ID, inst.Name AS 'Institution', tp.Name, tpt.YearsRequired AS 'YearsLeft', tp.MinimumYears, tpt.CalculatedTaxAmount

FROM TaxProgramTable tp

LEFT JOIN TaxPayerProgramTable tpt ON tpt.TaxPayerID = 12 AND tp.ID = tpt.TaxProgramID

LEFT JOIN InstitutionBudgetTable ib ON ib.ID = tp.InstitutionBudgetID AND ib.TaxYearID = 91

LEFT JOIN InstitutionTable inst ON inst.ID = ib.InstitutionID

WHERE tpt.ConfirmedDate IS NOT NULL AND ib.ConfirmedDate IS NOT NULL
 LIMIT 0 , 100
23:56:38 (engine) [SQL]->Exec [Done]:Resource id #16
23:56:38 (engine) [RESPONSE (TaxPayer.TaxProgramStatsGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(5) {
    [0]=>
    array(6) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(3) "120"
    }
    [1]=>
    array(6) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(3) "231"
    }
    [2]=>
    array(6) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["CalculatedTaxAmount"]=>
      string(2) "89"
    }
    [3]=>
    array(6) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["CalculatedTaxAmount"]=>
      string(3) "110"
    }
    [4]=>
    array(6) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["CalculatedTaxAmount"]=>
      string(2) "78"
    }
  }
  ["total"]=>
  int(1)
}

23:56:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(54) "{\"action\":\"TaxPayer.GetInfo\",\"data\":{\"ID\":12}}"
}

23:56:44 (engine) [JSON (TaxPayer.GetInfo)]->array(1) {
  ["ID"]=>
  int(12)
}

23:56:44 (engine) [SQL]->Connecting to database:
23:56:44 (engine) [SQL]->Connection OK!
23:56:44 (engine) test 
23:56:44 (engine) [SQL]->Exec:SELECT * FROM `TaxPayerTable` WHERE ID = 12
23:56:44 (engine) [SQL]->Exec [Done]:Resource id #16
23:56:44 (engine) [RESPONSE (TaxPayer.GetInfo)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(1) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(2) "12"
      ["Name"]=>
      string(15) "Mattis Sagittis"
      ["Code"]=>
      string(6) "T10012"
      ["Income"]=>
      string(4) "2605"
      ["ParentID"]=>
      NULL
      ["DateOfCreation"]=>
      string(10) "1931-05-06"
      ["Type"]=>
      string(1) "0"
    }
  }
  ["total"]=>
  int(1)
}

23:56:44 (engine) [REQUEST] (Array) <-array(1) {
  ["json"]=>
  string(118) "{\"action\":\"TaxPayer.TaxProgramGrid\",\"data\":{\"ItemsOffset\":0,\"ID\":92,\"TaxPayerID\":12,\"ItemsPerPage\":100}}"
}

23:56:44 (engine) [JSON (TaxPayer.TaxProgramGrid)]->array(4) {
  ["ItemsOffset"]=>
  int(0)
  ["ID"]=>
  int(92)
  ["TaxPayerID"]=>
  int(12)
  ["ItemsPerPage"]=>
  int(100)
}

23:56:44 (engine) [SQL]->Connecting to database:
23:56:44 (engine) [SQL]->Connection OK!
23:56:44 (engine) test 
23:56:44 (engine) [SQL]->Exec:/* Current year programs */
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, 0 AS 'YearsLeft', tpt.MinimumYears, 0 AS 'TaxRate',
										 (SELECT Count(1) FROM TaxPayerProgramTable tppt WHERE tppt.TaxProgramID = tpt.ID AND tppt.TaxPayerID = 12) AS 'IsSelected'
										 
										 FROM TaxProgramTable tpt
										 
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 WHERE inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 92
										 
										 /* Add Previous year programs */
										 UNION ALL
										 
										 SELECT tpt.ID,inst.Name AS 'Institution', tpt.Name, tppt.YearsRequired AS 'YearsLeft', tpt.MinimumYears, tppt.CalculatedTaxAmount AS 'TaxRate', 2 AS 'IsSelected'
										 FROM TaxPayerProgramTable tppt 
										 
										 LEFT JOIN TaxProgramTable tpt ON tpt.ID = tppt.TaxProgramID
										 LEFT JOIN InstitutionBudgetTable inb ON inb.ID = tpt.InstitutionBudgetID
										 LEFT JOIN InstitutionTable inst ON inst.ID = inb.InstitutionID
										 
										 WHERE TaxPayerID = TaxPayerID AND inb.ConfirmedDate IS NOT NULL AND inb.TaxYearID = 
										 (SELECT ID FROM TaxYearTable
										  WHERE ID < 92
										  ORDER BY ID DESC LIMIT 0,1)
										  LIMIT 0 , 100
23:56:44 (engine) [SQL]->Exec [Done]:Resource id #16
23:56:44 (engine) [RESPONSE (TaxPayer.TaxProgramGrid)]->array(3) {
  ["result"]=>
  string(2) "OK"
  ["data"]=>
  array(8) {
    [0]=>
    array(7) {
      ["ID"]=>
      string(1) "7"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(10) "Moonwalk 1"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [1]=>
    array(7) {
      ["ID"]=>
      string(1) "8"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [2]=>
    array(7) {
      ["ID"]=>
      string(1) "9"
      ["Institution"]=>
      string(24) "Ministry of the interior"
      ["Name"]=>
      string(7) "Nothing"
      ["YearsLeft"]=>
      string(1) "0"
      ["MinimumYears"]=>
      string(1) "1"
      ["TaxRate"]=>
      string(1) "0"
      ["IsSelected"]=>
      string(1) "0"
    }
    [3]=>
    array(7) {
      ["ID"]=>
      string(1) "1"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "120"
      ["IsSelected"]=>
      string(1) "2"
    }
    [4]=>
    array(7) {
      ["ID"]=>
      string(1) "2"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(3) "231"
      ["IsSelected"]=>
      string(1) "2"
    }
    [5]=>
    array(7) {
      ["ID"]=>
      string(1) "3"
      ["Institution"]=>
      string(21) "Ministry of education"
      ["Name"]=>
      string(12) "Free Stuff 3"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "2"
      ["TaxRate"]=>
      string(2) "89"
      ["IsSelected"]=>
      string(1) "2"
    }
    [6]=>
    array(7) {
      ["ID"]=>
      string(1) "4"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 1"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(1) "5"
      ["TaxRate"]=>
      string(3) "110"
      ["IsSelected"]=>
      string(1) "2"
    }
    [7]=>
    array(7) {
      ["ID"]=>
      string(1) "5"
      ["Institution"]=>
      string(15) "Social Ministry"
      ["Name"]=>
      string(17) "Free Everything 2"
      ["YearsLeft"]=>
      string(2) "10"
      ["MinimumYears"]=>
      string(2) "15"
      ["TaxRate"]=>
      string(2) "78"
      ["IsSelected"]=>
      string(1) "2"
    }
  }
  ["total"]=>
  int(1)
}

