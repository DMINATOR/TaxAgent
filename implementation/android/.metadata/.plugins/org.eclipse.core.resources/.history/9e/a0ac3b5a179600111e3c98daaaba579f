package com.dmitrikuznetsov.ttu.taxagent;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;

import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.TableLayout;
import android.widget.TextView;

import com.dmitrikuznetsov.dklib.tools.localization.Translate;
import com.dmitrikuznetsov.dklib.tools.log.LogWriter;
import com.dmitrikuznetsov.dklib.ui.base.DKActivityBase;
import com.dmitrikuznetsov.dklib.ui.base.DKDialog;


/**
 * Shows stats for the selected tax year
 * 
 * @author dmitrikuznetsov
 *
 */
public class TaxYearStatsActivity  extends DKActivityBase
{
	
	public static final String 	EXTRA_INT_TAX_PAYER_ID			=	"EXTRA_INT_TAX_PAYER_ID";
	public static final String 	EXTRA_INT_TAX_YEAR_ID			=	"EXTRA_INT_TAX_YEAR_ID";
	public static final String 	EXTRA_INT_TAX_YEAR_VALUE		=	"EXTRA_INT_TAX_YEAR_VALUE";
	
	/**
	 * ID of tax payer, passed
	 */
	public int TaxPayerID = -1;
	
	/**
	 * ID of tax year
	 */
	public int TaxYearID = -1;
	
	
	/**
	 * Found year value
	 */
	public int YearValue = -1;
	
	/**
	 * Storage for storing settings
	 */
	SharedStorage storage = null;
	
	//Array of tax years
	JSONArray array = null;
	
	
	TextView tbTaxYearIncome = null;
	TextView tbTaxYearStats = null;
	TextView tbTaxYearTax = null;
	TableLayout tableTaxProgramStats = null;
	
	/**
	 * Indicates that this activity was opened first
	 */
	boolean	firstRun = true;
	
	@Override 
	public int getDefaultLayout() 
	{
		return R.layout.taxyearstatslayout;
	}
	
	
	/**
	 * Called when activity is created
	 */
	public void onCreated()
	{
		try 
		{
			//find ui elements on the form:
			tbTaxYearIncome 		= (TextView)this.getElementById(R.id.tbTaxYearIncome);
			tbTaxYearStats 			= (TextView)this.getElementById(R.id.tbTaxYearStats);
			tbTaxYearTax 			= (TextView)this.getElementById(R.id.tbTaxYearTax);
			tableTaxProgramStats	= (TableLayout)this.getElementById(R.id.tableTaxProgramStats);
			
			//tbTaxYearIncome				= (ListView)this.getElementById(R.id.listViewTaxPayerYears);
	
			//lvTaxYearGrid.setOnItemClickListener( clickListener );
			
			TaxPayerID = getIntent().getExtras().getInt( TaxYearStatsActivity.EXTRA_INT_TAX_PAYER_ID );
			TaxYearID = getIntent().getExtras().getInt( TaxYearStatsActivity.EXTRA_INT_TAX_YEAR_ID );
			YearValue = getIntent().getExtras().getInt( TaxYearStatsActivity.EXTRA_INT_TAX_YEAR_VALUE );
			
			tbTaxYearStats.setText("Stats for year: " + YearValue);
		} 
		catch (Exception e)
		{
			DKDialog.ShowMessage(this,
					Translate.translate("Error") , 
					Translate.translate("Loading default activitiy failed!"),
					Translate.translate("OK"),
					Translate.translate("Cancel"));
			
			LogWriter.writeException(this, e.getMessage(), e);
		}
	}
	
	
	protected void onPause() 
	{
	    super.onPause();
	    	
	    //destroy storage
	    storage = null;
	}
	
	
	protected void onResume() 
	{
	    	super.onResume();
	    	
	    	try
	    	{
	    		storage = new SharedStorage(this);
	    		
	    		//populate data but only for the first time !
	    		if( firstRun )
	    		{
	    			//populate with the values
	    			loadInfo();	
	    			
	    			firstRun = false;
	    		
	    		}
	    		
	    	}
	    	catch(Exception ex)
	    	{
	    		DKDialog.ShowMessage(this,
						Translate.translate("Error") , 
						Translate.translate("Reading settings activitiy failed!"),
						Translate.translate("OK"),
						Translate.translate("Cancel"));
				
				LogWriter.writeException(this, ex.getMessage(), ex);
	    	}

	 }
	
	
	/**
	 * Loads detailed tax payer info
	 */
	public void loadInfo()
	{
		//try to connect
    	try
    	{	
    		
    		HTTPConnection connection = new HTTPConnection(  storage.getServerURL() );
    		JSONObject response = connection.connectJSON( Engine.TaxProgramStatsGrid( TaxYearID, TaxPayerID ) );
    		storage.setLastServerResponse( response.toString() );
    		
    		//retrieve the array of items
    		array = response.getJSONArray("data");
    		
    		//tbTaxYearStats.
    		/*
    		List<String> items = new ArrayList<String>();
    		
    		for(int i = 0; i < array.length(); i++ )
    		{
    			JSONObject subObject = array.getJSONObject(i);
    			
    			items.add( String.valueOf(subObject.getInt("Year")));
    		}*/

    		//specify changes
    		//lvTaxYearGrid.setAdapter(new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, items ));

    	}
    	catch(Exception ex)
    	{
    		DKDialog.ShowMessage( this,
					Translate.translate("Error") , 
					Translate.translate("Connection failed: " + ex.getMessage()),
					Translate.translate("OK"),
					Translate.translate("Cancel"));
			
			LogWriter.writeException( this, ex.getMessage(), ex);
			
			storage.setLastServerResponse( ex.toString() );
		
    	}
	}
	
}
